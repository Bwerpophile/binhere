%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: m0032-13.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For:  
%%CreationDate: 12/5/2018
%%BoundingBox: 0 0 1200 1000
%%HiResBoundingBox: 0 0 1200 1000
%%CropBox: 0 0 1200 1000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.1 x540 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 108 8%%BeginData: 8510 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDE2FF
%A9A9A9FD7BFFAF5B85618585FD78FFA9855B615B855B855BA9AFFD74FF85
%855B855B855B855B856185A9FD70FFAFA95B615B85FD075B855B855BAFFD
%6DFFA9855B855B855B7F5B5B5B7F5B5B5B85618561A9AFFD69FFAF5B85FD
%115B855A8585FD67FF855B855B855B855B5B5B855B5B5B855B7F5B855B85
%5BFD0485AFFD63FF8585FD175B8561855B85A9FD5FFFAF5B855B855B5B5B
%7F5B5B5B7F5B5B5B7F5B7F5B855B855B855B855B856185618585FD5CFFA9
%85FD1D5B855B855A8561AFA9FD58FF85855B855B7F5B855B5B5B855B5B5B
%855B5B5B855B855B855B855B855B855B855B855BFD04858BAFFD55FFA9FD
%0D5B857FFD0A5B855B5B5B855B615B855B855B856185618585FD52FFA985
%5B5B5B855B5B5B7F5B5B5B7F85FFFFFF5B5B5B7F5B7F5B857F857F855B85
%5B855B855B855B855B8561FD0485FD50FF7FFD0D5B5AAFA9FFA8A97E847E
%A884A87EFD05A884855A855B855B855B855B856185608585FD45FFA8FD08
%FFAF7F5B855B5B5B855B5B5B857EA9A8FFAFFFFFFFAFFD04A8AFA8FFA8A8
%A8AFA8FFA8FFA8FFA8AFA9A9FD0585AFAFAFFD45FF2CAEFD08FF857FFD07
%5B7F7DA8A8FFAFFFA9FFA8FFFD06A884FD08A8AFA8A8A8AF8585618585AF
%858BA9FD44FFA83358FD07FFA98585A95B855B5B7EA8A8A87EA8FD08FFA8
%AFA8FFFD07A8AFA8AFA8FFA8A961FD0485AF858BA9FD45FF832C33FD08FF
%7F7F5BA97F5B5B5B5AA87DA884FFA8FFA8FFA8FFFD10A8848561855AA985
%8585AFA9FD46FF57332CFD09FFA9855B85A9855B855B8584A8A8FFFFFFAF
%FFAFFFA8FFA8FFA8FFA8FFA8FFA8FFA8A9FD0585AF858B85FD48FFA8332C
%3358FD0AFFA95B857FA95B5B5B7F7EAFA8FFA8FFA8A8A8AFFD07A8AFA8A8
%A88561855BFD05855B5BFD48FFA733573358FD0BFF855B855B8585855B85
%7EFFCAFFA8AFA8AFA8FFA8FFA8FFA8AFA8AF8485618585AF858B85855B7F
%5BFD48FF57332D5733AEFD0AFF5B5B5B855B8585855BA8A8CFA8A8A8FFA8
%A8A8AFFD06A85A855B8585AF85855B7FFD045BFD47FFCF573358335783FD
%0AFFA95B855B855B85C6CCA8AFA8A884FFA8FFA8FFA8A8A8FFA885618585
%85A9AF85855B855B7F5B8585FD43FFAEFFFFFFAE33573357335EFD0AFF85
%FD055B7CC6C7A884A9845B5AA9A8A8A8AFA8A87E855B855BAFFD0485FD07
%5B85FD43FF57FFFFFFAE5E3358335E58FD0AFFA95B5B5B7F5B849EC98585
%A8A95B855B85A8FFA88561855B8585AF8585857F5B7F5B5B5B855B5B7FFD
%42FFA82C58FFFFA82C3333332C58FD0AFF84FD055B5858585F5AA87EA985
%615B8584855B855BFD0585FD0B5B85FD42FFA82C57FFFF58572D332C572D
%FD0BFF5B5B5B855B83335E5EFFA8A98585A9855B855B8585AFFD04855B85
%5B855B855B855B855B8585FD42FF58332CCFFF332C332D332C33A7FD09FF
%A9FD055B59573383A8855B855B8585A9858585A98585FD0D5B855BA9FD15
%FFAEAEFD2BFF57335783AE3357335733573383FD0AFF5B7F5B5B5B5A3358
%33585B5B5B855BFD07855B5B5B855B7F5B855B855B855B855B85A9FD15FF
%58A8FD2AFFA82D573358A85733333357333358FFFFFFA8FD05FFAFFD055B
%3657333333FD065B855B85FD0A5B7FFFA9857FFD045BAFFD15FF2D57FD2A
%FF8258335833FF3358335E335833A7FD0AFF5B855B5B5B85335733575B5B
%5B855B5B5B855B855B855B855B855BA9AFFF85AFFFA95B855B85AFFD14FF
%A82C33FD2AFF58335733577D332C332D572D3333FD0AFFFD065B332C332C
%FD0C5B7F5B5B5BAFFFFFA9855BFF5B855B615BFD15FF58332CA8FD29FF58
%57335733582D5733332D573333A8FD09FF5B5B5B7F5B5B042D2C275B7F5B
%5B5B7F5B855B855B855B8585FFFFFFAF855B85A9A95B855B85AFFD14FF57
%333358FD29FF332C2D2C332C332C332D332C332D83FD09FF85FD055BFD04
%F8FD0E5BAFFD04FF5B5BA9AFFF855B855BFD14FFA82C332C33FD28FFAE33
%5733573357335733573357335758FD09FF7F5B5B855B5B2727F82630855B
%5B5B855B855B855B855B85FD04FFA9FFAFFD04FF855B85FD14FF83573357
%33AEFD27FF83573333335733573357335733573357FD09FF85FD055B27F8
%26F85AFD095B855B5B85FFFFFF85FFA985FD04FFA9855BFD14FF58335733
%5758FD27FFA8335833573357335733583357335858FD08FF9FA5855B5B5B
%7F2726F8275B5B5B7F5B5B5B855B855B855BFD04FF858585FD06FF5B85FD
%14FF335733583358FD27FF58332C572D332C5833573357335758FD08FFCF
%A4C6A0FD045B27F8F8F8FF85FD065B855B615B85FFFFFFAF5B615BAFFD04
%FFA98585FFFFFFA8FD0FFFA8573357335757FD27FF58335733573357A7FF
%832D2DCFFD0AFFCFC7C9CA5B5B5B85F827F852A6CE59855B5B5B855B855B
%85A9FFFFFF85855B8585FD04FF8561AFFD14FF2D5733583358FD26FFCF33
%332D5733332D82FFA8F852FD0CFF7BCA7D535B5B302626F82F7F9E54FD05
%5B855B855B85A98585855B855B8585FFFFFF5B8585FD07FFAFFD0BFF7D33
%2C332C332CFD26FF835733573357335733FFA82627FD0CFF27204BF85B5B
%5AF851F8847D9E5B5B5B7F5B5B5B8585FD04AF855B8561A9AFFFFFFF8585
%85AFFD13FF822D5733332D5783FD22FFA8FFFFFF3357335733573383FFA8
%F827FD0CFF27F8F804F852A8F827F87AC627FD065B855BFFA9855BFF8585
%5A85A9A95AFFAF855A8585FD09FFA8FD09FF2D332C332D332C58FD27FF58
%5E335E5783FFFFA85252FD0CFF7DF826F827A8CA2776F885A45A2F535A85
%5B855B85A9AF6185AF8585FF85AF6185A9AF618585AFFD12FFCF58335833
%57335857FD29FFF852FD13FF7626207054859F987C526F7A5B27F8285B5B
%5B855BFF6185A9A9A9FFFFAF858561AF85855B85A9FD0DFFA8FD05FF3357
%335733573382FD29FFF87DFD13FF938C8C8C5B5BC653A198C7515B6F2728
%5B5B856185A9A985FD05FFA9AF85FFFD048561FD13FFA857335733573333
%33FD1CFFA8FD0BFFA8F852FD13FF8C8C688C537E9E7F5B5B9E545B76267C
%5A5B5B8585FD08FF85A9AF61855A856185A9FD11FFAF832C332C332C332C
%33A8FD28FF52A8FD12FFCA8C8CB48C7E7CC6C9AF7D9E5B7F9FC0C09F5B85
%8585A9FD07FF85AFA9FD0685FD13FF57573357335733573383FD3CFFCAFD
%048C54A42EA7A4C72D5B9EC09EC09F5B5B856185A9FD04FFAF8585618561
%8561855A27F86F939AA8FD0DFFA8332D5733332D57333333FD3CFFCAB58C
%938C7F9E855B85A4545AC6C0C69EA75B8561858585FFFFAF8561FD08852E
%F826518C8C8CA1FD0CFFAE33573357335733573357AEFD1CFFA8FD1FFF8C
%938C937CC6A6A97D7A5BA09EC69EC67C5B5B855A8561A984856185608561
%85608561854CF85176FD048CA1FD0BFF8357335733573357335733FD3DFF
%BC93B593C62FA7A5C751A7FD05C6A75BFD0A858B8585858B8585859A4B51
%98B58C8C8CB5FD0CFF835E335E5758335E58AEFD3DFF93B593BB9E7F5B7E
%749FC6A49EC6C6C6595B5B8561856185618585856185858561858585688C
%CAC292BB8C8C8CCAFD0DFFAE582D26A7A8FFAFFD3DFFCA9AC3A0C6A6AF7D
%757D855BA5C6C6C6595BFD08858B8585858B8585858B859293FFA826266F
%8CB59AFD0BFF5858335EF827FD27FFA8FD19FFCACAA8C62E7D9EC72D5B5B
%5B277A7450285B5B85618560856185608561856085618560858C9AA852F8
%F8F8938CA1FD0AFF58333357332DF8FD07FFA8FD39FFCFCFCF9E7F5B859E
%5A5B855B28F827F8535BFD04858B8585858B8585858B8585858BA2B5C3FF
%2627F89A936FFD0AFF33332D57335E3327FD2BFFA8FD14FFCFC7FF9FC6A6
%A97D9EFD045B05F8F826305B5B8585856185858561858585618585A9A8CA
%92CAA827A8CAA199A1FD0AFF572D333357335727FD07FFA8FD24FFAFFD13
%FF7CA7A8C67CCEC7C7517F5B5B5B2FF826F85A5B85858B8585858B858585
%8B858585FD04FFCAFFA8F852CAFF52FD0CFF582C332D5783FD2EFFA8FD11
%FFA858A8A79E83A8CF9E7DFD045B28F8F8F82F5B5B856085618560856185
%6085A8FD05FFA8FFA8F8F8F852A8FD0CFFA8FF8383A8FD07FFA8FD3AFFA8
%FFA67AA8FFC9A5FFFF855B5B5AF826F8535B85858B8585858B858585AFFD
%0AFF5127F82627FD44FFA8FD10FFC9A8FFFFC875FFA8FFA87F302605F828
%5B5B8561858585618584FD0CFFA8F852F8F8F8A8FD12FFA8FD44FF9EA8FD
%05FFA9F82827285BFD04858B85AFA8FD0EFF2752A8272627FD46FFA8FD0F
%FFCAA0A8FD06FFFD04275B5B85618584AFAFFD0FFF587CA8FF52F87DFD0D
%FFA8FD50FFFD04525B858585A9FD11FFA7C67BFFA8CA9EA6FD5DFFA85227
%5858AF5BA9A8FD0DFFA8A8A8FFFFFF7DAFA8FF7D7BA8FD0BFFAFFD52FF58
%58A8FD11FFA8A8A8A9A8FFFFFFA8FFA8FD4EFFAFFD11FFA8FFA8FFA8FD0E
%FFA87DA884A884A8A8FD0FFFA8FD69FFAFFD05A8FD58FFAFFD23FFA8A8A8
%FFA8FD0BFFAFFD70FFA8FD5EFFA8FD2BFFA8FDFCFFFDDDFFA8FD1FFFA8FD
%E3FFA8FD17FFA8FDEBFFA8FD11FFA8FDFBFFA8FDF7FFA8FFA8FFAFFDFCFF
%FDFCFFFDFCFFFDFCFFFD46FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 13 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">m0032</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-12-05T16:56:28+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-12-05T16:56:29+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-12-05T16:56:29+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>172</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgArAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9U4q7FUNe3y2z20YXnLdTCGNa0/ZLuf9iiMctx4+Kz0iL/R95YSlVeaJypm7&#xA;FXYq7FXYq7FVjSgNxALN14jsPeu2VyyAGuZSIuEo5BWBQn7NaUPyIJxGXeiKTwr8sYuxV2KqdwJC&#xA;oEbBXJ2JrToetCDlWQWR7/0FIbWP4RyJLU+IgsBX23w+GPP5lbb9NfFv+Cb+uPhjz+ZW3ekvi3/B&#xA;N/XD4Y8/mVtZJCShEblH7MSzAfRUY+GPP5leJC308drDErT8Z5ZI4UJLfE8hoPh5D3PXI5NLknE+&#xA;GakN7NkbfFRljE+pEPbyFFCSFHBHNqsQR3AHIUrjHHtvz95/WkydJbuWQpIVUH4wSxqKjoeQpkvD&#xA;Hn8yjiK+Cvp0JJozAEmpoGIGOPl8/vTLmww+XdL1jzn5ga9t0neCOyEHqVKr6kbFtgR/IMxhijPL&#xA;LiF8nAGKM8suIXyTceQPJ9BXSoSe/wBr+uW/lsfc3flcfc7/AJV/5M/6tMP/AA39cfy2PuX8tj7m&#xA;j+Xvks/9KmD/AIb+uP5bH3L+Wx9y0/l15IPXSIPub+uP5XH3Bfy2PuQ7/l35IiZ5LjTLQQU+EcHD&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:a78ad283-1d09-a942-9e3a-a254557e4918</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:a78ad283-1d09-a942-9e3a-a254557e4918</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:9d71b7af-a211-9545-9b50-37d3804a0431</stRef:instanceID>
            <stRef:documentID>xmp.did:9d71b7af-a211-9545-9b50-37d3804a0431</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5a3f8942-4318-0549-a4a2-5c5ed66ea836</stEvt:instanceID>
                  <stEvt:when>2018-06-05T15:48:41+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a78ad283-1d09-a942-9e3a-a254557e4918</stEvt:instanceID>
                  <stEvt:when>2018-12-05T16:56:29+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1200.000000</stDim:w>
            <stDim:h>1000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 2</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=71 G=170 B=80 2</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>71</xmpG:red>
                           <xmpG:green>170</xmpG:green>
                           <xmpG:blue>80</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=37 G=114 B=25 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>37</xmpG:red>
                           <xmpG:green>114</xmpG:green>
                           <xmpG:blue>25</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=196 B=5 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>196</xmpG:green>
                           <xmpG:blue>5</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=231 G=75 B=77 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>231</xmpG:red>
                           <xmpG:green>75</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=18 B=5 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>18</xmpG:green>
                           <xmpG:blue>5</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=99 G=155 B=255 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>99</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=223 G=229 B=229 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>223</xmpG:red>
                           <xmpG:green>229</xmpG:green>
                           <xmpG:blue>229</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=186 G=191 B=191 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>191</xmpG:green>
                           <xmpG:blue>191</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 1</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=62 G=129 B=255 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>62</xmpG:red>
                           <xmpG:green>129</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=45 G=50 B=226 2</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>45</xmpG:red>
                           <xmpG:green>50</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=19 G=26 B=109 2</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>19</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=177 B=235 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>177</xmpG:green>
                           <xmpG:blue>235</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=229 G=229 B=229 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>229</xmpG:red>
                           <xmpG:green>229</xmpG:green>
                           <xmpG:blue>229</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 3</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=133 G=210 B=249 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>133</xmpG:red>
                           <xmpG:green>210</xmpG:green>
                           <xmpG:blue>249</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=99 G=155 B=255 2</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>99</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 4</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=254 G=219 B=24 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>254</xmpG:red>
                           <xmpG:green>219</xmpG:green>
                           <xmpG:blue>24</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=240 G=164 B=29 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>240</xmpG:red>
                           <xmpG:green>164</xmpG:green>
                           <xmpG:blue>29</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=65 B=67 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>65</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1000 li
1200 1000 li
1200 0 li
cp
clp
1200 1000 mo
7.1425e-05 1000 li
7.1425e-05 0 li
1200 0 li
1200 1000 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
586.366 680.313 mo
590.064 682.479 li
481.422 745.325 li
477.723 743.159 li
586.366 680.313 li
cp
.113375 .0542306 .0740063 0 cmyk
f
553.26 661.141 mo
556.958 663.306 li
448.316 726.151 li
444.618 723.986 li
553.26 661.141 li
cp
f
317.822 559.439 mo
324.062 563.043 324.062 568.885 317.822 572.487 cv
311.58 576.091 301.462 576.091 295.221 572.488 cv
288.981 568.885 288.981 563.043 295.222 559.439 cv
301.463 555.837 311.581 555.837 317.822 559.439 cv
cp
f
252.702 594.98 mo
258.943 598.584 258.942 604.426 252.701 608.028 cv
246.461 611.632 236.343 611.632 230.102 608.028 cv
223.861 604.426 223.861 598.584 230.102 594.98 cv
236.343 591.378 246.461 591.378 252.702 594.98 cv
cp
f
1022.12 682.378 mo
1028.18 685.875 1028.18 691.545 1022.12 695.042 cv
1016.07 698.539 1006.24 698.54 1000.19 695.042 cv
994.13 691.545 994.131 685.875 1000.19 682.378 cv
1006.25 678.88 1016.07 678.88 1022.12 682.378 cv
cp
f
532.048 366.395 mo
532.001 365.396 li
533.296 365.336 534.617 365.305 535.927 365.304 cv
536.023 365.804 li
536.023 366.304 li
534.633 366.305 533.327 366.335 532.048 366.395 cv
cp
543.962 366.694 mo
542.641 366.565 541.307 366.468 539.996 366.403 cv
540.045 365.405 li
541.372 365.47 542.722 365.569 544.058 365.698 cv
543.962 366.694 li
cp
524.135 367.148 mo
523.992 366.158 li
525.314 365.968 526.659 365.808 527.988 365.681 cv
528.082 366.677 li
526.769 366.801 525.441 366.96 524.135 367.148 cv
cp
551.826 367.844 mo
550.531 367.59 549.213 367.365 547.908 367.175 cv
548.052 366.185 li
549.373 366.378 550.707 366.605 552.018 366.863 cv
551.826 367.844 li
cp
516.33 368.656 mo
516.093 367.686 li
517.384 367.37 518.706 367.081 520.024 366.826 cv
520.215 367.809 li
518.912 368.061 517.605 368.346 516.33 368.656 cv
cp
559.543 369.743 mo
558.278 369.366 556.988 369.016 555.707 368.7 cv
555.946 367.729 li
557.242 368.049 558.548 368.403 559.828 368.784 cv
559.543 369.743 li
cp
508.705 370.907 mo
508.376 369.964 li
509.639 369.523 510.929 369.108 512.207 368.731 cv
512.491 369.69 li
511.227 370.063 509.953 370.473 508.705 370.907 cv
cp
567.04 372.374 mo
565.813 371.877 564.562 371.403 563.323 370.969 cv
563.654 370.025 li
564.909 370.466 566.174 370.944 567.416 371.448 cv
567.04 372.374 li
cp
501.331 373.883 mo
500.913 372.975 li
502.122 372.417 503.366 371.881 504.609 371.379 cv
504.983 372.307 li
503.755 372.802 502.526 373.332 501.331 373.883 cv
cp
574.252 375.714 mo
573.08 375.102 571.881 374.511 570.686 373.958 cv
571.106 373.05 li
572.315 373.61 573.53 374.208 574.715 374.827 cv
574.252 375.714 li
cp
494.277 377.551 mo
493.775 376.686 li
494.052 376.524 li
495.118 375.909 496.21 375.31 497.299 374.744 cv
497.761 375.631 li
496.685 376.19 495.606 376.782 494.553 377.39 cv
494.277 377.551 li
cp
581.198 379.638 mo
577.733 377.64 li
578.232 376.772 li
581.698 378.771 li
581.198 379.638 li
cp
487.359 381.569 mo
486.857 380.704 li
490.316 378.695 li
490.818 379.561 li
487.359 381.569 li
cp
588.128 383.635 mo
584.663 381.637 li
585.163 380.77 li
588.628 382.768 li
588.128 383.635 li
cp
480.441 385.588 mo
479.939 384.723 li
483.398 382.713 li
483.901 383.578 li
480.441 385.588 li
cp
595.059 387.631 mo
591.594 385.633 li
592.093 384.766 li
595.558 386.764 li
595.059 387.631 li
cp
473.524 389.606 mo
473.022 388.741 li
476.481 386.731 li
476.983 387.597 li
473.524 389.606 li
cp
601.989 391.627 mo
598.524 389.629 li
599.024 388.762 li
602.488 390.76 li
601.989 391.627 li
cp
466.606 393.625 mo
466.104 392.76 li
469.563 390.75 li
470.065 391.615 li
466.606 393.625 li
cp
608.919 395.623 mo
605.454 393.625 li
605.954 392.758 li
609.419 394.756 li
608.919 395.623 li
cp
459.689 397.644 mo
459.186 396.778 li
462.645 394.769 li
463.148 395.634 li
459.689 397.644 li
cp
615.85 399.619 mo
612.384 397.621 li
612.884 396.754 li
616.349 398.752 li
615.85 399.619 li
cp
452.771 401.661 mo
452.269 400.796 li
455.728 398.787 li
456.23 399.652 li
452.771 401.661 li
cp
622.78 403.615 mo
619.315 401.617 li
619.814 400.75 li
623.28 402.748 li
622.78 403.615 li
cp
445.854 405.68 mo
445.352 404.814 li
448.81 402.806 li
449.312 403.671 li
445.854 405.68 li
cp
629.71 407.612 mo
626.245 405.614 li
626.745 404.747 li
630.21 406.745 li
629.71 407.612 li
cp
438.936 409.698 mo
438.434 408.833 li
441.893 406.824 li
442.395 407.689 li
438.936 409.698 li
cp
636.641 411.608 mo
633.176 409.61 li
633.675 408.744 li
637.14 410.741 li
636.641 411.608 li
cp
432.018 413.717 mo
431.516 412.852 li
434.975 410.843 li
435.477 411.708 li
432.018 413.717 li
cp
643.571 415.604 mo
640.106 413.606 li
640.606 412.739 li
644.071 414.738 li
643.571 415.604 li
cp
425.101 417.735 mo
424.599 416.87 li
428.058 414.861 li
428.56 415.727 li
425.101 417.735 li
cp
650.502 419.601 mo
647.036 417.602 li
647.535 416.735 li
651.001 418.733 li
650.502 419.601 li
cp
418.183 421.754 mo
417.681 420.889 li
421.14 418.879 li
421.642 419.744 li
418.183 421.754 li
cp
657.432 423.596 mo
653.967 421.599 li
654.466 420.731 li
657.931 422.729 li
657.432 423.596 li
cp
411.266 425.772 mo
410.764 424.907 li
414.223 422.897 li
414.725 423.763 li
411.266 425.772 li
cp
664.362 427.593 mo
660.897 425.595 li
661.397 424.728 li
664.862 426.726 li
664.362 427.593 li
cp
404.349 429.791 mo
403.846 428.926 li
407.305 426.916 li
407.807 427.781 li
404.349 429.791 li
cp
671.293 431.59 mo
667.827 429.592 li
668.326 428.725 li
671.792 430.723 li
671.293 431.59 li
cp
397.431 433.809 mo
396.929 432.943 li
400.388 430.935 li
400.889 431.8 li
397.431 433.809 li
cp
678.223 435.586 mo
674.758 433.588 li
675.257 432.721 li
678.722 434.719 li
678.223 435.586 li
cp
390.513 437.827 mo
390.011 436.962 li
393.47 434.953 li
393.972 435.818 li
390.513 437.827 li
cp
685.153 439.582 mo
681.688 437.584 li
682.188 436.717 li
685.653 438.715 li
685.153 439.582 li
cp
383.596 441.846 mo
383.094 440.98 li
386.553 438.972 li
387.055 439.837 li
383.596 441.846 li
cp
692.084 443.578 mo
688.618 441.58 li
689.118 440.713 li
692.583 442.711 li
692.084 443.578 li
cp
376.678 445.864 mo
376.176 444.999 li
379.635 442.99 li
380.137 443.855 li
376.678 445.864 li
cp
699.014 447.574 mo
695.549 445.576 li
696.049 444.709 li
699.513 446.707 li
699.014 447.574 li
cp
369.761 449.883 mo
369.259 449.018 li
372.718 447.009 li
373.22 447.874 li
369.761 449.883 li
cp
705.944 451.57 mo
702.479 449.572 li
702.979 448.705 li
706.444 450.704 li
705.944 451.57 li
cp
362.844 453.901 mo
362.341 453.036 li
365.8 451.026 li
366.303 451.892 li
362.844 453.901 li
cp
712.875 455.567 mo
709.409 453.569 li
709.909 452.702 li
713.374 454.7 li
712.875 455.567 li
cp
355.926 457.92 mo
355.424 457.055 li
358.882 455.045 li
359.384 455.91 li
355.926 457.92 li
cp
719.805 459.563 mo
716.34 457.565 li
716.84 456.698 li
720.305 458.696 li
719.805 459.563 li
cp
349.008 461.938 mo
348.506 461.073 li
351.965 459.063 li
352.467 459.929 li
349.008 461.938 li
cp
726.736 463.56 mo
723.27 461.562 li
723.769 460.694 li
727.235 462.692 li
726.736 463.56 li
cp
342.091 465.957 mo
341.589 465.092 li
345.047 463.082 li
345.549 463.947 li
342.091 465.957 li
cp
733.665 467.555 mo
730.201 465.558 li
730.701 464.691 li
734.165 466.688 li
733.665 467.555 li
cp
335.173 469.975 mo
334.671 469.109 li
338.13 467.101 li
338.632 467.966 li
335.173 469.975 li
cp
740.596 471.552 mo
737.131 469.554 li
737.631 468.687 li
741.096 470.685 li
740.596 471.552 li
cp
328.255 473.993 mo
327.753 473.128 li
331.212 471.119 li
331.714 471.984 li
328.255 473.993 li
cp
747.526 475.548 mo
744.061 473.549 li
744.561 472.683 li
748.026 474.683 li
747.526 475.548 li
cp
321.338 478.012 mo
320.836 477.146 li
324.295 475.138 li
324.797 476.003 li
321.338 478.012 li
cp
754.456 479.544 mo
750.992 477.547 li
751.492 476.68 li
754.956 478.678 li
754.456 479.544 li
cp
314.42 482.03 mo
313.918 481.165 li
317.377 479.156 li
317.879 480.021 li
314.42 482.03 li
cp
761.388 483.541 mo
757.922 481.543 li
758.422 480.676 li
761.887 482.674 li
761.388 483.541 li
cp
307.503 486.049 mo
307.001 485.184 li
310.459 483.175 li
310.961 484.04 li
307.503 486.049 li
cp
768.318 487.537 mo
764.852 485.539 li
765.352 484.672 li
768.817 486.671 li
768.318 487.537 li
cp
300.585 490.067 mo
300.083 489.202 li
303.542 487.192 li
304.044 488.058 li
300.585 490.067 li
cp
775.248 491.533 mo
771.783 489.535 li
772.283 488.668 li
775.747 490.666 li
775.248 491.533 li
cp
293.668 494.086 mo
293.165 493.221 li
296.624 491.211 li
297.127 492.076 li
293.668 494.086 li
cp
782.179 495.529 mo
778.713 493.531 li
779.212 492.664 li
782.678 494.662 li
782.179 495.529 li
cp
286.751 498.104 mo
286.248 497.239 li
289.706 495.229 li
290.209 496.095 li
286.751 498.104 li
cp
789.108 499.526 mo
785.643 497.526 li
786.143 496.661 li
789.608 498.66 li
789.108 499.526 li
cp
279.833 502.122 mo
279.331 501.257 li
282.789 499.248 li
283.291 500.113 li
279.833 502.122 li
cp
796.039 503.522 mo
792.574 501.523 li
793.074 500.657 li
796.538 502.655 li
796.039 503.522 li
cp
272.915 506.141 mo
272.413 505.275 li
275.872 503.267 li
276.374 504.132 li
272.915 506.141 li
cp
802.97 507.519 mo
799.504 505.521 li
800.003 504.653 li
803.469 506.651 li
802.97 507.519 li
cp
265.997 510.159 mo
265.495 509.294 li
268.954 507.285 li
269.456 508.15 li
265.997 510.159 li
cp
809.899 511.515 mo
806.434 509.517 li
806.934 508.65 li
810.399 510.647 li
809.899 511.515 li
cp
259.08 514.178 mo
258.578 513.313 li
262.037 511.304 li
262.539 512.169 li
259.08 514.178 li
cp
816.83 515.511 mo
813.365 513.513 li
813.865 512.646 li
817.33 514.645 li
816.83 515.511 li
cp
252.162 518.196 mo
251.66 517.331 li
255.119 515.322 li
255.621 516.188 li
252.162 518.196 li
cp
823.761 519.507 mo
820.295 517.508 li
820.794 516.642 li
824.26 518.64 li
823.761 519.507 li
cp
245.245 522.215 mo
244.742 521.35 li
248.201 519.34 li
248.704 520.205 li
245.245 522.215 li
cp
830.691 523.504 mo
827.225 521.505 li
827.725 520.638 li
831.191 522.637 li
830.691 523.504 li
cp
238.328 526.233 mo
237.826 525.368 li
241.284 523.358 li
241.787 524.224 li
238.328 526.233 li
cp
837.621 527.5 mo
834.156 525.502 li
834.655 524.635 li
838.121 526.633 li
837.621 527.5 li
cp
231.41 530.252 mo
230.908 529.387 li
234.367 527.377 li
234.869 528.242 li
231.41 530.252 li
cp
844.551 531.496 mo
841.086 529.497 li
841.586 528.631 li
845.051 530.629 li
844.551 531.496 li
cp
224.493 534.27 mo
223.991 533.404 li
227.449 531.396 li
227.951 532.261 li
224.493 534.27 li
cp
851.482 535.492 mo
848.017 533.494 li
848.516 532.627 li
851.981 534.625 li
851.482 535.492 li
cp
217.575 538.288 mo
217.073 537.423 li
220.532 535.414 li
221.034 536.279 li
217.575 538.288 li
cp
858.412 539.488 mo
854.947 537.49 li
855.446 536.623 li
858.912 538.621 li
858.412 539.488 li
cp
210.658 542.307 mo
210.156 541.441 li
213.614 539.433 li
214.116 540.298 li
210.658 542.307 li
cp
865.343 543.485 mo
861.877 541.485 li
862.377 540.62 li
865.843 542.619 li
865.343 543.485 li
cp
203.74 546.325 mo
203.238 545.46 li
206.697 543.451 li
207.199 544.316 li
203.74 546.325 li
cp
872.273 547.481 mo
868.808 545.483 li
869.307 544.616 li
872.773 546.614 li
872.273 547.481 li
cp
196.823 550.344 mo
196.32 549.479 li
199.779 547.469 li
200.282 548.334 li
196.823 550.344 li
cp
879.204 551.477 mo
875.738 549.479 li
876.238 548.613 li
879.703 550.61 li
879.204 551.477 li
cp
189.905 554.362 mo
189.403 553.497 li
192.862 551.487 li
193.364 552.353 li
189.905 554.362 li
cp
886.134 555.474 mo
882.669 553.476 li
883.168 552.608 li
886.633 554.606 li
886.134 555.474 li
cp
182.987 558.381 mo
182.485 557.516 li
185.944 555.506 li
186.446 556.371 li
182.987 558.381 li
cp
893.064 559.47 mo
889.599 557.471 li
890.099 556.604 li
893.564 558.604 li
893.064 559.47 li
cp
176.07 562.399 mo
175.568 561.534 li
179.027 559.524 li
179.529 560.39 li
176.07 562.399 li
cp
899.995 563.466 mo
896.529 561.468 li
897.029 560.601 li
900.494 562.599 li
899.995 563.466 li
cp
169.152 566.417 mo
168.65 565.552 li
172.109 563.543 li
172.611 564.408 li
169.152 566.417 li
cp
906.925 567.463 mo
903.46 565.465 li
903.959 564.598 li
907.424 566.596 li
906.925 567.463 li
cp
162.235 570.436 mo
161.733 569.57 li
165.192 567.562 li
165.694 568.427 li
162.235 570.436 li
cp
913.856 571.459 mo
910.39 569.461 li
910.889 568.594 li
914.355 570.592 li
913.856 571.459 li
cp
155.317 574.454 mo
154.815 573.589 li
158.274 571.58 li
158.776 572.445 li
155.317 574.454 li
cp
920.785 575.455 mo
917.32 573.457 li
917.82 572.59 li
921.285 574.588 li
920.785 575.455 li
cp
148.4 578.473 mo
147.898 577.607 li
151.356 575.599 li
151.858 576.464 li
148.4 578.473 li
cp
927.716 579.45 mo
924.251 577.453 li
924.751 576.586 li
928.216 578.584 li
927.716 579.45 li
cp
141.482 582.491 mo
140.98 581.626 li
144.439 579.617 li
144.941 580.482 li
141.482 582.491 li
cp
934.647 583.447 mo
931.181 581.449 li
931.68 580.582 li
935.146 582.58 li
934.647 583.447 li
cp
134.565 586.51 mo
134.063 585.645 li
137.521 583.635 li
138.023 584.5 li
134.565 586.51 li
cp
941.576 587.443 mo
938.112 585.444 li
938.612 584.579 li
942.076 586.578 li
941.576 587.443 li
cp
127.647 590.528 mo
127.144 589.663 li
130.604 587.653 li
131.106 588.519 li
127.647 590.528 li
cp
948.507 591.44 mo
945.042 589.442 li
945.542 588.575 li
949.007 590.573 li
948.507 591.44 li
cp
120.73 594.547 mo
120.227 593.682 li
123.686 591.672 li
124.188 592.537 li
120.73 594.547 li
cp
955.438 595.437 mo
951.972 593.438 li
952.471 592.571 li
955.937 594.569 li
955.438 595.437 li
cp
114.118 598.829 mo
113.449 598.087 li
114.426 597.205 115.512 596.417 116.676 595.745 cv
116.769 595.69 li
117.271 596.556 li
117.177 596.61 li
116.072 597.247 115.044 597.994 114.118 598.829 cv
cp
962.368 599.433 mo
958.903 597.435 li
959.403 596.567 li
962.867 598.566 li
962.368 599.433 li
cp
969.299 603.429 mo
965.833 601.43 li
966.332 600.563 li
969.798 602.562 li
969.299 603.429 li
cp
109.707 605.146 mo
108.78 604.772 li
109.294 603.496 109.951 602.282 110.732 601.165 cv
111.552 601.737 li
110.814 602.793 110.193 603.939 109.707 605.146 cv
cp
976.229 607.424 mo
972.763 605.427 li
973.263 604.56 li
976.728 606.558 li
976.229 607.424 li
cp
983.159 611.422 mo
979.694 609.424 li
980.194 608.557 li
983.659 610.555 li
983.159 611.422 li
cp
107.463 612.818 mo
107.443 612.464 107.432 612.109 107.432 611.754 cv
107.432 610.74 107.515 609.721 107.678 608.724 cv
108.665 608.884 li
108.511 609.829 108.432 610.794 108.432 611.754 cv
108.432 612.09 108.442 612.427 108.461 612.762 cv
107.463 612.818 li
cp
990.09 615.418 mo
986.625 613.419 li
987.124 612.553 li
990.589 614.551 li
990.09 615.418 li
cp
997.02 619.414 mo
993.555 617.416 li
994.054 616.549 li
997.519 618.547 li
997.02 619.414 li
cp
109.691 620.663 mo
109.036 619.466 108.514 618.187 108.14 616.862 cv
109.102 616.591 li
109.456 617.843 109.95 619.052 110.569 620.183 cv
109.691 620.663 li
cp
1003.95 623.41 mo
1000.49 621.412 li
1000.98 620.545 li
1004.45 622.543 li
1003.95 623.41 li
cp
115.11 626.757 mo
113.987 625.954 112.959 625.033 112.055 624.018 cv
112.803 623.354 li
113.657 624.313 114.629 625.184 115.691 625.942 cv
115.11 626.757 li
cp
1010.88 627.406 mo
1007.42 625.408 li
1007.91 624.541 li
1011.38 626.539 li
1010.88 627.406 li
cp
122.035 630.854 mo
118.57 628.855 li
119.069 627.988 li
122.534 629.986 li
122.035 630.854 li
cp
1017.81 631.403 mo
1014.35 629.405 li
1014.85 628.538 li
1018.31 630.536 li
1017.81 631.403 li
cp
128.965 634.85 mo
125.499 632.851 li
125.999 631.985 li
129.465 633.984 li
128.965 634.85 li
cp
1024.74 635.398 mo
1021.28 633.401 li
1021.78 632.535 li
1025.24 634.532 li
1024.74 635.398 li
cp
135.895 638.846 mo
132.43 636.849 li
132.93 635.981 li
136.394 637.979 li
135.895 638.846 li
cp
1031.67 639.396 mo
1028.21 637.397 li
1028.71 636.53 li
1032.17 638.528 li
1031.67 639.396 li
cp
142.825 642.843 mo
139.361 640.845 li
139.86 639.979 li
143.325 641.976 li
142.825 642.843 li
cp
1038.6 643.392 mo
1035.14 641.393 li
1035.64 640.526 li
1039.1 642.525 li
1038.6 643.392 li
cp
149.756 646.839 mo
146.29 644.84 li
146.79 643.975 li
150.256 645.974 li
149.756 646.839 li
cp
1045.53 647.388 mo
1042.07 645.39 li
1042.57 644.522 li
1046.03 646.521 li
1045.53 647.388 li
cp
156.686 650.836 mo
153.221 648.838 li
153.721 647.971 li
157.185 649.969 li
156.686 650.836 li
cp
1052.46 651.385 mo
1049 649.386 li
1049.5 648.52 li
1052.96 650.518 li
1052.46 651.385 li
cp
163.616 654.832 mo
160.152 652.834 li
160.651 651.968 li
164.116 653.965 li
163.616 654.832 li
cp
1059.39 655.381 mo
1055.93 653.383 li
1056.43 652.516 li
1059.89 654.515 li
1059.39 655.381 li
cp
170.547 658.829 mo
167.081 656.83 li
167.581 655.964 li
171.046 657.963 li
170.547 658.829 li
cp
1066.32 659.377 mo
1062.86 657.379 li
1063.36 656.512 li
1066.82 658.51 li
1066.32 659.377 li
cp
177.477 662.825 mo
174.012 660.827 li
174.512 659.96 li
177.976 661.958 li
177.477 662.825 li
cp
1073.25 663.372 mo
1069.79 661.375 li
1070.29 660.508 li
1073.75 662.506 li
1073.25 663.372 li
cp
184.408 666.82 mo
180.942 664.823 li
181.441 663.957 li
184.907 665.954 li
184.408 666.82 li
cp
1080.18 667.369 mo
1076.72 665.371 li
1077.22 664.504 li
1080.68 666.502 li
1080.18 667.369 li
cp
191.337 670.818 mo
187.872 668.82 li
188.372 667.953 li
191.837 669.952 li
191.337 670.818 li
cp
1086.63 671.824 mo
1085.73 670.909 1084.71 670.085 1083.62 669.375 cv
1084.16 668.535 li
1085.32 669.285 1086.39 670.155 1087.34 671.123 cv
1086.63 671.824 li
cp
198.268 674.814 mo
194.803 672.816 li
195.303 671.949 li
198.767 673.947 li
198.268 674.814 li
cp
1090.65 678.396 mo
1090.24 677.163 1089.68 675.979 1089.01 674.88 cv
1089.86 674.358 li
1090.58 675.522 1091.16 676.773 1091.6 678.078 cv
1090.65 678.396 li
cp
205.199 678.811 mo
201.733 676.813 li
202.232 675.945 li
205.698 677.943 li
205.199 678.811 li
cp
212.128 682.808 mo
208.663 680.81 li
209.163 679.942 li
212.628 681.941 li
212.128 682.808 li
cp
1092.44 686.189 mo
1091.45 686.074 li
1091.53 685.401 1091.57 684.716 1091.57 684.036 cv
1091.57 683.422 1091.53 682.801 1091.47 682.191 cv
1092.47 682.088 li
1092.53 682.732 1092.57 683.388 1092.57 684.036 cv
1092.57 684.754 1092.53 685.479 1092.44 686.189 cv
cp
219.058 686.804 mo
215.594 684.805 li
216.094 683.938 li
219.558 685.937 li
219.058 686.804 li
cp
225.99 690.8 mo
222.524 688.802 li
223.023 687.935 li
226.489 689.933 li
225.99 690.8 li
cp
1089.76 693.886 mo
1088.91 693.354 li
1089.59 692.262 1090.16 691.086 1090.59 689.858 cv
1091.53 690.187 li
1091.08 691.485 1090.48 692.73 1089.76 693.886 cv
cp
232.919 694.797 mo
229.454 692.799 li
229.954 691.932 li
233.419 693.93 li
232.919 694.797 li
cp
239.85 698.793 mo
236.384 696.795 li
236.884 695.928 li
240.349 697.926 li
239.85 698.793 li
cp
1083.99 699.646 mo
1083.45 698.8 li
1084.56 698.101 1085.58 697.288 1086.49 696.384 cv
1087.19 697.093 li
1086.23 698.048 1085.15 698.907 1083.99 699.646 cv
cp
246.78 702.789 mo
243.315 700.791 li
243.815 699.924 li
247.279 701.922 li
246.78 702.789 li
cp
1077.06 703.684 mo
1076.56 702.818 li
1080.01 700.81 li
1080.52 701.675 li
1077.06 703.684 li
cp
253.71 706.786 mo
250.245 704.788 li
250.745 703.921 li
254.21 705.919 li
253.71 706.786 li
cp
1070.14 707.701 mo
1069.64 706.836 li
1073.1 704.827 li
1073.6 705.692 li
1070.14 707.701 li
cp
260.641 710.782 mo
257.175 708.784 li
257.675 707.917 li
261.14 709.915 li
260.641 710.782 li
cp
1063.22 711.719 mo
1062.72 710.854 li
1066.18 708.845 li
1066.68 709.71 li
1063.22 711.719 li
cp
267.571 714.778 mo
264.106 712.78 li
264.606 711.913 li
268.071 713.911 li
267.571 714.778 li
cp
1056.3 715.736 mo
1055.8 714.871 li
1059.26 712.862 li
1059.76 713.728 li
1056.3 715.736 li
cp
274.501 718.775 mo
271.036 716.777 li
271.535 715.91 li
275.001 717.908 li
274.501 718.775 li
cp
1049.39 719.754 mo
1048.88 718.889 li
1052.34 716.88 li
1052.84 717.745 li
1049.39 719.754 li
cp
281.432 722.771 mo
277.966 720.773 li
278.466 719.906 li
281.931 721.904 li
281.432 722.771 li
cp
1042.47 723.771 mo
1041.97 722.906 li
1045.42 720.897 li
1045.93 721.763 li
1042.47 723.771 li
cp
288.362 726.768 mo
284.897 724.77 li
285.396 723.902 li
288.861 725.9 li
288.362 726.768 li
cp
1035.55 727.789 mo
1035.05 726.924 li
1038.51 724.915 li
1039.01 725.78 li
1035.55 727.789 li
cp
295.292 730.765 mo
291.827 728.767 li
292.326 727.9 li
295.792 729.897 li
295.292 730.765 li
cp
1028.63 731.806 mo
1028.13 730.94 li
1031.59 728.932 li
1032.09 729.797 li
1028.63 731.806 li
cp
302.222 734.761 mo
298.757 732.763 li
299.257 731.896 li
302.721 733.895 li
302.222 734.761 li
cp
1021.71 735.823 mo
1021.21 734.958 li
1024.67 732.949 li
1025.17 733.814 li
1021.71 735.823 li
cp
309.153 738.757 mo
305.688 736.758 li
306.187 735.892 li
309.653 737.89 li
309.153 738.757 li
cp
1014.8 739.841 mo
1014.29 738.976 li
1017.75 736.967 li
1018.25 737.832 li
1014.8 739.841 li
cp
316.083 742.754 mo
312.617 740.756 li
313.117 739.889 li
316.582 741.887 li
316.083 742.754 li
cp
1007.88 743.858 mo
1007.38 742.993 li
1010.83 740.984 li
1011.34 741.85 li
1007.88 743.858 li
cp
323.013 746.75 mo
319.548 744.752 li
320.048 743.885 li
323.513 745.883 li
323.013 746.75 li
cp
1000.96 747.876 mo
1000.46 747.011 li
1003.92 745.002 li
1004.42 745.867 li
1000.96 747.876 li
cp
329.944 750.746 mo
326.479 748.748 li
326.978 747.881 li
330.444 749.879 li
329.944 750.746 li
cp
994.041 751.894 mo
993.539 751.028 li
996.998 749.02 li
997.5 749.885 li
994.041 751.894 li
cp
336.874 754.742 mo
333.409 752.745 li
333.908 751.879 li
337.373 753.876 li
336.874 754.742 li
cp
987.123 755.911 mo
986.621 755.046 li
990.08 753.037 li
990.582 753.902 li
987.123 755.911 li
cp
343.804 758.739 mo
340.339 756.741 li
340.839 755.874 li
344.304 757.872 li
343.804 758.739 li
cp
980.205 759.929 mo
979.703 759.063 li
983.162 757.055 li
983.664 757.92 li
980.205 759.929 li
cp
350.735 762.735 mo
347.269 760.736 li
347.769 759.87 li
351.234 761.869 li
350.735 762.735 li
cp
973.287 763.946 mo
972.785 763.081 li
976.244 761.072 li
976.746 761.938 li
973.287 763.946 li
cp
357.665 766.732 mo
354.2 764.734 li
354.7 763.867 li
358.164 765.865 li
357.665 766.732 li
cp
966.369 767.964 mo
965.867 767.099 li
969.326 765.09 li
969.828 765.955 li
966.369 767.964 li
cp
364.596 770.729 mo
361.13 768.73 li
361.629 767.863 li
365.095 769.861 li
364.596 770.729 li
cp
959.451 771.981 mo
958.949 771.116 li
962.408 769.107 li
962.91 769.973 li
959.451 771.981 li
cp
371.526 774.725 mo
368.06 772.727 li
368.559 771.859 li
372.025 773.857 li
371.526 774.725 li
cp
952.533 775.999 mo
952.031 775.134 li
955.49 773.125 li
955.992 773.99 li
952.533 775.999 li
cp
378.455 778.721 mo
374.991 776.724 li
375.491 775.856 li
378.955 777.854 li
378.455 778.721 li
cp
945.615 780.017 mo
945.113 779.151 li
948.572 777.143 li
949.074 778.008 li
945.615 780.017 li
cp
385.387 782.718 mo
381.921 780.72 li
382.42 779.853 li
385.886 781.851 li
385.387 782.718 li
cp
938.697 784.034 mo
938.195 783.169 li
941.654 781.16 li
942.156 782.025 li
938.697 784.034 li
cp
392.316 786.714 mo
388.851 784.716 li
389.351 783.849 li
392.816 785.848 li
392.316 786.714 li
cp
931.779 788.052 mo
931.277 787.187 li
934.736 785.178 li
935.238 786.043 li
931.779 788.052 li
cp
399.247 790.711 mo
395.782 788.713 li
396.281 787.846 li
399.746 789.844 li
399.247 790.711 li
cp
924.861 792.069 mo
924.359 791.204 li
927.818 789.195 li
928.32 790.061 li
924.861 792.069 li
cp
406.177 794.707 mo
402.712 792.709 li
403.211 791.843 li
406.676 793.84 li
406.177 794.707 li
cp
917.943 796.086 mo
917.441 795.221 li
920.9 793.213 li
921.402 794.078 li
917.943 796.086 li
cp
413.107 798.703 mo
409.642 796.705 li
410.142 795.838 li
413.607 797.836 li
413.107 798.703 li
cp
911.025 800.104 mo
910.523 799.238 li
913.982 797.229 li
914.484 798.095 li
911.025 800.104 li
cp
420.038 802.7 mo
416.573 800.702 li
417.072 799.835 li
420.537 801.833 li
420.038 802.7 li
cp
904.107 804.121 mo
903.605 803.256 li
907.064 801.247 li
907.566 802.112 li
904.107 804.121 li
cp
426.968 806.695 mo
423.502 804.698 li
424.002 803.832 li
427.467 805.829 li
426.968 806.695 li
cp
897.188 808.139 mo
896.686 807.273 li
900.145 805.265 li
900.647 806.13 li
897.188 808.139 li
cp
433.898 810.692 mo
430.433 808.694 li
430.932 807.827 li
434.398 809.825 li
433.898 810.692 li
cp
890.27 812.156 mo
889.768 811.291 li
893.227 809.282 li
893.729 810.147 li
890.27 812.156 li
cp
440.828 814.689 mo
437.363 812.691 li
437.863 811.824 li
441.328 813.822 li
440.828 814.689 li
cp
883.352 816.174 mo
882.85 815.309 li
886.309 813.3 li
886.811 814.165 li
883.352 816.174 li
cp
447.758 818.685 mo
444.293 816.688 li
444.793 815.82 li
448.258 817.818 li
447.758 818.685 li
cp
876.434 820.191 mo
875.932 819.326 li
879.391 817.317 li
879.893 818.183 li
876.434 820.191 li
cp
454.689 822.682 mo
451.224 820.684 li
451.723 819.816 li
455.189 821.814 li
454.689 822.682 li
cp
869.516 824.209 mo
869.014 823.344 li
872.473 821.335 li
872.975 822.2 li
869.516 824.209 li
cp
461.619 826.679 mo
458.154 824.68 li
458.653 823.813 li
462.118 825.812 li
461.619 826.679 li
cp
862.598 828.227 mo
862.096 827.361 li
865.555 825.353 li
866.057 826.218 li
862.598 828.227 li
cp
468.549 830.675 mo
465.084 828.677 li
465.584 827.81 li
469.049 829.808 li
468.549 830.675 li
cp
855.68 832.244 mo
855.178 831.379 li
858.637 829.37 li
859.139 830.235 li
855.68 832.244 li
cp
475.48 834.671 mo
472.014 832.673 li
472.514 831.807 li
475.979 833.804 li
475.48 834.671 li
cp
848.762 836.262 mo
848.26 835.396 li
851.719 833.388 li
852.221 834.253 li
848.762 836.262 li
cp
482.41 838.667 mo
478.945 836.668 li
479.445 835.803 li
482.91 837.802 li
482.41 838.667 li
cp
841.844 840.279 mo
841.342 839.414 li
844.801 837.405 li
845.303 838.271 li
841.844 840.279 li
cp
489.341 842.664 mo
485.875 840.666 li
486.375 839.799 li
489.84 841.797 li
489.341 842.664 li
cp
834.926 844.297 mo
834.424 843.432 li
837.883 841.423 li
838.385 842.288 li
834.926 844.297 li
cp
496.271 846.66 mo
492.805 844.662 li
493.305 843.795 li
496.77 845.793 li
496.271 846.66 li
cp
828.008 848.314 mo
827.506 847.449 li
830.965 845.44 li
831.467 846.306 li
828.008 848.314 li
cp
503.201 850.657 mo
499.735 848.657 li
500.235 847.792 li
503.701 849.791 li
503.201 850.657 li
cp
821.09 852.332 mo
820.588 851.467 li
824.047 849.458 li
824.549 850.323 li
821.09 852.332 li
cp
510.131 854.653 mo
506.666 852.655 li
507.165 851.788 li
510.631 853.786 li
510.131 854.653 li
cp
814.172 856.35 mo
813.67 855.484 li
817.129 853.476 li
817.631 854.341 li
814.172 856.35 li
cp
517.061 858.648 mo
513.596 856.651 li
514.096 855.785 li
517.56 857.782 li
517.061 858.648 li
cp
807.254 860.367 mo
806.752 859.502 li
810.211 857.493 li
810.713 858.358 li
807.254 860.367 li
cp
523.992 862.646 mo
520.526 860.646 li
521.026 859.781 li
524.492 861.78 li
523.992 862.646 li
cp
800.335 864.385 mo
799.833 863.52 li
803.293 861.511 li
803.795 862.376 li
800.335 864.385 li
cp
530.922 866.643 mo
527.456 864.645 li
527.956 863.777 li
531.422 865.775 li
530.922 866.643 li
cp
793.417 868.402 mo
792.915 867.537 li
796.374 865.528 li
796.876 866.394 li
793.417 868.402 li
cp
537.852 870.639 mo
534.387 868.641 li
534.887 867.773 li
538.351 869.771 li
537.852 870.639 li
cp
786.499 872.42 mo
785.997 871.555 li
789.456 869.546 li
789.958 870.411 li
786.499 872.42 li
cp
544.782 874.636 mo
541.317 872.636 li
541.817 871.771 li
545.282 873.77 li
544.782 874.636 li
cp
779.581 876.437 mo
779.079 875.571 li
782.538 873.563 li
783.04 874.428 li
779.581 876.437 li
cp
551.712 878.632 mo
548.247 876.633 li
548.747 875.767 li
552.212 877.765 li
551.712 878.632 li
cp
772.663 880.454 mo
772.161 879.589 li
775.62 877.58 li
776.122 878.445 li
772.663 880.454 li
cp
558.643 882.628 mo
555.178 880.63 li
555.678 879.763 li
559.142 881.761 li
558.643 882.628 li
cp
765.745 884.472 mo
765.243 883.606 li
768.702 881.598 li
769.204 882.463 li
765.745 884.472 li
cp
565.574 886.624 mo
562.108 884.626 li
562.607 883.759 li
566.073 885.757 li
565.574 886.624 li
cp
758.827 888.489 mo
758.325 887.624 li
761.784 885.615 li
762.286 886.48 li
758.827 888.489 li
cp
572.503 890.621 mo
569.038 888.623 li
569.538 887.756 li
573.003 889.754 li
572.503 890.621 li
cp
751.909 892.507 mo
751.407 891.642 li
754.866 889.633 li
755.368 890.498 li
751.909 892.507 li
cp
579.433 894.617 mo
575.969 892.619 li
576.469 891.752 li
579.933 893.75 li
579.433 894.617 li
cp
744.991 896.524 mo
744.489 895.659 li
747.948 893.65 li
748.45 894.516 li
744.991 896.524 li
cp
586.364 898.613 mo
582.899 896.615 li
583.399 895.749 li
586.863 897.746 li
586.364 898.613 li
cp
738.073 900.542 mo
737.571 899.677 li
741.03 897.668 li
741.532 898.533 li
738.073 900.542 li
cp
593.294 902.61 mo
589.829 900.612 li
590.329 899.745 li
593.794 901.743 li
593.294 902.61 li
cp
731.155 904.56 mo
730.653 903.694 li
734.112 901.686 li
734.614 902.551 li
731.155 904.56 li
cp
600.225 906.606 mo
596.759 904.608 li
597.259 903.741 li
600.724 905.739 li
600.225 906.606 li
cp
724.237 908.577 mo
723.735 907.712 li
727.194 905.703 li
727.696 906.568 li
724.237 908.577 li
cp
607.155 910.602 mo
603.69 908.604 li
604.189 907.738 li
607.654 909.735 li
607.155 910.602 li
cp
717.319 912.595 mo
716.817 911.729 li
720.276 909.721 li
720.778 910.586 li
717.319 912.595 li
cp
614.085 914.6 mo
610.62 912.602 li
611.12 911.734 li
614.585 913.733 li
614.085 914.6 li
cp
710.401 916.612 mo
709.899 915.747 li
713.358 913.738 li
713.86 914.604 li
710.401 916.612 li
cp
621.015 918.596 mo
617.55 916.598 li
618.05 915.73 li
621.514 917.729 li
621.015 918.596 li
cp
703.482 920.63 mo
702.98 919.765 li
706.44 917.756 li
706.942 918.621 li
703.482 920.63 li
cp
627.946 922.592 mo
624.481 920.594 li
624.98 919.727 li
628.445 921.725 li
627.946 922.592 li
cp
696.564 924.647 mo
696.062 923.782 li
699.521 921.773 li
700.023 922.639 li
696.564 924.647 li
cp
634.876 926.589 mo
631.41 924.591 li
631.91 923.724 li
635.376 925.723 li
634.876 926.589 li
cp
689.646 928.665 mo
689.144 927.8 li
692.603 925.791 li
693.105 926.656 li
689.646 928.665 li
cp
641.806 930.585 mo
638.341 928.586 li
638.84 927.72 li
642.305 929.718 li
641.806 930.585 li
cp
682.586 932.522 mo
682.17 931.612 li
683.366 931.066 684.549 930.458 685.688 929.808 cv
686.184 930.676 li
685.019 931.342 683.809 931.963 682.586 932.522 cv
cp
647.191 933.228 mo
645.948 932.718 644.714 932.146 643.523 931.526 cv
643.984 930.64 li
645.149 931.245 646.355 931.805 647.57 932.302 cv
647.191 933.228 li
cp
674.963 935.2 mo
674.718 934.231 li
675.998 933.907 677.272 933.523 678.504 933.091 cv
678.835 934.034 li
677.576 934.477 676.273 934.869 674.963 935.2 cv
cp
654.913 935.6 mo
653.598 935.323 652.281 934.983 650.998 934.589 cv
651.292 933.634 li
652.546 934.019 653.833 934.351 655.118 934.621 cv
654.913 935.6 li
cp
666.981 936.457 mo
666.916 935.459 li
668.223 935.374 669.545 935.227 670.845 935.022 cv
671 936.011 li
669.67 936.22 668.318 936.369 666.981 936.457 cv
cp
662.938 936.536 mo
661.598 936.502 660.242 936.405 658.905 936.25 cv
659.02 935.256 li
660.327 935.408 661.654 935.503 662.963 935.536 cv
662.938 936.536 li
cp
f
1002.75 588.236 mo
1019.6 574.015 li
1019.6 687.461 li
1019.58 687.464 li
1019.6 688.71 1018.74 690.028 1016.97 691.052 cv
1013.77 692.896 1008.9 693.097 1006.13 691.501 cv
1004.58 690.603 li
1003.35 689.892 1002.77 688.937 1002.75 687.936 cv
1002.71 687.92 li
1002.71 681.221 1002.75 588.236 1002.75 588.236 cv
cp
.702449 .638575 .710719 .82858 cmyk
f
1011.16 473.734 mo
1011.16 473.734 974.304 586.163 962.868 623.904 cv
960.745 630.913 965.422 638.343 976.652 643.759 cv
995.708 652.948 1026.6 652.949 1045.66 643.759 cv
1056.87 638.354 1061.56 630.938 1059.45 623.944 cv
1048.07 586.176 1011.16 473.734 1011.16 473.734 cv
cp
level3{
gsave
clp
[.469439 -107.032 107.032 .469439 1010.96 671.619 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~]bKr9]bKr9]bKu:]bKu:]bU&<]bU)=]b^/>^)$;@^)$>A^)-GC^)-GC^DQYF^DZbH^DckJ^`*"M^`3+O
_&W=R_&W@S_B&UW_B/^Y_B8d[_]\s]_]f$^_]f$_`$53a`$G?c`?kNf`[:]h`[Ccja!grla!q#na=@2p
a=I8ra=R>taY!N"aY*T#atNc&atWi(b;0),bVT8/bV]>1bVfD3br5S6br>Y9c8bh<c8kn>cTD.CcTM4E
coqCHcp%IKd6R^Od6[dRdR*sVdR4$XdmX3\dma9_e40Hbe4BTfe4KZje4T`meP#oqeP6&ueP?-#ekc<'
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.469439 -107.032 107.032 .469439 1010.96 671.619 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y2"l]tM+m]tM+m]tM+m]tV4p^:q=q^:q=q^;%Ft^V@Ou^VIY#
^qdb$^qde&_83t(_83t(_84"*_SX1,_SX1,_SX4._o'C0_o'F2`5KX6`Pog8`Poj:`l?$<`l?'>a2c6@
a2c6@a2c6AaN2HDaN2HEaiVZHaiVZIb0%lMbKJ)PbKJ)PbKJ)Qbfn;Tbfn;Uc-=MXc-=MYcHa_\cHa_]
cd0q`cd0q`d*U.dd*U.ddF$@hdF$@hdaHRldaHRle'ldpe'ldpe'ldpe'ldpeC<!teC<!teC<!te^`4#
~>
<~',)#m',)#m',)#m',2,p'GM5q'GV>t'bqGu'bqGu'c%Q#()@Z$()Ic'(Dmu+(`=2/)&X;0)&aD3)B0V7
)]K_8)]Kb:*#ot>*??1B*ZcCF+!2UJ+<VdL+<VgN+X&$R,9nHZ,U=Z^,palb-71)f-RU;j-n$Mn.4H_r
.Olnu.k<,$/1`>(/M/P,/hSb00/"t40JP:;1,:U@1G^gD1c.$H2)R6L2E!HP2`EZT3&ilX3BB2_4$,Md
4?P_g4Ztqk5!D1q5X7S"5s[e&6:+"*6UO4.6psF277BX67Rfm<84Z9B8P)KF8kM]J91qrP9he>V:/4PZ
~>
<~n*f`6n*oi9nF5r:nF5r:nF?&=naZ/>nac8Ao(2JEoCV\Io^qeJo_%nMp%J+Qp@n=Up\=OYq"aa]q>0sa
qYL*dqtp<hrVc`prr2rts8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~zzzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiH+!s8W-!s8W-!s8Z/"9
\i1"9\l3"U,&5"U,)7"pP89"pP;;#6tJ>#RC\B#mgnE#mgnF$47+J$O[=N$k*OR%1NaV%LrsZ%hB0^&.
fBb&J>]i',)#n'GM5r'c%Q$(Ddl)(`4),)&X>2)]K_8*#ot>*ZcCF+<VdL+X&$R,9nHZ,pai`-71)f-n
-Sp.k</%/M/S-0/#"50ekF=1G^jE~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
1011.16 448.947 mo
1011.16 448.947 982.808 535.431 974.012 564.463 cv
972.378 569.854 975.976 575.569 984.614 579.735 cv
999.273 586.804 1023.04 586.805 1037.7 579.735 cv
1046.32 575.577 1049.93 569.873 1048.31 564.494 cv
1039.55 535.44 1011.16 448.947 1011.16 448.947 cv
cp
level3{
gsave
clp
[-.469439 -71.8241 71.8241 -.469439 1011.36 597.904 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.469439 -71.8241 71.8241 -.469439 1011.36 597.904 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
1011.16 426.478 mo
1011.16 426.478 989.35 493.004 982.583 515.336 cv
981.327 519.483 984.095 523.88 990.739 527.084 cv
1002.01 532.521 1020.3 532.521 1031.57 527.084 cv
1038.2 523.886 1040.98 519.498 1039.73 515.359 cv
1033 493.011 1011.16 426.478 1011.16 426.478 cv
cp
level3{
gsave
clp
[1.00926e-11 -98.1127 98.1127 1.00926e-11 1011.16 545.331 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00926e-11 -98.1127 98.1127 1.00926e-11 1011.16 545.331 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
298.109 465.142 mo
314.962 450.92 li
314.962 564.366 li
314.938 564.369 li
314.963 565.615 314.101 566.934 312.329 567.957 cv
309.137 569.801 304.261 570.002 301.496 568.406 cv
299.94 567.507 li
298.708 566.797 298.13 565.841 298.109 564.841 cv
298.075 564.825 li
298.075 558.126 298.109 465.142 298.109 465.142 cv
cp
.702449 .638575 .710719 .82858 cmyk
f
306.52 350.64 mo
306.52 350.64 269.666 463.068 258.231 500.81 cv
256.108 507.818 260.784 515.248 272.014 520.663 cv
291.071 529.853 321.966 529.854 341.021 520.664 cv
352.229 515.259 356.92 507.844 354.813 500.85 cv
343.435 463.081 306.52 350.64 306.52 350.64 cv
cp
level3{
gsave
clp
[.469439 -107.032 107.032 .469439 306.324 548.524 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.469439 -107.032 107.032 .469439 306.324 548.524 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
306.519 325.853 mo
306.519 325.853 278.171 412.336 269.374 441.368 cv
267.741 446.759 271.339 452.475 279.977 456.64 cv
294.636 463.709 318.401 463.71 333.059 456.641 cv
341.68 452.482 345.289 446.778 343.668 441.398 cv
334.916 412.346 306.519 325.853 306.519 325.853 cv
cp
level3{
gsave
clp
[-.469439 -71.8241 71.8241 -.469439 306.72 474.809 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.469439 -71.8241 71.8241 -.469439 306.72 474.809 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
306.519 303.383 mo
306.519 303.383 284.712 369.909 277.946 392.241 cv
276.689 396.388 279.457 400.784 286.102 403.989 cv
297.378 409.427 315.659 409.427 326.934 403.989 cv
333.566 400.791 336.342 396.403 335.095 392.265 cv
328.363 369.916 306.519 303.383 306.519 303.383 cv
cp
level3{
gsave
clp
[1.00926e-11 -98.1127 98.1127 1.00926e-11 306.518 422.236 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.00926e-11 -98.1127 98.1127 1.00926e-11 306.518 422.236 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
234.6 521.247 mo
248.231 509.744 li
248.231 601.506 li
248.212 601.508 li
248.232 602.516 247.535 603.582 246.102 604.409 cv
243.52 605.901 239.576 606.063 237.339 604.773 cv
236.08 604.046 li
235.085 603.472 234.617 602.698 234.6 601.89 cv
234.572 601.876 li
234.572 596.458 234.6 521.247 234.6 521.247 cv
cp
.702449 .638575 .710719 .82858 cmyk
f
241.403 428.633 mo
241.403 428.633 211.594 519.57 202.345 550.098 cv
200.627 555.767 204.41 561.776 213.493 566.156 cv
228.907 573.59 253.896 573.59 269.309 566.157 cv
278.375 561.785 282.169 555.787 280.465 550.13 cv
271.262 519.581 241.403 428.633 241.403 428.633 cv
cp
level3{
gsave
clp
[.379705 -86.5727 86.5727 .379705 241.244 588.691 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.379705 -86.5727 86.5727 .379705 241.244 588.691 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
241.403 408.584 mo
241.403 408.584 218.473 478.536 211.358 502.019 cv
210.036 506.379 212.947 511.002 219.933 514.371 cv
231.79 520.089 251.013 520.09 262.869 514.372 cv
269.843 511.009 272.761 506.395 271.451 502.043 cv
264.371 478.544 241.403 408.584 241.403 408.584 cv
cp
level3{
gsave
clp
[-.379705 -58.0948 58.0948 -.379705 241.565 529.067 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-.379705 -58.0948 58.0948 -.379705 241.565 529.067 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
241.403 390.409 mo
241.403 390.409 223.764 444.219 218.291 462.282 cv
217.275 465.637 219.513 469.192 224.888 471.784 cv
234.008 476.183 248.795 476.183 257.915 471.785 cv
263.28 469.197 265.524 465.648 264.516 462.302 cv
259.07 444.225 241.403 390.409 241.403 390.409 cv
cp
level3{
gsave
clp
[8.16342e-12 -79.3583 79.3583 8.16342e-12 241.402 486.543 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.16342e-12 -79.3583 79.3583 8.16342e-12 241.402 486.543 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
453.047 671.175 mo
629.633 569.223 li
631.784 567.98 634.435 567.98 636.586 569.223 cv
788.461 655.79 li
793.096 658.466 793.096 665.156 788.461 667.832 cv
611.874 769.784 li
609.723 771.026 607.074 771.026 604.922 769.784 cv
453.047 683.217 li
448.412 680.541 448.412 673.851 453.047 671.175 cv
cp
.113375 .0542306 .0740063 0 cmyk
f
606.478 406.784 mo
431.126 305.661 li
457.052 679.284 li
608.376 766.551 li
606.478 406.784 li
cp
.572595 .356023 0 0 cmyk
f
606.478 406.784 mo
809.511 290.791 li
783.585 664.414 li
608.376 766.551 li
606.478 406.784 li
cp
level3{
gsave
clp
[75.5092 240.468 -240.468 75.5092 668.494 399.856 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~P$7ndO]_YaOB;J_O&l;]N`?&ZNDolXN)BWUMbsHSMba<QMG=-OM+dmLLe@^JLe.RHLI_CFLIV=EL.)(B
L-u"AKgPh?KL#S<K0K>9Jis)6JNNo4JN<c2J2mT0IlIE.IQ%6,I5M!)I5Cp(Hnta&HSPR$HS>F"H7o6u
GqK'sGqB!rGq/jpGU`[nGUWUmG:3FkG:!:iFsR+gFX-qeFX$kdF<LVaF<CP`EutA^Euk;]EZ>&ZEZ4uY
E>efWE>SZUE#/KSE#&ERE"i9PD\E*ND\<$MD\)mKD@QXHD@HRGD@6FED@-@DD$^1BD$U+AD$L%@C]se=
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[75.5092 240.468 -240.468 75.5092 668.494 399.856 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~OcbcgOcYZdOH5H`O,f6\NfB$XNJrgTN/NUPMi*CLMMd:KMM[1HM26tDLkgb@LPLY?LPCP<L5(G;L4t>8
KnY57KnY25KS4u1K7ec-JqAQ)JUr?%J:N0#J:N-!It)orIXZ]nI=6KjI!g<hI!g9fH[C'bH?sm`H?sj^
H$O[[G^+IXG^+IXG^+IWGB\7TGB\7SG'8%PG'8%OF`hhKFEDVHFEDVGF)uDDF)uDCEcQ2@EcQ2?EH,u<
EH,u<E,]c8E,]c8Df9Q4Df9Q4Df9Q4DJj?0DJj?0DJj?0D/F-,D/F-,D/F-,D/F-,Ci!p(Ci!p(Ci!p(
~>
<~>$>*4=]ed.=BAR*=&r@%<E)ps<)Z^n;Gg:g;,C(b:JOY[:/+GV9M8#O91hfJ8OuBC84Q0?7n,s:779O3
6psC06UO1,5s[b$5<h=q4Ztni4?P\e3]]8]3B9&Y3&iiU2`EWQ2)R3I1c.!E1G^dA1,:R=0JG.50/"q1
/hSb./M/P*/1W5#.Olns.4H\o-n$Jk-RL/d,pai_,U=W[,9nEW+sA*P+<VdK+!2RG*Zc@C*?6%<)]K_7
)B'M4)&X8.(Ddl(()@Z$'bqDs',)#m&eYfi&J5Qc%hB-[%1NaU$k*LO$47+I#mgnE#RC\A#6tJ="pP57
~>
0 0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
401.072 304.634 mo
615.461 187.445 li
624.922 181.978 636.581 181.972 646.048 187.431 cv
839.568 290.791 li
849.231 290.791 li
849.231 310.969 li
849.22 310.969 li
849.159 314.51 847.388 318.025 843.884 320.051 cv
625.178 446.445 li
615.717 451.913 604.057 451.919 594.591 446.46 cv
396.764 332.379 li
393.759 330.646 392.034 327.814 391.557 324.811 cv
391.408 324.811 li
391.408 304.634 li
401.072 304.634 li
cp
level3{
gsave
clp
[457.824 0 0 457.824 391.407 316.945 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~IRX;;I7+&8Hp[l6HU.W3H9_H1Gs23.Gs)--GWYs+GWPm*G<,^(FuTI%FZ0:#FZ'4"F>X$uF>NstF#*dr
F#!^qE\ROoEA.@mEA%:lE%V+jE%M%iD_(kgD^k_eDCPVdDCGPcD(#AaCaT2_CaB&]CErl[CEifZC*EWX
C*<QWC*3KVBcd<TBcR0RBH.!PB,^gNB,UaMAf1RKAf(LJAetFIAJP7GAJ>+EA.nqC@hJbA@hA\@@LrM>
@L`A<@LW;;@13,9@1*&8@0uu7?jQf5?jH`4?j?Z3?NgE0?3C6.>m(-->lt',>lk!+>lap*>lXj)>Q=a(
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[457.824 0 0 457.824 391.407 316.945 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~I=6NlI=-EiI!^3eH[:!aH?jd]H$FRYG^+IXG^"@UGB\7TGBS.QG'.qMF`__IFEDVHFE;MEF)uDDF)l;A
EcQ2@EcQ/>EH,r:E,]c8E,]`6Df9Q4Df9N2DJj?0DJj<.D/F-,D/F**Ci!m&CMR^$CMR["C2.KuC2.Hs
Bk_9qBk_9qBk_9pBP;'mBP;'lB4kjhAnGXeAnGXdAS#FaAS#FaAS#F`A7T4]A7T4\@q0"X@U`eU@U`eT
@:<SQ@:<SQ@:<SQ?smAM?smAM?smAM?XI/I?XI/I?XI/I?=$rE?!U`A>[1N=>[1N=>[1N=>[1N=>[1N=
~>
<~77BX56pj=/6UF+*5sR\#5X.Is5!;%l4Zkhh4?GVd4$#D`3]T2[3&`cT2`<QP2Dm?L2)I-H1c$pD1GU^@
1,:R=0ek@90JG.50/"q1/hS_-/M/M)/1`;%.Olkr.4H\p.4HYn-n$Gj-RU5f,paf^,U=TZ,9nBV+sJ0R
+X&!O+<VdK+!2RG*ZZ7@*#oq;)]K_7)B'M3)&X;/(`4)+(Ddl'()@Z#'bh>q',)#l&eYfh&J5Td&.fB`
%hB-[%1NaU$k*OQ$O[=M$47+I#mgnE#RC\A#6tJ="pP57"9\i1!s8W-!s8W-!WiE)!<E3%z!!!!!~>
0 0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
737.531 479.864 mo
736.031 483.731 733.257 487.182 730.257 488.914 cv
713.88 498.368 li
717.291 494.132 li
705.881 477.967 li
717.876 462.038 li
730.149 445.794 li
742.272 463.02 li
745.732 458.728 li
737.531 479.864 li
cp
743.842 454.86 mo
732.824 439.036 li
696.277 460.136 li
701.672 488.799 li
703.28 484.654 li
711.034 495.676 li
702.838 505.877 li
704.948 508.909 li
737.781 489.953 li
754.002 448.201 li
751.768 445.014 li
743.842 454.86 li
cp
745.952 577.888 mo
721.683 591.928 li
721.683 596.518 li
713.499 584.836 li
712.004 582.701 712.004 579.011 713.502 575.148 cv
721.683 554.045 li
721.683 558.578 li
744.456 545.401 li
745.45 563.943 li
745.952 577.888 li
cp
754.247 473.561 mo
722.027 513.498 li
741.855 541.719 li
726.346 550.673 li
726.346 539.735 li
722.125 542.173 li
705.709 584.49 li
721.88 607.54 li
726.346 604.961 li
726.346 594.421 li
748.504 581.712 li
777.608 506.739 li
754.247 473.561 li
cp
0 0 0 0 cmyk
f
701.611 488.957 mo
701.611 457.057 li
674.642 472.627 li
651.331 532.752 li
683.451 535.771 li
701.611 488.957 li
cp
f
642.397 589.241 mo
630.988 588.699 li
643.11 557.446 li
639.65 557.148 li
656.055 547.677 li
659.054 545.945 661.826 546.191 663.327 548.323 cv
671.526 559.968 li
668.115 559.67 li
656.753 589.01 li
642.397 589.241 li
cp
669.686 566.045 mo
677.907 566.767 li
680.016 561.327 li
663.6 537.966 li
631.209 556.639 li
628.976 562.377 li
636.877 563.112 li
625.737 591.646 li
654.84 633.041 li
701.513 606.066 li
701.611 563.111 li
661.931 586.021 li
669.686 566.045 li
cp
f
646.047 168.04 mo
843.874 282.12 li
851.012 286.236 851.017 296.537 843.883 300.66 cv
625.177 427.055 li
615.716 432.522 604.056 432.528 594.59 427.069 cv
396.763 312.988 li
389.625 308.872 389.62 298.572 396.754 294.449 cv
615.46 168.054 li
624.921 162.586 636.581 162.581 646.047 168.04 cv
cp
f
609.872 427.871 mo
614.851 427.87 619.761 426.554 624.072 424.063 cv
842.778 297.668 li
845.436 296.132 847.022 293.382 847.02 290.312 cv
847.019 287.241 845.43 284.492 842.771 282.959 cv
644.944 168.878 li
640.638 166.396 635.736 165.083 630.767 165.083 cv
625.788 165.083 620.878 166.4 616.568 168.892 cv
397.862 295.286 li
395.203 296.822 393.617 299.572 393.618 302.643 cv
393.62 305.713 395.209 308.462 397.868 309.995 cv
595.695 424.076 li
600 426.559 604.902 427.871 609.871 427.871 cv
609.872 427.871 li
cp
level3{
gsave
clp
[453.402 0 0 453.402 393.618 296.477 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[453.402 0 0 453.402 393.618 296.477 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
809.511 289.448 mo
634.159 188.324 li
431.126 305.661 li
606.478 406.784 li
809.511 289.448 li
cp
level3{
gsave
clp
[64.2962 203.094 203.094 -64.2962 597.855 226.598 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[64.2962 203.094 203.094 -64.2962 597.855 226.598 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
634.16 390.787 mo
634.16 188.324 li
431.127 305.66 li
606.479 406.784 li
634.16 390.787 li
cp
.572595 .356023 0 0 cmyk
f
1000.01 686.713 mo
1010.53 691.838 1010.53 700.147 1000.01 705.273 cv
989.487 710.398 972.431 710.398 961.911 705.273 cv
951.392 700.148 951.392 691.839 961.912 686.714 cv
972.432 681.588 989.489 681.588 1000.01 686.713 cv
cp
.113375 .0542306 .0740063 0 cmyk
f
961.297 672.989 mo
963.323 665.812 972.086 656.478 982.466 656.478 cv
994.312 656.478 1003.52 663.993 1003.58 672.678 cv
1006.88 675.705 1009.15 682.991 1009.15 687.167 cv
1009.15 696.943 998.352 704.868 985.034 704.868 cv
976.777 704.868 969.492 703.403 965.145 698.758 cv
964.624 698.794 964.096 698.814 963.561 698.814 cv
954.399 698.814 946.971 691.778 946.971 685.052 cv
946.971 678.891 953.206 673.801 961.297 672.989 cv
cp
.739467 .0771801 .942016 .00146487 cmyk
f
989.561 701.835 mo
1001.86 701.835 1011.86 694.491 1011.86 685.464 cv
1011.86 681.716 1010.18 678.188 1006.99 675.259 cv
1005.5 673.892 li
1005.49 672.141 li
1005.44 664.426 996.843 658.149 986.333 658.149 cv
977.293 658.149 969.403 662.856 967.573 669.341 cv
966.589 672.827 li
961.783 673.309 li
955.288 673.96 950.391 678.086 950.391 682.907 cv
950.391 688.251 956.314 692.599 963.594 692.599 cv
963.996 692.599 964.424 692.583 964.865 692.553 cv
968.881 692.274 li
971.164 694.716 li
975.335 699.174 982.213 701.835 989.561 701.835 cv
cp
level3{
gsave
clp
[-61.4722 -2.75992e-09 -2.75992e-09 61.4722 1011.86 679.992 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-61.4722 -2.75992e-09 -2.75992e-09 61.4722 1011.86 679.992 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
973.658 668.358 mo
973.619 668.984 973.831 669.502 974.127 669.968 cv
974.431 670.429 974.84 670.829 975.322 671.161 cv
975.803 671.493 976.361 671.756 976.98 671.933 cv
977.604 672.102 978.281 672.199 979.07 672.095 cv
978.826 671.497 978.498 671.068 978.147 670.679 cv
977.791 670.295 977.405 669.966 976.977 669.674 cv
976.549 669.383 976.083 669.127 975.555 668.901 cv
975.018 668.68 974.439 668.48 973.658 668.358 cv
cp
.739467 .0771801 .942016 .00146487 cmyk
f
981.68 667.025 mo
981.035 667.395 980.656 667.85 980.38 668.323 cv
980.114 668.799 979.974 669.299 979.948 669.802 cv
979.921 670.305 980.01 670.811 980.225 671.3 cv
980.449 671.787 980.777 672.262 981.377 672.678 cv
981.816 672.154 982.034 671.685 982.201 671.225 cv
982.357 670.767 982.44 670.323 982.461 669.879 cv
982.481 669.435 982.443 668.989 982.334 668.525 cv
982.216 668.059 982.05 667.579 981.68 667.025 cv
cp
f
961.297 672.989 mo
966.219 672.678 966.589 672.827 966.589 672.827 cv
961.784 673.309 li
955.288 673.96 951.147 678.086 951.147 682.907 cv
951.147 688.251 956.314 691.488 963.594 691.488 cv
963.996 691.488 964.424 691.473 964.865 691.442 cv
968.881 691.164 li
971.164 693.605 li
975.335 698.063 982.213 700.91 989.561 700.91 cv
995.306 700.91 1000.55 700.232 1004.51 697.604 cv
1000.12 702.007 993.034 704.868 985.034 704.868 cv
976.777 704.868 969.492 703.403 965.145 698.758 cv
964.624 698.794 964.096 698.814 963.561 698.814 cv
954.399 698.814 946.971 691.778 946.971 685.052 cv
946.971 678.891 953.206 673.801 961.297 672.989 cv
cp
.837919 .308751 1 .207279 cmyk
f
986.192 695.067 mo
985.695 694.822 985.195 694.747 984.709 694.736 cv
984.224 694.731 983.753 694.806 983.316 694.943 cv
982.879 695.081 982.476 695.285 982.132 695.553 cv
981.792 695.824 981.5 696.149 981.357 696.599 cv
981.939 696.661 982.398 696.632 982.83 696.58 cv
983.259 696.523 983.65 696.437 984.024 696.315 cv
984.399 696.196 984.757 696.045 985.114 695.853 cv
985.47 695.653 985.826 695.427 986.192 695.067 cv
cp
.739467 .0771801 .942016 .00146487 cmyk
f
982.4 690.562 mo
981.823 690.646 981.391 690.858 981.026 691.109 cv
980.666 691.365 980.384 691.671 980.183 692.005 cv
979.982 692.339 979.863 692.704 979.842 693.084 cv
979.828 693.464 979.896 693.859 980.18 694.265 cv
980.661 694 980.971 693.733 981.244 693.465 cv
981.51 693.194 981.721 692.922 981.891 692.634 cv
982.062 692.346 982.194 692.045 982.289 691.713 cv
982.378 691.377 982.442 691.021 982.4 690.562 cv
cp
f
962.669 684.171 mo
962.134 684.67 961.874 685.201 961.711 685.732 cv
961.559 686.265 961.529 686.8 961.601 687.324 cv
961.674 687.849 961.854 688.363 962.147 688.854 cv
962.449 689.344 962.845 689.815 963.498 690.221 cv
963.867 689.635 964.011 689.108 964.097 688.595 cv
964.174 688.084 964.172 687.592 964.101 687.105 cv
964.031 686.62 963.895 686.142 963.68 685.657 cv
963.455 685.174 963.175 684.688 962.669 684.171 cv
cp
f
754.002 321.527 mo
680.517 364.485 li
606.479 406.784 li
580.922 299.348 li
676.471 316.945 li
754.002 321.527 li
cp
level3{
gsave
clp
[18.6699 172.869 172.869 -18.6699 663.543 274.15 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~(C_&Y(_%/Z)%IA])@dJ^)@dM_)\3\a*"Nhc*"Wnd*>'(f*YB4h*YK:i*tfCj+;,Ol+;5Um+VPao+qtpq
+qtpq,8D-t,S_6u,o.F"-5IR$-5RX%-Pma&-l<s).2X'*.2a0,.N0?..iKK0//oZ2//o]3/K>l5/fYu6
0-)290-)290HMA;0chM=1*7\?1E[nB1E[qC2'F4F2Ba@H2^0RK3$TaM3$]jO3@#sP3[H0S4!c9T4=2HV
4=;QX4XVZY4t%i[5:J&^5Ue/_5q4>a5q4Ab67XPd6RsYe6nBkh74g(k74g(k7P6:n7kQCo81uRq8M;^s
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[18.6699 172.869 172.869 -18.6699 663.543 274.15 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~()Ic'(Dmu+(`=2/)&X;0)&aD3)B0V7)]K_8)]Th;*$$%?*??.@*?H7C*ZlIG+!2RH+!;[K+<_mO+X&!P
+X&$R+sJ6V,9nHZ,U=Z^,pai`,palb-71)f-RU;j-n$Jl-n$Mn.4H_r.Olr!.k<,#.k</%/1`A)/M/S-
/hSb//hSb00/"t40JG180ekC<1,:U?1,:U@1GgpG2)R6L2E!HP2`EZS2`EZT3&ilX3B9)\3]];`4$,Mc
4$,Mc4?P_g4Ztqk5!D.o5<h@s5X7S"5X7S"5s[e&6:+"*6UO4.6psF26psF277BX67Rfj:7n6'>84Z9B
~>
<~$k*OQ$k3XT%1NaU%1NaU%1WjX%LrsY%M''\%hK9`&.fBa&.oKd&J5Te&J5Te&J>]h&eYfi&ebol',)#m
',)&o'GM5q'GM8s'bqGu'bqK"()@Z$()@]&(Ddl((Ddo*(`4,.)&X;0)&X>2)B'M4)B'P6)]K_8)]Kb:
*#oq<*#oq=*??.@*??.A*Zc@E+!2RH+!2RI+<VdL+<VdM+X&!Q+sJ3U,9nEX,9nEY,U=W\,U=W],paia
-71&d-71&d-RU8h-n$Jl-n$Jl.4H\p.4H\p.Olnt.Olnt.k<,#/1`>'/1`>'/M/P+/M/P+/hSb//hSb/
~>
<~',)#m',2,p'GM5q'GV>t'bqGu'c%Q#()@Z$()@Z$()Ic'(Ddl((Ddl((Dmu+(`4),(`=2/)&X;0)&X;0
)&X>2)B'M4)B'M4)B'P6)]K_8)]K_8)]Kb:*#oq<*#ot>*??.@*??1B*Zc@D*ZcCF+!2RH+!2RH+!2UJ
+<VdL+<VdL+<VdM+X&!P+X&!Q+sJ3U,9nEX,9nEY,U=W],pai`,paia-71&d-71&e-RU8h-RU8h-RU8i
-n$Jl-n$Jl-n$Jl.4H\p.4H\p.4H\p.Olnt.Olnt.Olnt.k<,#/1`>'/1`>'/M/P+/M/P+/M/P+/hSb/
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
616.103 302.528 mo
616.103 302.528 579.2 297.645 566.841 298.075 cv
548.15 298.728 508.295 299.245 492.984 309.985 cv
480.012 319.086 462.97 324.023 462.97 324.023 cv
606.479 406.784 li
606.479 406.784 627.454 358.868 626.383 341.738 cv
624.64 313.858 616.103 302.528 616.103 302.528 cv
cp
level3{
gsave
clp
[-140.703 -36.7851 -36.7851 140.703 635.162 360.897 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-140.703 -36.7851 -36.7851 140.703 635.162 360.897 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
781.457 305.661 mo
781.457 305.661 717.853 301.923 680.241 290.791 cv
651.331 282.234 581.092 298.694 581.092 298.694 cv
581.092 298.694 621.555 324.592 683.693 329.541 cv
705.571 331.283 751.061 323.247 751.061 323.247 cv
781.457 305.661 li
cp
level3{
gsave
clp
[-200.365 -8.99579e-09 -8.99579e-09 200.365 781.457 309.057 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-200.365 -8.99579e-09 -8.99579e-09 200.365 781.457 309.057 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
810.113 741.611 mo
795.74 749.91 795.74 763.364 810.114 771.663 cv
824.487 779.962 847.791 779.962 862.164 771.664 cv
876.537 763.365 876.537 749.911 862.163 741.612 cv
847.79 733.313 824.486 733.313 810.113 741.611 cv
cp
.113375 .0542306 .0740063 0 cmyk
f
589.387 757.968 mo
599.413 763.757 599.413 773.142 589.387 778.931 cv
579.36 784.72 563.104 784.72 553.077 778.932 cv
543.051 773.143 543.051 763.757 553.078 757.968 cv
563.104 752.179 579.361 752.179 589.387 757.968 cv
cp
f
461.695 697.072 mo
471.722 702.86 471.722 712.246 461.695 718.035 cv
451.668 723.824 435.412 723.824 425.386 718.035 cv
415.359 712.247 415.359 702.861 425.386 697.072 cv
435.413 691.283 451.669 691.283 461.695 697.072 cv
cp
f
775.439 699.056 mo
769.38 698.611 li
770.021 681.343 li
777.403 685.087 li
775.439 699.056 li
cp
0 .182437 .126284 0 cmyk
f
774.166 707.002 mo
766.975 705.565 li
766.975 705.565 767.525 702.766 767.994 701.479 cv
768.998 698.729 769.955 697.209 769.955 697.209 cv
775.439 699.056 li
774.166 707.002 li
cp
f
775.439 699.056 mo
774.166 701.97 li
774.166 701.97 774.497 704.768 774.542 705.704 cv
774.592 706.733 774.529 708.777 774.894 709.808 cv
775.061 710.277 775.801 710.228 775.999 709.808 cv
777.601 706.419 775.439 699.056 775.439 699.056 cv
cp
f
766.975 705.565 mo
766.975 705.565 766.532 707.831 766.414 708.592 cv
766.278 709.465 766.169 710.813 766.467 712.056 cv
766.555 712.422 767.171 712.334 767.274 712.012 cv
767.63 710.893 767.684 709.551 767.924 708.766 cv
768.2 707.86 769.624 705.385 769.624 705.385 cv
766.975 705.565 li
cp
f
770.766 705.672 mo
768.844 705.385 li
768.844 705.385 768.355 708.553 768.3 709.474 cv
768.239 710.49 768.056 712.581 767.995 713.534 cv
767.976 713.834 768.236 714.139 768.596 714.216 cv
768.957 714.293 769.166 714.056 769.24 713.866 cv
769.529 713.126 769.745 711.407 770.12 709.968 cv
770.697 707.747 770.766 705.672 770.766 705.672 cv
cp
f
774.166 707.002 mo
771.789 706.311 li
771.789 706.311 771.131 710.849 771.431 714.461 cv
771.49 715.166 772.428 715.084 772.602 714.703 cv
772.758 714.36 773.123 711.697 773.211 710.704 cv
773.322 709.439 774.166 707.002 774.166 707.002 cv
cp
f
772.686 705.738 mo
770.223 706.118 li
770.223 706.118 769.439 710.707 769.665 714.325 cv
769.681 714.583 769.904 714.872 770.286 714.977 cv
770.669 715.081 770.925 714.645 770.976 714.394 cv
771.131 713.638 771.357 711.66 771.499 710.673 cv
771.68 709.417 772.686 705.738 772.686 705.738 cv
cp
f
804.04 755.187 mo
803.569 755.536 803.598 757.178 804 757.452 cv
804.988 758.128 806.859 759.396 807.281 759.638 cv
808.006 760.052 810.169 760.658 811.959 759.457 cv
813.541 758.396 815.943 756.586 815.943 756.586 cv
815.943 757.352 li
820.231 754.794 li
820.539 754.646 820.74 754.335 820.751 753.989 cv
820.751 751.98 li
820.751 751.98 805.65 753.994 804.04 755.187 cv
cp
.702449 .638575 .710719 .82858 cmyk
f
811.909 748.985 mo
812.994 747.369 815.231 744.585 818.698 745.597 cv
819.402 745.802 820.701 746.797 820.901 747.628 cv
821.011 748.08 820.848 748.999 820.901 749.294 cv
821.065 750.211 821.096 751.439 821.037 751.942 cv
820.963 752.575 820.567 753.112 819.984 753.352 cv
818.739 753.863 816.658 754.718 815.804 755.408 cv
814.632 756.354 812.531 758.073 810.444 758.691 cv
809.256 759.044 807.476 758.449 806.938 758.188 cv
806.938 758.188 805.278 757.257 804.794 756.85 cv
803.857 756.059 803.675 754.839 804.115 754.139 cv
805.709 751.603 809.391 752.731 811.909 748.985 cv
cp
level3{
gsave
clp
[-17.1782 -7.7125e-10 -7.7125e-10 17.1782 821.065 752.09 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~"<-n4"<6t5"<@(7"<I.8"<R7:"<[=;"<dC<"=!O>"=*R>"=3X?"XWd@"X`jA"Xs!C"Y''D"Y0-E"Y93F
"YB<H"YKBI"YTHJ"Y]QL"YfWM"Z#cO"Z,iP"Z5lP"ZH#R"ZQ)S"uu;V#!2GX#!;PZ#<__\#<hh^#<qq`
#XJ4d#XS=f#X\Cg#XnRj#Y"Xk#tFgm#tOmn#tY!p#tb'q#tk-r#u(<u#u1C!#u:L##uCR$#uLX%#u^d'
#ugj(#upp)$!%!*$<I0,$<[<.$<[<.$<d?.$=!K0$=*Q1$=3Z3$=<`4$=Nl6$=Wr7$=a#8$=j)9$Y98;
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-17.1782 -7.7125e-10 -7.7125e-10 17.1782 821.065 752.09 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!sA`0"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\l3"U,&5"U,&5"U,)7"pP89"pP89"pP;;
#6tJ=#6tJ=#6tJ=#6tJ=#6tJ>#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A
#RC\A#RC\A#RC\A#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE$47+I
~>
<~)&aD3)B0V7)]Th;*$$%?*?H7C*ZlIG+!;[L+X/*S+sS<W,:"N[,UF`_,pjrd-R^Ak-n-So.4Qes.P!#"
.k</%/1`A)/M/S-/hSe10/#"50ekF=1,:XA1G^jE2)R9M2E!KQ2`E]U3B9,]3]]>a4$,Pe4?Pbi4Zttm
5!M7s5X7S#5s[e'6:4+.6psF377BX77Rfj;7n6'?84Z9C8P)KG8kVfN9MA,S9he>W:/4P[:JXb_:f1(f
;GpCj;c?Un<)cgr<E3%!<`W:'='&I)=BJ[-=]np3>?b<9>[1N=?!U`A?=$uG?smAM@:<SQ@U`eU@q0"Y
~>
<~oCMSFoCV\Io^qeJo_%nMp%A"Np%A"Np%A"Np%A"Np%7nKo^qeJo^h\GoCMSFoCMSFoCMSFoCMSFoCV\I
o^qeJo^qeJo^qhLp%A"Np%A"Np%A"Np%A"Np%@tLo^qeJo^qhLp%A"Np%A%Pp@e4Rp@e7Tp\4IXq"X[\
q>'j_qYL'bqYL'cqtp9fqtp9fqtp9fqtp9gr;?Kjr;?Kjr;?KkrVc]nrVc]orr2oss8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!rr2orrVc]nrVc]nrr2ors8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
819.232 748.137 mo
818.096 749.779 814.852 749.171 814.187 747.789 cv
811.244 741.668 811.244 738.546 811.244 738.546 cv
817.722 734.72 li
817.722 734.72 821.088 745.454 819.232 748.137 cv
cp
.739467 .0771801 .942016 .00146487 cmyk
f
820.043 742.055 mo
819.179 727.382 819.047 695.836 818.725 693.967 cv
817.812 688.677 830.939 682.61 836.18 673.337 cv
843.22 660.884 841.46 645.182 841.46 645.182 cv
811.413 650.616 li
811.413 650.616 791.176 684.019 797.004 704.053 cv
798.783 710.167 809.114 740.361 810.363 742.751 cv
813.137 748.057 820.159 744.015 820.043 742.055 cv
cp
.702449 .638575 .710719 .82858 cmyk
f
850.028 759.713 mo
849.615 760.124 849.936 762.25 850.665 762.715 cv
851.739 763.399 854.189 764.205 854.638 764.382 cv
855.408 764.684 856.488 764.933 858.264 763.443 cv
859.715 762.227 861.846 759.34 861.846 759.34 cv
861.846 760.092 li
865.238 757.398 li
865.52 757.208 865.654 756.875 865.636 756.533 cv
865.605 755.976 865.641 754.299 865.641 754.299 cv
865.641 754.299 851.44 758.309 850.028 759.713 cv
cp
f
856.493 752.732 mo
857.331 750.988 860.156 743.62 864.359 749.381 cv
865.709 751.231 865.688 753.726 865.672 754.944 cv
865.667 755.298 865.597 755.617 864.765 756.031 cv
863.569 756.626 861.969 757.676 861.227 758.478 cv
860.211 759.577 858.721 762.058 856.76 762.967 cv
855.642 763.484 853.81 763.158 853.244 762.979 cv
853.244 762.979 851.483 762.305 850.95 761.975 cv
849.917 761.334 849.566 760.162 849.899 759.411 cv
851.106 756.689 854.551 756.776 856.493 752.732 cv
cp
level3{
gsave
clp
[-15.8984 -7.13793e-10 -7.13793e-10 15.8984 865.676 755.231 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-15.8984 -7.13793e-10 -7.13793e-10 15.8984 865.676 755.231 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
854.087 743.682 mo
854.087 743.682 858.207 747.844 858.576 751.897 cv
858.713 753.405 861.835 753.561 863.33 752.417 cv
864.39 751.607 861.803 743.682 861.803 743.682 cv
854.087 743.682 li
cp
.739467 .0771801 .942016 .00146487 cmyk
f
781.349 632.793 mo
779.084 629.001 788.816 611.768 795.856 612.964 cv
802.897 614.16 808.082 621.424 808.338 625.834 cv
808.498 628.59 831.443 658.875 831.443 658.875 cv
831.443 658.875 814.735 656.104 810.138 653.045 cv
799.854 646.197 783.198 635.89 781.349 632.793 cv
cp
level3{
gsave
clp
[42.9822 41.6269 41.6269 -42.9822 789.562 622.22 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[42.9822 41.6269 41.6269 -42.9822 789.562 622.22 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
781.349 632.793 mo
779.084 629.001 817.923 657.517 817.923 657.517 cv
817.923 657.517 813.541 658.071 808.945 655.011 cv
798.66 648.164 783.198 635.89 781.349 632.793 cv
cp
level3{
gsave
clp
[-36.669 -1.64633e-09 -1.64633e-09 36.669 817.922 645.001 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!91Qi!9:`m!9Cio!9M#s!9V0!!9_9#!9hH'!9hK(!9qZ,!:.l0!:8#3!:8)5!:A89!:JD<!:SP?!:\\B
!:ekF!:o"I!;#.L!VGCP!qkXT"81gW"SV*\"S_6_"o.Nd"o.Wg#5Rlk#Q",o#l=>t$2aT#$2a]&$N0o)
$iU)+%/p2,%K?A.%KHG/%fcP0&-)Y2&HDb3&c_k4&c_k4'*%t5'EA(7'EA(7'`\18('"::(B=C;(B=C;
(]XL<)#sU>)?9^?)?9^?)ZTg@)uopB)uopB*<6$C*<6$D*WQ-E*WQ-F*rl6G+92?I+92?I+TMHK+TMHK
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-36.669 -1.64633e-09 -1.64633e-09 36.669 817.922 645.001 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzzzzzzzzzzz!!!$#!<E6'!WiH+!s8W-!s8Z/"9\i1"9\l3"U,)7"pP;;#6tM?#RC\A#RC_C#
mgqG$47+J$O[=N$k*OQ$k*OR%1NaV%LrsZ%hB0^&.fBa&.fBb&J5Tf&eYfi&eYfj',)#n'GM5r'bqGu'
bqH!()@Z$(Ddl((`4),(`4),)&X;0)B'M4)B'M4)]K_8)]K_8*#oq<*#oq<*??.@*Zc@D*Zc@D+!2RH+
!2RH~>
<~iSrkVioB(Zj5f:^jQ5LbjlY^fk3(pjkND$kkNM-nkiq?slKdd%lg*m&lg4!)m-X3-mI'E1mdKW5n*oi9
nF5u<naZ2@o()DDoCMVHo^qeJo^qhLp%A%Pp@e7Tp\4FVp\4IXq"X[\q>'j^q>'m`qYL'bqYL*dqtp<h
r;?Kjr;?KkrVc]orr2oss8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~\[oDc]Y2"l]tV7s^qmk(_Sa:/_o0O5`lH-?a2lBEb0.uPbg"DXcHjh`d*^7he'umte^i='f@\a/g"P07
gt^`AhVR/Ii8ESQio9"YjQ,Fak2tjjkiqBtlg*p)mI'H4nF?)?oCMVHp%A%Pp\=R[qYL*dr;HWorr2rt
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3%!<E3%!<E3%!<E3&!WiE)!WiE)!WiE
*!s8W-!s8W-!s8W-!s8W-"9\i1"9\i1"9\i1"9\i1"U,&5"U,&5"U,&5"pP89"pP89#6tJ=#6tJ=#RC\
A#RC\A#mgnE#mgnE~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
864.625 746.67 mo
862.73 731.147 832.098 712.387 831.776 710.519 cv
830.863 705.228 845.516 687.419 850.758 678.146 cv
857.797 665.692 856.079 660.092 856.079 660.092 cv
831.443 658.875 li
831.443 658.875 806.595 696.563 812.221 716.654 cv
814.269 723.964 853.155 747.675 855.43 749.125 cv
859.517 751.729 864.768 747.839 864.625 746.67 cv
cp
.702449 .638575 .710719 .82858 cmyk
f
801.666 639.709 mo
822.645 647.676 829.508 662.122 834.462 662.124 cv
837.792 662.126 855.358 665.666 857.745 662.169 cv
861.469 656.713 852.466 640.597 848.314 634.821 cv
845.384 630.743 835.763 622.491 831.443 619.932 cv
825.341 616.315 818.295 612.904 808.427 612.904 cv
804.485 612.904 791.642 614.155 791.642 614.155 cv
791.642 614.155 798.284 615.928 800.878 620.353 cv
806.686 630.26 801.666 639.709 801.666 639.709 cv
cp
level3{
gsave
clp
[1.98209 -55.8949 55.8949 1.98209 823.872 672.14 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.98209 -55.8949 55.8949 1.98209 823.872 672.14 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
792.563 637.449 mo
792.042 635.711 784.99 626.811 780.091 626.811 cv
771.609 626.811 767.676 680.496 767.676 693.006 cv
767.676 695.752 777.733 694.909 777.733 694.909 cv
777.733 694.909 779.884 680.231 783.382 663.79 cv
788.234 640.986 793.961 642.118 792.563 637.449 cv
cp
level3{
gsave
clp
[2.75015 -77.5541 77.5541 2.75015 778.644 709.737 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.75015 -77.5541 77.5541 2.75015 778.644 709.737 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
777.032 615.674 mo
783.789 609.168 789.907 611.35 789.907 611.35 cv
789.907 611.35 793.044 609.743 796.586 612.027 cv
802.217 615.658 801.01 621.485 801.588 623.104 cv
803.278 627.83 799.731 627.87 799.05 631.692 cv
798.413 635.261 785.736 636.815 781.335 633.821 cv
779.827 632.795 774.583 628.24 773.783 623.702 cv
773.25 620.68 775.317 617.324 777.032 615.674 cv
cp
.702449 .638575 .710719 .82858 cmyk
f
778.157 630.183 mo
778.157 630.183 782.296 636.948 783.795 639.123 cv
786.902 643.632 790.091 645.369 794.598 643.077 cv
797.679 641.51 801.187 635.731 799.349 630.572 cv
798.194 627.331 793.863 619.994 793.863 619.994 cv
791.281 616.557 775.63 626.819 778.157 630.183 cv
cp
0 .182437 .126284 0 cmyk
f
798.962 624.852 mo
796.721 625.209 796.386 626.472 796.249 628.177 cv
796.112 629.881 797.239 631.233 798.687 630.975 cv
800.18 630.709 801.128 629.375 801.265 627.671 cv
801.402 625.967 800.457 624.613 798.962 624.852 cv
cp
f
799.104 626.974 mo
799.05 629.192 li
799.577 629.329 800.062 628.027 800.077 627.415 cv
800.092 626.802 799.581 626.655 799.104 626.974 cv
cp
.0208438 .287205 .204074 0 cmyk
f
790.902 614.954 mo
787.374 613.99 777.499 615.51 775.08 621.117 cv
773.058 625.805 780.328 639.709 780.328 639.709 cv
781.933 637.175 li
782.48 638.213 li
782.48 638.213 785.544 635.794 785.97 635.405 cv
790.192 631.561 791.614 626.409 796.249 628.177 cv
797.87 625.155 li
797.87 625.155 795.62 616.243 790.902 614.954 cv
cp
.702449 .638575 .710719 .82858 cmyk
f
787.876 641.062 mo
788.148 640.759 788.286 640.315 788.411 640.077 cv
788.765 639.4 789.287 639.078 790.124 638.808 cv
790.967 638.535 791.647 638.536 792.224 638.614 cv
792.902 638.706 793.916 639.175 794.397 639.099 cv
799.656 638.263 799.349 630.572 799.349 630.572 cv
799.349 630.572 802.233 637.304 798.593 641.085 cv
794.925 644.896 789.518 644.447 787.134 643.161 cv
784.109 641.53 780.85 634.888 780.85 634.888 cv
780.85 634.888 786.006 643.14 787.876 641.062 cv
cp
f
831.335 705.607 mo
807.419 690.462 li
803.258 689.331 li
827.173 704.477 li
831.335 705.607 li
cp
.0741283 .0228885 .041413 0 cmyk
f
836.794 698.011 mo
812.878 682.865 li
807.419 690.462 li
831.335 705.607 li
836.794 698.011 li
cp
level3{
gsave
clp
[-21.2641 9.88966 9.88966 21.2641 832.738 689.292 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzz!<<*"!<<*"!WW3#!WW3#!WW3#!rr<$!rr<$!rr<$"98E%"98E%"98H&"T\W("T\W("T\W("T\W
("p"`)"p"`)"p"`)#6=i*#6=i*#QXu,#QXu,#Qb&-#m(/.#m(/.#m(/.$3C8/$3C8/$3C8/$3C8/$N^D
1$NgJ2$j-S3$j-S3%0H\4%0H\4%0H\4%Kce5%Kce5%Kch6%g)q7%g)q7&-E%8&-N+9&Hi4:&Hi4:&Hi4
:&d/=;&d/=;'*JF<'*JF<'*JF<'EeO='EeR>'a4a@('OjA('OjA(BjsB~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-21.2641 9.88966 9.88966 21.2641 832.738 689.292 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzz!!**$!<E3%!<E3%!<N<(!WiE)!WiE)!WrN,!s8W-!s8W-!s8Z/"9\i1"9\i1"9\i1"9\l3"U,
&5"U,&5"U,)7"pP89"pP;;#6tJ=#6tJ=#6tM?#RC\A#RC\A#RC_C#mgnE#mgnE#mgnE#mgnF$47+I$47
+J$O[=M$O[=N$k*OQ$k*OQ$k*OR%1NaU%1NaU%1NaV%LrsY%LrsZ%hB0]%hB0]&.fBa&.fBa&.fBa&J5
Te&J5Te&eYfi&eYfi&eYfi',)#m',)#m'GM5q'bqGu'bqGu()@Z$~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3&!Wi
E)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!s8W-!s8W-!s8W-!s8W-!s8
W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-"9\i1"9\i1"9\i1"9\i1~>
<~zzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3&
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE*!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-"9\i1"9\i1"9\i1"9\i1"9\i1~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
826.777 687.597 mo
831.923 692.301 li
841.161 685.668 li
834.891 677.985 li
826.777 687.597 li
cp
0 .182437 .126284 0 cmyk
f
821.133 693.261 mo
827.692 698.257 li
827.692 698.257 829.364 696.475 830.332 695.506 cv
832.191 693.646 832.401 690.737 832.401 690.737 cv
829.579 687.826 li
829.579 687.826 826.504 687.623 825.73 687.901 cv
823.86 688.572 821.133 693.261 821.133 693.261 cv
cp
f
823.744 687.705 mo
824.818 687.539 827.078 687.239 827.078 687.239 cv
826.054 690.386 li
826.054 690.386 823.051 691.157 822.419 691.27 cv
821.648 691.405 819.32 692.938 818.284 693.29 cv
817.813 693.45 817.201 692.798 817.4 692.378 cv
818.107 690.882 821.985 687.979 823.744 687.705 cv
cp
f
827.692 698.257 mo
827.692 698.257 825.558 699.708 824.86 700.131 cv
824.245 700.501 820.397 700.533 820.139 700.281 cv
819.921 700.067 820.049 699.683 820.264 699.476 cv
820.264 699.476 823.844 698.864 824.714 698.257 cv
825.256 697.878 826.191 696.066 826.191 696.066 cv
827.692 698.257 li
cp
f
824.79 694.909 mo
825.867 696.658 li
823.069 699.066 li
823.069 699.066 819.849 700.003 819.138 700.642 cv
818.915 700.843 818.516 700.827 818.231 700.592 cv
817.947 700.357 818.004 700.046 818.107 699.87 cv
819.126 698.129 824.79 694.909 824.79 694.909 cv
cp
f
824.509 695.197 mo
820.893 698.362 li
820.893 698.362 818.515 699.012 817.405 699.822 cv
816.812 700.256 816.51 700.229 816.204 699.977 cv
815.898 699.725 815.782 699.283 816.352 698.839 cv
817.995 697.562 822.908 694.236 822.908 694.236 cv
824.509 695.197 li
cp
f
822.22 691.558 mo
823.327 693.789 li
823.327 693.789 820.026 697.073 816.937 698.972 cv
816.718 699.106 816.353 699.091 816.047 698.838 cv
815.742 698.586 815.778 698.229 815.859 697.985 cv
815.977 697.629 818.066 695.783 818.868 695.368 cv
820.351 694.602 822.22 691.558 822.22 691.558 cv
cp
f
827.382 627.361 mo
838.306 631.858 854.362 657.485 853.819 663.426 cv
853.695 664.783 848.978 683.488 837.269 690.087 cv
835.341 691.174 828.29 685.403 829.418 682.791 cv
832.241 676.257 840.373 669.923 836.63 660.318 cv
834.624 655.173 828.478 651.071 821.044 642.9 cv
810.893 631.742 821.012 624.738 827.382 627.361 cv
cp
level3{
gsave
clp
[-39.3689 -70.885 70.885 -39.3689 854.892 696.048 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-39.3689 -70.885 70.885 -39.3689 854.892 696.048 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
515.677 336.02 mo
512.708 332.541 li
511.353 335.418 li
513.515 336.854 li
515.677 336.02 li
cp
.113375 .0542306 .0740063 0 cmyk
f
650.57 331.637 mo
643.615 333.076 li
657.827 341.137 li
650.57 331.637 li
cp
f
669.338 353.066 mo
654.349 353.855 li
649.299 359.2 li
669.338 353.066 li
cp
f
659.318 359.2 mo
641.941 356.133 li
648.626 362.474 li
659.318 359.2 li
cp
f
711.771 304.801 mo
699.057 305.349 li
702.155 307.261 li
711.771 304.801 li
cp
f
636.617 335.446 mo
650.721 339.996 li
652.669 334.856 li
636.617 335.446 li
cp
f
630.228 378.524 mo
641.667 377.787 li
641.941 370.013 li
630.228 378.524 li
cp
f
572.676 373.042 mo
584.116 372.305 li
584.389 364.53 li
572.676 373.042 li
cp
f
575.596 373.042 mo
588.246 376.058 li
584.389 368.282 li
575.596 373.042 li
cp
f
557.859 347.267 mo
554.808 352.107 li
558.713 350.327 li
557.859 347.267 li
cp
0 0 0 0 cmyk
f
517.282 306.637 mo
512.055 307.112 li
518.928 308.643 li
517.282 306.637 li
cp
.113375 .0542306 .0740063 0 cmyk
f
696.594 331.395 mo
695.482 333.918 li
705.414 331.025 li
696.594 331.395 li
cp
f
599.617 370.698 mo
598.722 374.451 li
601.278 371.625 li
599.617 370.698 li
cp
f
567.281 345.635 mo
566.428 349.478 li
570.042 349.687 li
567.281 345.635 li
cp
0 0 0 0 cmyk
f
638.263 307.729 mo
620.32 305.921 li
628.815 311.348 li
638.263 307.729 li
cp
.113375 .0542306 .0740063 0 cmyk
f
650.973 306.115 mo
630.451 304.046 li
628.001 308.226 li
650.973 306.115 li
cp
f
780.901 798.515 mo
740.746 773.1 li
730.255 786.389 li
770.407 811.804 li
780.901 798.515 li
cp
level3{
gsave
clp
[-37.0026 17.2094 17.2094 37.0026 774.079 783.847 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-37.0026 17.2094 17.2094 37.0026 774.079 783.847 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
790.721 801.183 mo
750.568 775.768 li
740.746 773.1 li
780.897 798.515 li
790.721 801.183 li
cp
.273198 .189059 .207431 0 cmyk
f
770.407 811.804 mo
730.255 786.389 li
719.608 780.565 li
759.76 805.98 li
770.407 811.804 li
cp
f
803.606 783.252 mo
763.453 757.837 li
750.568 775.768 li
790.72 801.183 li
803.606 783.252 li
cp
level3{
gsave
clp
[-40.744 18.9496 18.9496 40.744 797.459 770.035 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-40.744 18.9496 18.9496 40.744 797.459 770.035 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
494.08 558.589 mo
493.733 563.323 li
477.997 563.9 li
478.059 558.397 li
494.08 558.589 li
cp
0 .182437 .126284 0 cmyk
f
501.785 557.588 mo
501.144 563.613 li
501.144 563.613 498.635 564.444 497.395 564.511 cv
495.015 564.638 493.195 562.892 493.195 562.892 cv
492.982 559.728 li
492.982 559.728 493.966 557.853 494.626 557.542 cv
496.22 556.793 501.785 557.588 501.785 557.588 cv
cp
f
497.084 555.807 mo
496.221 556.23 494.579 557.36 494.156 557.94 cv
493.924 558.259 496.85 558.985 496.85 558.985 cv
496.85 558.985 498.562 557.202 499.024 556.889 cv
499.587 556.507 499.857 556.557 500.727 556.131 cv
501.123 555.938 501.327 555.698 501.016 555.459 cv
500.27 554.884 497.976 555.368 497.084 555.807 cv
cp
f
501.144 563.613 mo
501.144 563.613 503.375 563.525 504.085 563.334 cv
504.709 563.166 506.398 562.259 506.399 562.258 cv
506.845 562.066 507.065 561.972 507.055 561.69 cv
507.046 561.451 506.71 561.327 506.44 561.346 cv
499.579 562.298 li
501.144 563.613 li
cp
f
500.643 560.588 mo
500.556 562.01 li
504.472 561.732 li
504.472 561.732 507.046 561.376 507.908 561.29 cv
508.179 561.263 508.413 561.021 508.431 560.731 cv
508.449 560.443 508.205 560.315 508.026 560.284 cv
506.239 559.98 500.643 560.588 500.643 560.588 cv
cp
f
501.008 560.572 mo
505 560.176 li
505 560.176 507.202 560.079 508.424 559.849 cv
509.077 559.725 509.244 559.533 509.263 559.224 cv
509.282 558.913 509.058 558.616 508.413 558.721 cv
506.553 559.022 501.348 559.135 501.348 559.135 cv
501.008 560.572 li
cp
f
501.785 557.588 mo
500.914 558.946 li
500.914 558.946 506.332 559.174 508.142 559.133 cv
508.376 559.127 508.58 558.852 508.599 558.541 cv
508.618 558.231 508.358 558.068 508.146 557.989 cv
507.835 557.873 505.394 557.404 504.579 557.351 cv
503.768 557.298 501.785 557.588 501.785 557.588 cv
cp
f
449.229 542.042 mo
451.553 549.394 457.393 555.367 462.054 558.678 cv
468.435 563.211 471.247 564.703 482.723 565.76 cv
483.531 565.835 484.528 565.246 484.55 564.534 cv
484.611 562.55 484.391 558.666 484.391 558.666 cv
484.385 557.306 482.615 556.966 481.859 556.906 cv
476.335 556.468 471.552 553.904 469.572 551.956 cv
467.807 550.221 461.948 544.168 459.762 538.291 cv
458.91 536.002 448.165 538.676 449.229 542.042 cv
cp
.702449 .638575 .710719 .82858 cmyk
f
454.377 537.549 mo
453.186 525.726 456.159 519.931 451.229 513.856 cv
447.609 509.396 444.558 507.633 437.668 509.239 cv
435.44 509.759 431.736 511.404 429.624 517.337 cv
428.328 520.979 430.023 526.955 430.917 529.362 cv
432.157 532.702 435.927 533.955 435.283 538.537 cv
432.588 557.701 455.034 544.075 454.377 537.549 cv
cp
level3{
gsave
clp
[4.71651 28.1164 -28.1164 4.71651 440.423 514.261 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.71651 28.1164 -28.1164 4.71651 440.423 514.261 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
435.764 516.3 mo
435.329 515.032 li
435.112 514.401 435.33 513.639 435.894 513.051 cv
436.499 512.422 437.39 512.107 438.164 512.25 cv
440.024 512.593 li
435.764 516.3 li
cp
.702449 .638575 .710719 .82858 cmyk
f
430.035 694.494 mo
428.841 695.104 427.221 697.863 426.328 698.923 cv
425.591 699.799 423.616 701.213 423.16 702.231 cv
422.623 703.431 422.095 705.83 422.527 706.863 cv
422.69 707.254 424.099 708.816 424.54 708.846 cv
425.577 708.915 427.563 706.999 428.434 706.174 cv
429.574 705.095 430.551 702.048 431.399 700.738 cv
431.957 699.878 433.421 697.701 433.5 696.763 cv
433.586 695.761 432.464 695.093 431.671 694.677 cv
431.238 694.449 430.553 694.229 430.035 694.494 cv
cp
.837919 .308751 1 .207279 cmyk
f
449.543 705.715 mo
449.547 705.062 449.887 704.139 449.982 703.713 cv
450.157 702.933 450.921 702.403 451.533 702.211 cv
454.544 701.26 455.793 703.574 456.804 705.676 cv
458.613 709.438 459.491 710.628 462.237 712.394 cv
462.625 712.643 462.78 713.235 462.577 713.707 cv
462.378 714.173 461.231 714.936 460.864 715.163 cv
460.235 715.553 459.133 715.964 457.473 714.997 cv
454.372 713.191 452.315 710.415 452.315 710.415 cv
452.314 711.554 li
450.107 710.064 li
450.107 710.064 449.532 707.902 449.543 705.715 cv
cp
f
431.281 700.174 mo
432.139 699.275 433.067 697.573 433.139 696.734 cv
433.214 695.839 432.212 695.241 431.503 694.869 cv
431.116 694.667 430.504 694.47 430.04 694.707 cv
429.081 695.196 427.994 696.735 427.632 698.059 cv
427.027 700.261 429.99 701.526 431.281 700.174 cv
cp
.739467 .0771801 .942016 .00146487 cmyk
f
453.419 707.552 mo
454.717 707.607 456.827 706.322 456.438 705.034 cv
455.874 703.167 454.428 701.587 451.943 702.372 cv
451.396 702.544 450.713 703.017 450.557 703.714 cv
450.472 704.095 450.305 704.519 450.37 705.099 cv
450.57 706.843 452.346 707.506 453.419 707.552 cv
cp
f
467.862 590.149 mo
466.429 578.577 435.329 594.471 434.401 612.011 cv
433.551 628.1 440.133 655.568 438.605 659.005 cv
435.902 665.088 431.713 692.522 429.256 695.505 cv
428.099 696.908 429.485 698.612 431.307 698.819 cv
431.307 698.819 446.081 677.037 449.74 661.274 cv
450.143 659.537 450.611 643.659 450.611 643.659 cv
452.937 655.109 li
452.937 655.109 452.501 661.857 451.99 665.282 cv
450.553 674.9 449.512 702.489 451.37 704.859 cv
452.501 706.303 454.894 705.666 455.107 703.859 cv
455.956 696.637 462.446 671.886 465.039 656.271 cv
467.832 639.454 469.172 600.736 467.862 590.149 cv
cp
0 .182437 .126284 0 cmyk
f
432.251 685.631 mo
432.251 685.631 429.82 694.995 428.922 696.084 cv
427.765 697.488 431.041 699.502 431.768 698.733 cv
434.238 696.12 435.062 694.276 437.639 688.763 cv
434.328 687.958 432.251 685.631 432.251 685.631 cv
cp
.00759899 .166293 .980072 0 cmyk
f
450.319 694.318 mo
450.493 699.853 450.477 704.164 451.154 705.027 cv
452.285 706.47 454.874 705.665 455.086 703.859 cv
455.306 701.99 455.985 698.685 456.763 694.891 cv
455.98 695.174 452.753 695.599 450.319 694.318 cv
cp
f
468.7 590.016 mo
467.056 580.859 462.246 571.753 462.246 571.753 cv
438.255 575.547 li
438.255 575.547 430.22 594.279 430.265 611.844 cv
430.274 615.259 432.158 625.949 433.399 635.322 cv
434.599 644.382 435.105 649.924 435.313 655.485 cv
435.625 663.812 464.795 659.184 468.036 648.002 cv
468.639 645.924 468.158 634.684 468.521 623.057 cv
468.963 608.928 469.735 595.775 468.7 590.016 cv
cp
level3{
gsave
clp
[6.16236 -92.6554 92.6554 6.16236 446.405 670.889 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.16236 -92.6554 92.6554 6.16236 446.405 670.889 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
462.675 549.075 mo
462.344 546.248 461.783 543.695 460.305 539.486 cv
459.412 536.943 457.823 535.792 455.365 535.805 cv
454.164 535.812 447.784 534.97 442.667 538.048 cv
440.485 539.36 435.808 541.907 434.082 544.379 cv
431.557 547.994 438.459 564.51 438.345 571.383 cv
438.322 572.751 437.93 574.014 438.022 575.104 cv
438.096 575.981 440.442 577.059 442.816 577.245 cv
455.556 578.242 462.084 572.96 462.642 570.68 cv
462.924 569.526 461.303 565.22 461.257 562.612 cv
461.226 560.871 462.996 551.815 462.675 549.075 cv
cp
.702449 .638575 .710719 .82858 cmyk
f
451.969 578.836 mo
451.966 578.838 li
451.969 578.836 li
cp
level3{
gsave
clp
[.00476655 0 0 .00476655 451.964 578.855 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~fu=!lfu=!lfu=!lfuF'mfuF'mg;a0ng;a0ng;a0ng;j6ogW0?pgW0?pgW0?pgrTNrgr]TsgrfZtgrfZt
h95j!hTPs"hTZ$#hp)3%hp29&hp;?'i6_N)iR%W*imIf,im[r.j4+,0j4421jjsJ4k1BY6kLon9kh?(;
lJ)@>leVUAm,.jDmG\*Gmc+9InDsWMn`TrQo'$,Sp$2SXp?_h[q=+Fbr:Bshs7H?ms7QEos7cZts7up%
s8***s8!--s8!61s8*H7s8*T=s8*fFs8*uMs8"#Ss8"/Zs8";as8"Ghs8+Vos8+`"s8+f)s8"i1s8"r8
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.00476655 0 0 .00476655 451.964 578.855 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~f\"j/f\"j/f\"j/f\"j/f\+s2g"G'3g"G'3g"G'3g"P06g=k97g=k97g=tB:gY:K;gY:K;gY:K;gYCT>
gt^`Ah;-oCh;-rEhVR,GhVR,GhVR/Ihr!AMi8ESQiSibSiSieUio8tWio9"YjQ,FajlPXek2tjikND'm
kiq?slK[[#lg*m'm-O*+mHs</mdKW6nF5r;naZ/?oCMVIp%A"Op\4IYq>1!dr;HWps8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~`Pog8`Pog8`Q#p;`l?$<`l?$<`l?$<`l?$<`lH-?a2c6@a2c6@a2c6@a2l?CaN;QGai_cKb0%lLb0.uO
bKJ)PbKJ,Rbfn>Vc-=PZcHab^cd0tbd*U.dd*U1fdF$Cje'lgreC<%!e^`7%f%/I)f@S[-g"G*5g=k<9
gY:K<gtgfChV[5Ki8NYSio8tXj5f:_k2tjjkih6pl0@R"lg4!*mdKZ8nac;Do^qeKp%A"Op@n=Vq"aa^
qYL'bqYL'bq>'j^qYL'bqYL'bqYL'bqYL'bqYL'bq>'j^q>'j^q>'j^qYL'bqYL'bqYL'bqYL'bq>'j^
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!*-'!sAc3"pYD>#mq%J$k3[V%hK<c',2/
s(`=53*?QCI+sS<X,pjuf.4Qi!/M8\10ekF>1c.'J2`E]U3B9,^4?Pbj~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3&!WiE*!s8W-"9\i1"U,&5"
pP89#6tM?#mq"I$k*RS%M'*_&ebom'c%Q$(`=20)]Kb;*ZlLK,:"Q^-n-Yt/h\n5~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
455.608 538.5 mo
455.488 537.563 454.81 536.782 453.899 536.531 cv
449.905 535.431 444.588 536.449 441.512 539.249 cv
441.512 539.249 440.004 540.412 440 541.362 cv
439.986 544.903 445.863 549.774 452.501 546.202 cv
455.835 544.407 455.875 540.596 455.608 538.5 cv
cp
0 .182437 .126284 0 cmyk
f
446.155 543.717 mo
452.643 542.125 li
448.852 524.863 li
441.892 525.749 li
441.892 525.749 443.622 533.346 443.814 534.445 cv
444.722 539.661 446.155 543.717 446.155 543.717 cv
cp
f
450.113 530.709 mo
450.76 533.539 li
450.76 533.539 449.426 534.482 447.067 533.809 cv
444.211 532.993 442.916 530.291 442.916 530.291 cv
442.458 528.391 li
444.709 530.341 446.218 532.35 450.113 530.709 cv
cp
.0208438 .287205 .204074 0 cmyk
f
439.252 521.954 mo
438.461 519.009 448.153 513.233 451.043 516.796 cv
452.25 518.285 454.126 522.539 454.54 524.37 cv
455.446 528.379 453.308 531.683 452.415 532.324 cv
450.887 533.422 445.098 532.976 442.903 529.671 cv
441.524 527.595 439.252 521.954 439.252 521.954 cv
cp
0 .182437 .126284 0 cmyk
f
434.611 520.767 mo
434.333 519.49 434.492 517.27 436.776 514.736 cv
438.795 512.497 441.181 510.271 446.136 511.634 cv
450.278 512.772 453.221 518.856 453.221 518.856 cv
445.484 524.668 li
443.286 523.125 li
443.286 523.125 444.463 524.8 444.425 525.402 cv
444.375 526.188 442.111 527.46 442.111 527.46 cv
439.78 528.017 li
439.78 528.017 435.838 526.396 434.611 520.767 cv
cp
level3{
gsave
clp
[10.3149 26.3532 -26.3532 10.3149 441.052 512.726 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.3149 26.3532 -26.3532 10.3149 441.052 512.726 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
439.724 526.139 mo
441.256 525.607 442.099 526.77 442.359 527.036 cv
443.192 527.894 443.173 529.314 442.173 529.642 cv
441.141 529.978 440.053 529.509 439.334 528.554 cv
438.615 527.599 438.702 526.492 439.724 526.139 cv
cp
0 .182437 .126284 0 cmyk
f
440.599 527.324 mo
441.71 528.734 li
441.37 529.139 440.484 528.659 440.09 528.211 cv
439.695 527.762 440.016 527.359 440.599 527.324 cv
cp
.0208438 .287205 .204074 0 cmyk
f
487.483 568.276 mo
487.411 573.05 li
470.003 571.362 li
471.763 565.824 li
487.483 568.276 li
cp
0 .182437 .126284 0 cmyk
f
495.86 568.382 mo
494.766 574.03 li
494.766 574.03 492.003 574.604 490.662 574.542 cv
488.085 574.425 486.24 572.49 486.24 572.49 cv
486.216 568.116 li
487.92 567.182 li
495.86 568.382 li
cp
f
490.929 566.033 mo
489.969 566.368 487.92 567.182 487.92 567.182 cv
490.445 568.958 li
490.445 568.958 492.058 567.769 492.613 567.568 cv
493.71 567.172 494.763 567.899 495.73 567.563 cv
496.17 567.41 496.406 567.192 496.087 566.921 cv
495.321 566.269 491.921 565.687 490.929 566.033 cv
cp
f
494.766 574.03 mo
496.48 573.29 li
497.172 572.876 497.234 572.69 497.242 572.407 cv
497.248 572.167 496.894 572.008 496.602 571.999 cv
493.166 572.553 li
494.766 574.03 li
cp
f
494.429 570.952 mo
494.24 572.366 li
494.24 572.366 496.318 572.038 497.253 572.041 cv
497.547 572.042 497.916 571.663 497.954 571.376 cv
497.993 571.089 497.74 570.936 497.547 570.887 cv
495.64 570.397 494.429 570.952 494.429 570.952 cv
cp
f
494.823 570.975 mo
494.823 570.975 495.628 571.185 496.961 571.079 cv
497.674 571.023 497.743 570.361 497.784 570.053 cv
497.825 569.744 497.604 569.425 496.901 569.463 cv
494.874 569.573 495.287 569.571 495.287 569.571 cv
494.823 570.975 li
cp
f
495.86 568.382 mo
494.831 569.339 li
494.831 569.339 494.625 569.701 496.581 569.847 cv
496.833 569.865 497.288 569.293 497.145 569.006 cv
496.966 568.647 495.86 568.382 495.86 568.382 cv
cp
f
434.32 551.208 mo
432.269 548.583 447.755 545.935 449.962 549.421 cv
451.882 552.456 457.921 558.286 460.675 560.409 cv
463.926 562.916 474.319 563.939 476.78 565.908 cv
477.973 566.862 476.285 572.182 475.163 572.653 cv
473.855 573.204 459.233 571.482 455.846 569.477 cv
452.612 567.562 445.156 565.076 434.32 551.208 cv
cp
.702449 .638575 .710719 .82858 cmyk
f
558.139 527.11 mo
552.522 530.381 li
481.396 745.329 li
486.993 742.1 li
558.139 527.11 li
cp
f
524.927 508.236 mo
519.343 511.429 li
448.294 726.121 li
453.972 722.651 li
524.927 508.236 li
cp
f
491.514 701.354 mo
462.093 684.292 li
467.68 681.165 li
493.242 695.973 li
491.514 701.354 li
cp
0 0 0 0 cmyk
f
500.865 673.124 mo
471.443 656.063 li
477.03 652.936 li
502.593 667.744 li
500.865 673.124 li
cp
f
510.215 644.896 mo
480.793 627.834 li
486.38 624.707 li
511.943 639.515 li
510.215 644.896 li
cp
f
519.565 616.666 mo
490.143 599.605 li
495.73 596.478 li
521.293 611.285 li
519.565 616.666 li
cp
f
528.915 588.438 mo
499.493 571.376 li
505.08 568.249 li
530.643 583.057 li
528.915 588.438 li
cp
f
538.265 560.208 mo
508.844 543.147 li
514.43 540.02 li
539.993 554.827 li
538.265 560.208 li
cp
f
462.133 684.309 mo
469.749 661.292 li
499.137 678.313 li
491.52 701.329 li
462.133 684.309 li
cp
547.074 533.451 mo
538.235 560.163 li
508.848 543.143 li
517.62 516.634 li
547.074 533.451 li
cp
508.479 650.08 mo
500.863 673.097 li
471.475 656.075 li
479.092 633.059 li
508.479 650.08 li
cp
517.822 621.847 mo
510.206 644.862 li
480.818 627.842 li
488.435 604.826 li
517.822 621.847 li
cp
499.505 571.375 mo
507.121 548.359 li
536.508 565.38 li
528.891 588.396 li
499.505 571.375 li
cp
527.165 593.613 mo
519.549 616.63 li
490.162 599.608 li
497.779 576.593 li
527.165 593.613 li
cp
460.406 689.525 mo
489.794 706.546 li
477.687 743.129 li
481.402 745.295 li
552.522 530.381 li
549.125 528.42 li
549.124 528.42 li
548.801 528.232 li
548.801 528.234 li
519.342 511.429 li
515.622 509.278 li
444.581 723.954 li
448.296 726.12 li
460.406 689.525 li
cp
level3{
gsave
clp
[-107.94 -4.8462e-09 -4.8462e-09 107.94 552.522 627.287 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-107.94 -4.8462e-09 -4.8462e-09 107.94 552.522 627.287 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
552.522 530.381 mo
515.628 509.266 li
521.244 506.01 li
558.139 527.11 li
552.522 530.381 li
cp
0 0 0 0 cmyk
f
518.538 511.684 mo
447.693 725.769 li
448.296 726.12 li
519.141 512.035 li
518.538 511.684 li
cp
.0358282 .222049 1 0 cmyk
f
551.918 530.032 mo
480.799 744.943 li
481.402 745.295 li
552.522 530.381 li
551.918 530.032 li
cp
f
525.94 361.638 mo
531.244 363.665 li
527.235 374.999 li
519.341 374.109 li
525.94 361.638 li
cp
0 .146792 .112886 0 cmyk
f
530.281 370.153 mo
530.281 370.153 530.735 367.309 530.954 366.373 cv
531.059 365.925 530.819 365.475 530.374 365.369 cv
528.784 364.994 526.384 363.821 524.793 363.446 cv
524.36 363.344 523.922 363.615 523.817 364.051 cv
523.628 364.835 521.956 367.944 521.956 367.944 cv
530.281 370.153 li
cp
.273198 .189059 .207431 0 cmyk
f
492.493 418.016 mo
502.472 410.92 516.668 399.936 523.298 390.761 cv
525.544 387.652 529.204 380.586 530.879 373.664 cv
531.156 372.518 531.722 369.68 530.958 368.887 cv
529.98 367.872 522.857 365.75 521.649 367.896 cv
520.126 370.601 515.91 380.937 510.703 384.801 cv
504.576 389.349 494.749 396.71 491.294 405.623 cv
488.639 412.47 487.635 421.471 492.493 418.016 cv
cp
level3{
gsave
clp
[42.2663 0 0 42.2663 489.076 392.875 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[42.2663 0 0 42.2663 489.076 392.875 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
528.498 353.907 mo
535.813 357.033 li
535.813 357.033 534.683 359.679 534.187 360.762 cv
533.944 361.293 532.953 362.827 530.882 364.634 cv
525.434 362.608 li
525.434 362.608 525.638 360.384 525.895 359.311 cv
526.107 358.43 528.498 353.907 528.498 353.907 cv
cp
0 .146792 .112886 0 cmyk
f
529.185 351.269 mo
528.252 350.784 527.553 352.448 526.567 355.01 cv
525.584 357.56 525.823 359.757 525.823 359.757 cv
527.694 358.696 li
528.213 356.085 li
528.213 356.085 529.919 351.649 529.185 351.269 cv
cp
f
535.792 357.088 mo
535.792 357.088 536.498 354.668 536.564 353.849 cv
536.615 353.229 536.443 351.976 536.239 351.392 cv
536.169 351.19 535.901 350.827 535.623 350.809 cv
535.246 350.783 535.161 350.981 535.11 351.243 cv
534.998 351.813 535.008 353.561 535.008 353.561 cv
533.716 356.771 li
535.792 357.088 li
cp
f
532.145 355.655 mo
533.788 356.675 li
533.788 356.675 534.933 353.962 535.191 353.019 cv
535.41 352.213 535.571 350.682 535.527 349.893 cv
535.503 349.459 535.278 349.062 534.913 348.937 cv
534.548 348.812 534.269 349.25 534.199 349.477 cv
534.198 349.478 533.693 351.86 533.475 352.606 cv
533.155 353.706 532.145 355.655 532.145 355.655 cv
cp
f
532.016 355.599 mo
532.016 355.599 533.236 352.973 533.483 352.045 cv
533.78 350.932 534.388 349.784 534.463 348.765 cv
534.505 348.181 534.23 347.807 533.874 347.743 cv
533.466 347.671 533.116 348.085 532.988 348.445 cv
532.988 348.445 532.201 350.502 531.889 351.343 cv
531.552 352.252 530.137 354.783 530.137 354.783 cv
532.016 355.599 li
cp
f
528.381 353.914 mo
530.155 354.993 li
530.155 354.993 531.124 352.743 531.576 351.67 cv
531.877 350.957 532.345 349.781 532.467 349.116 cv
532.519 348.833 532.518 348.171 532.134 348.016 cv
531.659 347.825 531.254 348.326 531.099 348.576 cv
530.308 349.848 528.381 353.914 528.381 353.914 cv
cp
f
497.245 563.269 mo
497.312 564.301 499.313 565.013 501.717 564.857 cv
504.119 564.703 506.014 563.741 505.947 562.709 cv
505.881 561.677 503.879 560.965 501.476 561.119 cv
499.073 561.273 497.179 562.235 497.245 563.269 cv
cp
.927275 .80911 0 0 cmyk
f
514.639 571.459 mo
514.639 572.611 516.812 573.545 519.493 573.545 cv
522.174 573.545 524.347 572.611 524.347 571.459 cv
524.347 570.307 522.174 569.373 519.493 569.373 cv
516.812 569.373 514.639 570.307 514.639 571.459 cv
cp
f
521.043 413.074 mo
521.272 410.533 517.964 408.159 513.653 407.77 cv
509.343 407.381 505.662 409.126 505.433 411.666 cv
505.204 414.207 508.513 416.581 512.823 416.971 cv
517.134 417.359 520.814 415.614 521.043 413.074 cv
cp
0 0 0 0 cmyk
f
502.499 571.817 mo
504.581 570.339 505.623 570.452 507.503 569.355 cv
508.444 568.807 509.507 566.475 510.441 565.425 cv
510.565 565.285 511.027 565.172 511.489 565.457 cv
511.608 565.53 511.697 566.476 511.507 566.805 cv
510.575 568.413 509.416 569.594 505.871 571.709 cv
505.381 572.001 503.68 572.338 503.68 572.338 cv
503.68 573.192 li
503.68 573.192 502.872 574.266 502.469 574.416 cv
501.553 574.757 498.506 573.872 498.506 573.872 cv
498.506 573.872 498.446 573.967 498.377 572.398 cv
500.068 572.402 501.139 572.781 502.499 571.817 cv
cp
.164645 1 1 .0774548 cmyk
f
503.369 571.735 mo
503.025 571.996 502.552 572.695 502.148 572.851 cv
501.271 573.189 498.401 572.528 498.401 572.528 cv
498.401 572.528 497.96 569.705 498.771 567.332 cv
499.124 566.3 500.43 565.649 500.43 565.649 cv
500.43 565.649 504.817 565.93 507.169 564.604 cv
508.275 563.979 510.89 564.268 511.465 565.399 cv
511.843 566.145 509.598 568.345 507.365 569.76 cv
505.341 571.043 504.313 571.019 503.369 571.735 cv
cp
f
499.773 568.714 mo
500.164 568.928 501.257 569.021 501.702 569.052 cv
502.849 569.131 503.807 568.9 503.982 567.2 cv
504.01 566.923 503.983 563.077 503.983 563.077 cv
503.983 562.351 498.931 562.212 498.793 562.578 cv
498.576 563.155 498.78 568.172 499.773 568.714 cv
cp
0 .146792 .112886 0 cmyk
f
519.381 582.849 mo
521.403 581.413 522.414 581.522 524.24 580.458 cv
525.154 579.925 527.606 578.203 528.513 577.184 cv
528.634 577.049 529.684 577.79 530.133 578.066 cv
530.248 578.138 530.334 579.057 530.15 579.375 cv
529.245 580.938 526.898 582.468 523.169 583.066 cv
522.623 583.153 520.933 583.468 520.933 583.468 cv
520.933 584.12 li
520.933 584.12 519.526 584.925 519.135 585.07 cv
518.245 585.401 514.87 583.367 514.87 583.367 cv
514.87 583.367 514.812 583.459 514.746 581.938 cv
516.388 581.94 518.06 583.785 519.381 582.849 cv
cp
.164645 1 1 .0774548 cmyk
f
519.922 582.765 mo
519.587 583.019 519.215 583.399 518.824 583.551 cv
517.971 583.88 514.769 582.063 514.769 582.063 cv
514.769 582.063 514.545 580.896 515.332 578.592 cv
515.675 577.589 517.371 576.859 517.371 576.859 cv
517.371 576.859 522.468 577.213 525.018 576.603 cv
527.157 576.09 529.177 576.817 529.735 577.917 cv
530.101 578.641 527.051 581.036 524.126 581.736 cv
521.086 582.465 520.838 582.069 519.922 582.765 cv
cp
f
517.304 578.772 mo
517.696 578.985 518.759 579.152 519.453 579.153 cv
520.346 579.154 521.558 579.002 521.732 577.303 cv
521.761 577.024 521.73 573.407 521.73 573.407 cv
521.73 572.681 516.655 573.237 516.517 573.603 cv
516.299 574.181 516.192 578.169 517.304 578.772 cv
cp
0 .146792 .112886 0 cmyk
f
514.252 383.066 mo
514.252 383.066 517.47 391.723 517.73 393.83 cv
518.458 399.723 516.797 400.299 512.876 401.193 cv
510.168 401.812 506.589 401.836 504.589 397.916 cv
503.333 395.452 502.309 390.242 502.309 390.242 cv
501.725 386.837 513.681 379.734 514.252 383.066 cv
cp
f
497.613 383.339 mo
497.697 381.96 497.701 381.335 500.081 378.824 cv
502.103 376.691 507.505 375.707 511.912 377.866 cv
516.436 380.082 515.091 382.271 515.091 382.271 cv
515.091 382.271 511.282 387.191 509.686 384.851 cv
504.318 389.782 li
504.318 389.782 503.724 389.954 502.973 389.629 cv
501.784 389.113 500.556 389.858 500.556 389.858 cv
500.556 389.858 497.374 387.287 497.613 383.339 cv
cp
level3{
gsave
clp
[-9.2974 21.0134 21.0134 9.2974 508.222 378.086 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-9.2974 21.0134 21.0134 9.2974 508.222 378.086 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
501.446 409.732 mo
514.711 412.384 li
512.959 398.633 li
501.348 396.211 li
501.348 396.211 502.552 400.872 502.588 401.88 cv
502.809 407.973 501.446 409.732 501.446 409.732 cv
cp
0 .146792 .112886 0 cmyk
f
513.27 401.144 mo
513.298 401.755 li
513.298 401.755 511.592 402.156 510.187 401.46 cv
508.604 400.675 508.146 398.308 508.146 398.308 cv
508.806 397.979 li
508.806 397.979 509.93 400.525 513.27 401.144 cv
cp
0 .288548 .197665 0 cmyk
f
496.349 544.875 mo
496.489 542.194 497.009 535.73 497.346 533.066 cv
498.285 525.631 500.118 515.456 500.281 504.351 cv
500.427 494.477 498.509 482.19 498.509 477.74 cv
498.509 469.096 499.565 463.489 499.565 463.489 cv
532.991 468.2 li
532.991 468.2 534.567 486.945 534.797 490.816 cv
535.726 506.457 530.397 525.885 527.483 536.675 cv
525.101 545.492 523.717 569.742 523.769 574.886 cv
523.559 578.656 515.133 577.726 515.087 575.661 cv
514.856 565.123 512.75 553.075 513.104 544.235 cv
513.176 542.456 513.951 535.34 513.887 533.567 cv
513.456 521.647 514.102 513.946 514.102 513.946 cv
514.102 513.946 509.022 536.472 508.411 539.117 cv
506.375 547.926 505.302 564.219 505.065 566.594 cv
504.826 568.988 498.927 568.684 498.405 566.866 cv
496.599 560.579 496.063 550.39 496.349 544.875 cv
cp
.702449 .638575 .710719 .82858 cmyk
f
491.565 404.769 mo
494.487 401.724 498.776 402.863 502.577 403.841 cv
502.577 403.841 501.545 410.242 511.314 408.974 cv
513.871 408.642 513.967 406.257 513.967 406.257 cv
519.091 408.146 520.951 409.607 526.501 412.155 cv
530.783 414.121 532.188 424.042 531.93 434.695 cv
531.717 443.45 534.074 455.763 533.486 466.57 cv
533.138 472.979 529.9 474.215 522.63 474.783 cv
511.696 475.639 504.105 473.356 499.757 468.846 cv
497.023 466.01 497.757 463.29 497.744 461.489 cv
497.679 452.613 498.143 452.1 493.386 436.501 cv
491.914 431.673 484.411 412.225 491.565 404.769 cv
cp
level3{
gsave
clp
[8.48342 61.9289 -61.9289 8.48342 508.739 410.95 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.48342 61.9289 -61.9289 8.48342 508.739 410.95 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
507.178 376.89 mo
501.581 375.361 495.326 380.626 493.618 383.323 cv
492.604 384.927 491.966 386.919 492.414 389.881 cv
493.152 394.756 494.692 397.13 495.5 398.25 cv
497.642 401.221 500.27 401.346 502.792 403.183 cv
504.046 404.096 507.46 402.774 508.605 401.433 cv
508.934 401.047 509.647 399.797 509.015 398.097 cv
508.617 397.025 508.608 395.834 508.753 394.562 cv
508.972 392.646 511.905 394.616 512.397 393.229 cv
513.439 390.289 512.891 378.45 507.178 376.89 cv
cp
level3{
gsave
clp
[-9.90737 22.392 22.392 9.90737 508.327 376.13 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-9.90737 22.392 22.392 9.90737 508.327 376.13 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
508.798 392.551 mo
511.12 392.577 511.431 396.043 510.363 396.618 cv
509.787 396.929 508.553 396.501 507.874 394.891 cv
507.382 393.724 507.202 392.532 508.798 392.551 cv
cp
0 .146792 .112886 0 cmyk
f
509.131 393.772 mo
509.706 395.498 li
509.382 395.761 508.751 394.954 508.582 394.421 cv
508.414 393.888 508.724 393.622 509.131 393.772 cv
cp
0 .288548 .197665 0 cmyk
f
521.872 573.15 mo
523.809 572.934 524.026 572.044 524.322 571.63 cv
524 573.716 524.228 573.995 524.226 574.392 cv
524.221 575.666 523.124 577.581 518.763 577.546 cv
516.51 577.528 514.653 576.142 514.654 574.986 cv
514.654 574.984 514.688 574.208 514.639 571.459 cv
515.191 572.651 516.514 573.751 521.872 573.15 cv
cp
.670954 .600732 .616785 .485512 cmyk
f
503.826 564.367 mo
505.55 564.062 505.693 563.252 505.934 562.863 cv
505.766 564.751 505.986 564.988 506.008 565.344 cv
506.077 566.487 505.203 568.267 501.292 568.486 cv
499.272 568.601 497.528 567.464 497.461 566.429 cv
497.461 566.428 497.447 565.729 497.245 563.269 cv
497.809 564.305 499.057 565.215 503.826 564.367 cv
cp
f
537.111 303.004 mo
554.932 370.459 li
531.687 379.27 li
513.866 311.817 li
537.111 303.004 li
cp
level3{
gsave
clp
[-40.4577 44.1909 -44.1909 -40.4577 554.628 319.042 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzz!<<*"!<<*"!WW3#!WW3#!rr<$!rr<$!rr?%"9AN'"9AN'"9AN'"T\W("T\W("T\Z)"p"c*"p+i+
#6Fr,#6Fr,#Qb&-#Qb).#Qb).#m180#m180#m180$3LA1$3LD2$3LD2$NpS4$NpS4$j6\5$j6\5%0Qh7
%0Qh7%Klq8%Klq8%L!"9%g<+:%g<+:&-W7<&-W7<&Hr@=&d8I>&dAR@'*\[A'*\[A'F"gC'F+mD'aG!E
('b*F('b*F(C19H(C1<I(C1<I(^LEJ(^LEJ)$gNK)@6]M)@6]M)[QfN)[QiO~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-40.4577 44.1909 -44.1909 -40.4577 554.628 319.042 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WrN,!s8W-!s8W-!sA`0"9\i1"9\i1"9\l3"U,&5"U,)7"pP8
9"pP;;#6tJ=#6tJ=#6tM?#RC\A#RC\A#RC_C#mgnE#mgnE#mgqG$47+I$47+J$O[=M$O[=N$k*OQ$k*O
R%1NaU%1NaU%1NaV%LrsY%LrsZ%hB0]%hB0^&.fBb&J5Te&J5Tf&eYfi&eYfi',)#m',)#m'GM5q'bqG
u'bqGu()@Z$()@Z$()@Z$(Ddl((Ddl((`4),)&X;0)&X;0)B'M4)B'M4~>
<~zzzzzzzzzzzzzzzzzz!!!$#!<E3%!<E3%!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiE)!WiE)!W
iH+!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W."9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i2"U
,&5"U,&5"U,&5"U,&5"pP89"pP89"pP89"pP89#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#RC\A#RC\A#R
C\A#RC\A~>
<~zzzzzzzzzzzzzzzz!!!$#!<E3%!<E3%!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiE)!WiE)!WiH
+!s8W-!s8W-!s8W-!s8W-!s8W-!s8W."9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i2"U,&5"U,&5"U,&
5"U,&6"pP89"pP89"pP89#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#RC\A#RC\A#RC\A#RC\A#RC\A#RC\
A#RC\A#RC\A#mgnE~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
537.719 288.077 mo
555.54 355.529 li
554.932 370.459 li
537.11 303.01 li
537.719 288.077 li
cp
.0945144 .0385748 .058381 0 cmyk
f
513.866 311.817 mo
531.687 379.27 li
535.131 396.751 li
517.309 329.299 li
513.866 311.817 li
cp
f
568.52 277.969 mo
586.342 345.421 li
555.54 355.529 li
537.719 288.078 li
568.52 277.969 li
cp
level3{
gsave
clp
[-44.5485 48.6592 -48.6592 -44.5485 584.304 292.419 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-44.5485 48.6592 -48.6592 -44.5485 584.304 292.419 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
542.499 376.792 mo
547.797 375.598 li
548.066 389.441 li
542.955 391.511 li
542.499 376.792 li
cp
0 .146792 .112886 0 cmyk
f
550.104 382.518 mo
550.104 382.518 549.314 379.747 548.991 378.843 cv
548.331 376.996 542.155 377.675 541.891 380.079 cv
541.684 381.969 541.312 385.253 541.312 385.253 cv
550.104 382.518 li
cp
.273198 .189059 .207431 0 cmyk
f
531.903 429.141 mo
542.898 424.468 548.411 416.115 550.104 409.264 cv
551.93 401.87 554.05 389.858 550.951 381.238 cv
550.035 378.688 541.431 380.797 540.996 383.22 cv
540.448 386.275 540.342 395.856 539.294 400.018 cv
538.082 404.829 535.72 411.006 525.8 414.569 cv
518.888 417.053 520.72 433.894 531.903 429.141 cv
cp
level3{
gsave
clp
[30.7875 0 0 30.7875 521.739 405.03 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[30.7875 0 0 30.7875 521.739 405.03 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
539.424 369.762 mo
546.678 367.403 li
546.678 367.403 548.134 370.184 548.26 372.655 cv
548.33 374.023 548.498 374.409 547.831 376.012 cv
542.678 377.675 li
542.678 377.675 541.545 376.172 541.107 375.768 cv
540.442 375.152 540.1 373.19 540.015 372.355 cv
539.949 371.693 539.424 369.762 539.424 369.762 cv
cp
0 .146792 .112886 0 cmyk
f
538.021 369.088 mo
537.238 369.259 537.527 370.487 538.476 373.089 cv
539.073 374.726 542.131 376.996 542.131 376.996 cv
542.155 374.913 li
540.53 372.805 li
540.53 372.805 538.828 368.911 538.021 369.088 cv
cp
f
546.696 367.458 mo
546.696 367.458 545.76 365.569 545.157 365.011 cv
544.475 364.38 543.788 364.098 543.258 363.778 cv
543.077 363.668 542.638 363.559 542.412 363.722 cv
542.105 363.942 542.166 364.149 542.294 364.383 cv
542.571 364.894 543.68 365.656 544.047 366.196 cv
544.43 366.761 544.974 368.786 544.974 368.786 cv
546.696 367.458 li
cp
f
543.052 368.928 mo
544.969 368.666 li
544.969 368.666 543.809 366.485 543.315 365.642 cv
542.709 364.607 541.93 363.86 541.297 363.371 cv
540.953 363.105 540.576 362.89 540.215 363.025 cv
539.853 363.161 539.918 363.677 540.009 363.897 cv
540.009 363.897 541.433 365.247 541.741 365.96 cv
542.195 367.013 543.052 368.928 543.052 368.928 cv
cp
f
543.132 368.897 mo
543.132 368.897 541.759 366.628 541.398 365.738 cv
541.046 364.869 540.401 364.083 539.758 363.18 cv
539.418 362.703 538.968 362.591 538.654 362.769 cv
538.293 362.972 538.287 363.515 538.419 363.874 cv
538.419 363.874 539.428 365.366 539.723 366.213 cv
540.042 367.129 541.289 369.512 541.289 369.512 cv
543.132 368.897 li
cp
f
539.537 370.013 mo
541.312 369.603 li
541.312 369.603 540.135 368.005 539.799 366.889 cv
539.576 366.147 539.423 365.114 539.041 364.406 cv
538.864 364.079 538.488 363.717 538.108 363.883 cv
537.687 364.067 537.713 364.976 537.789 365.339 cv
537.948 366.095 539.537 370.013 539.537 370.013 cv
cp
f
584.147 762.072 mo
583.79 761.026 581.788 760.5 581.788 760.5 cv
581.788 760.5 577.897 761.896 575.581 760.442 cv
574.839 759.977 572.901 760.47 572.61 761.134 cv
572.447 761.506 572.455 762.172 572.697 762.499 cv
574.89 765.47 579.766 766.732 579.766 766.732 cv
579.766 767.598 li
579.766 767.598 580.771 768.238 581.179 768.39 cv
582.106 768.734 584.337 767.479 584.337 767.479 cv
584.409 765.885 li
584.484 765.3 584.865 764.172 584.147 762.072 cv
cp
level3{
gsave
clp
[12.0773 0 0 12.0773 572.5 764.354 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~]bKr9]bU)=^)$>A^)-GC^DQ\G^`*"L^`3+O_&W@S_B&UW_B/^Y_]Sm\_]\s]_]f$_`$53a`?bHd`?kNf
`[:]h`[Ccja!grla!q#na=@2pa=I8ra=R>taY!N"aY*T#atNc&atWi(b;'#+b;0)-bVT8/bV]>1bVfD3
br5S6br>Y8br>Y9c8bh<c8kn>cT;(AcTD.CcTM4EcoqCHcp%IJcp.OLd6R^Od6R^Pd6[dRdR*sVdR4$X
dR=*ZdmX3\dma9^dmj?`e40Hce49Nee4BTge4KZie4T`le4T`meP#opeP,useP6&ueP?-"eP?-$ekc<'
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[12.0773 0 0 12.0773 572.5 764.354 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~]Y(ni]Y2"l]tM+m]tV4p^;%Ft^V@Ou^VIY#^qmk'_83t(_8=(+_SX1,_SX1,_Sa:/_o0L3`5KU4`5T^7
`Pog8`Poj:`l?$<`l?'>a2c6@a2c6@a2c9BaN2HDaN2KFaiVZHaiV]Jb0%lLb0%oNbKJ)PbKJ)PbKJ,R
bfn;Tbfn;Tbfn;Uc-=MXc-=MYcHa_\cHa_\cHa_]cd0q`cd0q`cd0qad*U.dd*U.dd*U.edF$@hdF$@h
dF$@hdaHRldaHRldaHRle'ldpe'ldpe'ldpe'ldpe'ldpe'ldpeC<!teC<!teC<!teC<!teC<!te^`4#
~>
<~',2,p'GV>t'c%Q#()Ic'(Dmu,)&aD3)B0V7)]Th;*$$%?*?H7C*ZlIG+!;[K+<_mO+X/*T,:"N[,UF`_
,palb-71)f-RU;j-n$Mn.4H_r.Olr!.k</%/1`A)/M/S-/hSe10/#"50JG490ekF=1,:XA1G^jE1c.'I
2)R6L2E!HO2E!HP2`EZT3&ilX3B9)\3]];`4$,Md4?P_h4Ztql5!D.p5<h@s5<h@t5X7S#5s[e'6:+"+
6UO4.6UO4.6psF277BX677BX67Rfj:7n6'>84Z9B8P)KF8P)KF8kM]J91qoN9MA,R9he>V9he>V:/4PZ
~>
<~n*oi:nac8BoCV\Io_%nNp@n=Vq"aa]q>0sbqu$BjrVlfqrr<#us8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~zzzzz!!**$!<E3%!<E3%!<E3%!<N<(!WiE)!WrN,!s8W-!s8W-!sA`0"9\i1"9\l3"U,&5"U,)7"pP89
"pP;;#6tM?#RC_C#mgnE#mgqG$47.K$O[@O$k*RS%1NaU%1NdW%Ls![%hB3_&.fBb&J5Tf&eYfj',)#n
'GM5r'bqH!()@Z%(Ddl)(`4)-)&X;1)B'M5)]K_9*#oq=*??.A*ZlIH+<VdM+X&!P+sJ3T,9nEX,U=W\
,palb-RU8h-n$Jl.4H\p.Olr!/1`>'/M/P+/hSe10JG170ekC;1,:XA1c.$G~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
583.079 763 mo
582.682 763.216 581.719 763.322 581.093 763.276 cv
579.932 763.189 579.033 762.984 579.002 761.255 cv
578.985 760.27 578.813 757.197 578.813 757.197 cv
578.813 756.462 583.928 756.322 584.068 756.692 cv
584.288 757.277 584.084 762.45 583.079 763 cv
cp
.251438 .66479 .852232 .122835 cmyk
f
567.048 772.19 mo
566.721 771.597 565.258 770.858 565.258 770.858 cv
565.258 770.858 559.502 772.231 556.92 771.613 cv
554.888 771.126 553.823 771.79 552.781 772.403 cv
552.662 772.473 552.626 773.18 552.813 773.503 cv
553.728 775.085 555.602 776.354 559.377 776.958 cv
559.93 777.047 561.64 777.234 561.64 777.234 cv
561.658 778.088 li
561.658 778.088 563.082 778.901 563.479 779.049 cv
564.379 779.385 567.32 777.009 567.32 777.009 cv
567.32 777.009 567.379 777.102 567.446 775.561 cv
567.438 775.562 li
567.471 775.216 567.456 772.934 567.048 772.19 cv
cp
level3{
gsave
clp
[14.7671 0 0 14.7671 552.682 774.97 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14.7671 0 0 14.7671 552.682 774.97 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
565.516 773.331 mo
565.119 773.547 564.447 773.698 563.744 773.699 cv
562.84 773.7 561.451 773.453 561.406 772.375 cv
561.394 772.093 561.034 767.899 561.034 767.899 cv
561.034 767.163 566.173 767.727 566.312 768.097 cv
566.533 768.682 566.641 772.72 565.516 773.331 cv
cp
.251438 .66479 .852232 .122835 cmyk
f
585.594 605.655 mo
583.848 613.532 573.407 635.888 570.71 639.085 cv
564.904 645.969 563.859 646.345 557.122 650.031 cv
556.006 650.642 553.21 652.027 552.17 651.454 cv
550.839 650.721 546.632 643.899 548.526 642.04 cv
550.915 639.695 556.558 634.243 561.248 627.309 cv
566.106 620.125 567.162 604.383 574.562 597.208 cv
580.247 591.695 586.984 599.38 585.594 605.655 cv
cp
level3{
gsave
clp
[24.955 -72.3635 72.3635 24.955 549.252 675.552 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[24.955 -72.3635 72.3635 24.955 549.252 675.552 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
538.232 650.911 mo
541.559 643.669 li
541.559 643.669 543.686 643.843 544.52 643.932 cv
546.455 644.14 550.717 643.057 550.717 643.057 cv
551.315 650.635 li
545.949 652.501 li
543.645 652.247 li
538.232 650.911 li
cp
.251438 .66479 .852232 .122835 cmyk
f
536.476 652.23 mo
536.108 653.165 538.014 652.9 540.611 653.325 cv
542.26 653.595 545.903 652.535 545.903 652.535 cv
544.458 650.718 li
541.654 651.254 li
541.654 651.254 536.766 651.495 536.476 652.23 cv
cp
f
541.618 643.679 mo
541.618 643.679 538.72 644.124 537.822 644.188 cv
537.143 644.237 535.763 644.562 535.117 644.814 cv
534.895 644.901 534.491 645.176 534.464 645.407 cv
534.428 645.722 534.643 645.763 534.93 645.768 cv
535.553 645.776 537.472 645.514 537.472 645.514 cv
540.971 646.111 li
541.618 643.679 li
cp
f
539.711 647.57 mo
540.866 646.065 li
540.866 646.065 537.95 645.36 536.919 645.285 cv
536.039 645.222 534.384 645.497 533.516 645.648 cv
533.04 645.731 532.694 645.934 532.549 646.253 cv
532.403 646.572 532.888 646.866 533.136 646.892 cv
533.136 646.892 535.449 646.666 536.263 646.736 cv
537.464 646.841 539.711 647.57 539.711 647.57 cv
cp
f
540.201 647.583 mo
540.201 647.583 536.83 646.911 535.831 646.806 cv
534.855 646.702 533.255 646.768 532.154 647.282 cv
531.573 647.555 531.392 647.756 531.426 648.066 cv
531.465 648.423 532.007 648.519 532.393 648.43 cv
532.393 648.43 534.259 648.208 535.175 648.343 cv
536.166 648.489 539.77 649.448 539.77 649.448 cv
540.201 647.583 li
cp
f
538.237 650.928 mo
539.459 649.307 li
539.459 649.307 536.775 648.836 535.606 648.619 cv
534.83 648.476 533.084 648.706 532.203 649.034 cv
531.829 649.173 531.188 649.261 531.054 649.606 cv
530.906 649.989 531.242 650.304 531.598 650.398 cv
532.342 650.596 534.499 650.124 535.284 650.243 cv
536.121 650.37 538.237 650.928 538.237 650.928 cv
cp
f
586.542 738.769 mo
586.401 736.054 585.874 729.509 585.534 726.812 cv
584.582 719.283 582.726 708.98 582.561 697.737 cv
582.414 687.739 584.355 675.299 584.355 670.793 cv
584.355 662.041 583.286 656.364 583.286 656.364 cv
548.701 663.587 li
548.701 663.587 547.341 680.116 547.614 684.033 cv
549.055 704.786 551.291 720.942 554.314 732.195 cv
554.557 733.099 555.547 735.993 555.766 736.805 cv
558.178 745.732 559.563 764.051 559.51 769.259 cv
559.722 773.076 567.524 772.03 567.57 769.939 cv
567.804 759.27 569.471 748.141 569.113 739.191 cv
569.04 737.389 568.255 730.184 568.32 728.39 cv
568.757 716.32 568.567 707.452 568.567 707.452 cv
568.567 707.452 573.71 730.26 574.329 732.938 cv
576.391 741.856 577.477 758.354 577.717 760.758 cv
577.959 763.183 584.295 762.889 584.824 761.048 cv
586.652 754.682 586.832 744.352 586.542 738.769 cv
cp
.702449 .638575 .710719 .82858 cmyk
f
583.065 597.456 mo
579.749 594.761 575.611 595.317 570.528 596.875 cv
568.031 597.641 566.317 598.279 561.092 600.604 cv
556.041 602.853 552.129 605.845 550.081 608.689 cv
545.903 614.494 545.165 622.503 546.755 633.175 cv
548.061 641.946 548.588 652.327 547.307 663.211 cv
546.755 667.91 553.008 671.267 560.374 670.77 cv
572.737 669.938 578.81 667.024 582.617 661.949 cv
585.009 658.76 583.653 655.831 583.517 653.905 cv
582.5 639.499 591.183 604.056 583.065 597.456 cv
cp
level3{
gsave
clp
[1.10048 -71.531 71.531 1.10048 565.386 675.33 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.10048 -71.531 71.531 1.10048 565.386 675.33 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
517.46 653.561 mo
518.065 658.044 li
529.896 654.371 li
534.859 644.929 li
517.46 653.561 li
cp
.251438 .66479 .852232 .122835 cmyk
f
559.544 614.632 mo
559.56 624.981 554.421 640.406 549.003 646.741 cv
544.555 651.942 535.2 655.48 528.386 657.838 cv
527.257 658.229 523.623 658.696 522.75 658.004 cv
521.632 657.116 518.958 652.2 521.003 650.775 cv
523.582 648.978 534.687 641.688 538.232 638.026 cv
544.774 631.27 546.933 620.749 548.044 613.558 cv
549.179 606.209 559.534 608.597 559.544 614.632 cv
cp
level3{
gsave
clp
[3.54644 -55.9308 55.9308 3.54644 538.296 659.351 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.54644 -55.9308 55.9308 3.54644 538.296 659.351 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
509.473 653.274 mo
510.702 660.82 li
510.702 660.82 514.003 660.559 515.061 660.304 cv
516.311 660.001 518.645 658.974 519.463 657.61 cv
518.602 653.121 li
518.602 653.121 515.273 651.92 514.717 651.689 cv
513.869 651.337 511.068 651.551 511.068 651.551 cv
509.473 653.274 li
cp
.251438 .66479 .852232 .122835 cmyk
f
506.712 653.259 mo
506.482 652.221 507.669 652.396 510.29 651.474 cv
511.954 650.888 515.127 651.851 515.127 651.851 cv
514.367 653.734 li
511.678 653.563 li
511.678 653.563 506.894 654.076 506.712 653.259 cv
cp
f
510.702 660.82 mo
510.702 660.82 508.199 660.931 507.38 660.782 cv
506.761 660.67 505.514 660.545 504.995 660.193 cv
504.817 660.072 504.531 659.716 504.585 659.438 cv
504.658 659.063 504.874 659.032 505.144 659.05 cv
505.731 659.089 507.504 659.185 507.504 659.185 cv
510.916 659.126 li
510.702 660.82 li
cp
f
510.398 657.058 mo
510.803 659.172 li
510.803 659.172 507.916 659.216 506.926 659.222 cv
506.08 659.227 504.475 659.354 503.714 659.105 cv
503.296 658.97 502.966 658.646 502.938 658.256 cv
502.911 657.866 503.412 657.708 503.653 657.698 cv
503.653 657.698 505.915 657.906 506.702 657.888 cv
507.862 657.86 510.398 657.058 510.398 657.058 cv
cp
f
510.211 657.157 mo
510.211 657.157 507.324 657.622 506.352 657.667 cv
505.404 657.711 503.99 657.98 502.887 657.771 cv
502.306 657.66 501.771 656.836 501.802 656.472 cv
501.837 656.053 502.334 655.818 502.72 655.787 cv
502.72 655.787 505.177 656.012 506.08 655.925 cv
507.058 655.831 509.903 655.106 509.903 655.106 cv
510.211 657.157 li
cp
f
509.511 653.161 mo
510.103 655.179 li
510.103 655.179 507.248 655.762 506.08 655.925 cv
505.304 656.033 503.531 655.987 502.718 655.935 cv
502.342 655.91 501.774 655.77 501.766 655.351 cv
501.758 654.886 502.179 654.539 502.546 654.455 cv
503.308 654.281 505.515 654.121 506.265 653.912 cv
507.159 653.663 509.511 653.161 509.511 653.161 cv
cp
f
557.992 605.395 mo
557.485 602.861 560.637 600.313 564.934 599.454 cv
569.231 598.595 572.416 596.531 572.923 599.063 cv
573.43 601.596 571.232 603.361 565.813 605.637 cv
561.773 607.333 558.498 607.927 557.992 605.395 cv
cp
.0358282 .222049 1 0 cmyk
f
555.895 575.572 mo
555.895 575.572 554.297 585.138 554.429 587.366 cv
554.796 593.6 556.556 593.88 560.626 594.061 cv
563.436 594.185 567.003 593.53 568.267 589.095 cv
569.061 586.309 569.114 580.725 569.114 580.725 cv
569.064 577.092 555.846 572.019 555.895 575.572 cv
cp
.251438 .66479 .852232 .122835 cmyk
f
566.466 604.28 mo
565.736 604.399 li
563.394 604.783 561.179 603.213 560.765 600.876 cv
559.565 594.088 li
570.25 588.521 li
570.25 588.521 570.454 592.831 570.611 594.29 cv
570.656 594.707 570.886 596.129 571.153 597.727 cv
571.673 600.832 569.574 603.771 566.466 604.28 cv
cp
f
559.544 594.002 mo
559.72 595.089 li
559.72 595.089 561.54 594.979 562.844 594.074 cv
564.543 592.895 564.543 591.71 564.543 591.71 cv
563.838 591.463 li
563.838 591.463 562.823 592.964 559.544 594.002 cv
cp
.311437 .758144 .976989 .292729 cmyk
f
578.127 577.783 mo
578.052 574.605 576.261 573.341 574.675 570.886 cv
573.377 568.875 571.603 570.263 568.613 568.21 cv
565.774 566.261 561.239 567.247 557.476 569.508 cv
554.922 571.043 555.134 573.831 555.722 574.696 cv
556.125 575.289 556.629 574.472 557.481 576.233 cv
557.991 577.287 560.518 576.583 560.817 579.738 cv
561.084 582.56 561.016 584.486 561.662 585.668 cv
562.398 587.015 563.022 584.321 563.578 586.273 cv
563.948 587.57 564.415 588.75 564.206 589.946 cv
564.033 590.943 563.674 591.236 563.639 592.266 cv
563.609 593.197 564.709 594.193 565.461 594.929 cv
568.314 597.717 570.748 595.43 571.112 594.278 cv
572.642 589.436 575.582 590.127 576.637 587.156 cv
577.127 585.774 578.251 583.011 578.127 577.783 cv
cp
.702449 .638575 .710719 .82858 cmyk
f
563.848 585.157 mo
561.499 585.06 560.998 588.547 562.046 589.187 cv
562.612 589.531 563.883 589.165 564.657 587.573 cv
565.217 586.42 565.463 585.225 563.848 585.157 cv
cp
.251438 .66479 .852232 .122835 cmyk
f
563.446 586.376 mo
562.771 588.09 li
563.085 588.372 563.766 587.591 563.965 587.061 cv
564.165 586.53 563.866 586.245 563.446 586.376 cv
cp
.311437 .758144 .976989 .292729 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 23.0.1
%%For: ( ) ()
%%Title: (m0032-13.eps)
%%CreationDate: 12/5/2018 4:56 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB7&?)e+!81>Z^n,\9Fti[o`eomKJr!7g@Yd`]ts8SE.TZgY\DN.MQ*IP6:T79alj.m`nS"SR"rbg=96#=K:0/eULXUMm=sk
%R70tRKZp0d$Lh,_br:,H:;/6L"HAGQ_NJV(3o2!K97e:SoIb<P?c;itC8(;3<16>MC*@7IS8,T<DldK>++>NBn)(o6Ica!o/m&(p
%fO_g:&,02\lD7Q3#@=h;i&<IGP!CYBQfR;8#2B@ki+I(9^YF9g9DP76KHW\:=FJWNs0*I2'.ts&MQ'5mI*ct61_oRIJ8=Yj'LYC?
%1GbXuJt#Z5=neD^C?<Vi[Ua5j[-)g5oB?e4f1JMc1'9aQgu-n)Q()kdRA^mKCsHXsM>>A(%BhV0?!9]?2oA0gU#/6_]YM]7+sg9l
%o+QS=13,jXr>ZigfS;jFBL50ciFe#'+EhjW=(]MraTU4r[0OHqhfpK6n_VaQTiUlV!M^5=l7&O#!VKE4F-hg_AjA;e;&'*`)X1:e
%e0Wcjh.igsUe$Z2=]?+L0$<P#LqJ>S9>NhCR<O3h%-ie/XEl[0q?bXq8jLhO]>/kTBpF>I=f'UN82YG4Uc@57(5"BlNuIN14s?rY
%"HpO$`i3=[$(AXSeT)$p]TP"d?4L-LHiB'+l!7bh*7f_aC%[u)'rG(;r(=8X&XPo)0[,J(P&]IrK6/=?-:Nc895'&;N\+[$]E__4
%$9/)^338Ha8sL,_O>Dfl,Vg_"WgASTO6BK]TRTMe91J9_aoA\%_[JAk6&!XB-s\n20l@Yjp@GAHe(`Hk<Q-WM$j*S"_8mHQ.N=bT
%iqc@kAd@f58GY8Ts(DTGp^rT3a>3bF2#M-Xpt'N\<E[=c=iOg"j@oJEJ+YpE42"A;YaVHJ2bh2)RYK?Lc1?1TVMTFh'C2%T,.F$g
%<\mIOL7drg<c]7^ju@Udj5;SNK699eJ+You,I`"@<q&4t'-/nM1*$toPQ$HKo&"#S@!ok,#T*KZC'YW2QMuV(iEr[=5iH&O4.d"/
%1W"iqnJ_O`J$CF`=gVlG$NCaknH3)e\?K$qVfW&D%7.nH=NC%&)TNI.4Ip1IQZT7s0>3W;:B@-+Vk^$cPJM<>nLF0beIY4JMbR&:
%;TS*@$uu%CX!*EAdr]?gbm5Qn`GZ#)V$$Y=#*5,?031FWnLm<X,o8VQF9L5DVZei#:.ZFJFGP&,Yo9/q4uX1%$31r+*?+=5[a!2h
%X7-qV5l`p),(S`t$9A&&@Doo_NRBl)8EY]`N.8)B!XQ8V.d*<iViUO;.@lYY-Q5a(AFPgo-rFq1iOG_j:WGugT(Yi*NsqU)L;QN:
%O4ALT[!C@*rLL[Ti$kF!b,2\H'1A>ZaGZ4%`;T<L\=I\Z`+OJ',!MZac?UP,6umWB9q:f"D"G2tY^p<Ddn+G<VM#JH&"3/c)lC*=
%3kuQG1JoU,QR'tNU3HH3'`'t=V_>Pc<U$@DS\B3:IZN@Mb:r.(_[(TJfZUSa:XM7Pff&dM^!deQm^i$goM/c(*;pqle!CW[R%-Yd
%ia7RMqON,2mg,\a3/["3*mX%,roPJH]4GIA>i#*9b>W7FeO2b^TL%Ca/#K#?[O1!VqB'Iic+;n[L'kE]bL(gPSMVa&K9jVtpKU"F
%2$8i2:i^h'r4`_O^r"uCK:5@.eP&/!Ek=jIB$gWp3Y!W"*nj$SY'^(*S2qSnV8.&TAJoF+Aji3aMXLh.lLA2U`o-RaU#N]P[Eh>G
%!c;7d&7dP=d$G\PZNud:l-H#48Id`j$Cc<il*:7&7"`^nWd:HCUb:(Oba9n_anFcIDB$/TYskNB5+H9j%$_H;qi'Gd\egk3DNdJD
%$N0thOHI?r<K#(XB,R#7k6sf*+jh3_@MsJ%Wi5]\:1)UU([03\K\V+S"qaInf54PsLcM+aUjEFP^;H>2Di\-\/;*T?^[hCa7%@=E
%7:NRDD:kWE=?&d%:'-MP@+RQt`O9GE'KTbr5so&L#2050KG#[;/<A^0E!^qA$Jm,Q.RKt1`#uU2Du^U#!5?o:d)#=fFOg[%_;t2`
%HDFgH#_jn(hBNI@R`C6e<%n^_H40qr:qX`:!,2fT1PClA7Q(qfdPco0<L9D%B\SKA5[53MP"B-d'+AkegY=1G&E3[U+F#j//4g=+
%s2\_RSk#\M-h!9r@@H0bOdV9T'#cpK$a^__OnA^)+>BU:4"c4H)roH05f$T^>e6%/i`_1X9gPEbJ-damMbKRtIgKspSem^qoEH;>
%_nb2Tk7@ZREFrXmO<+u-U^Qt]GSCttb)iU4#UbW3GJGcfPEWpKn!/Mln;d(O?)A2:J_UDo.#r@b)Y$#oNnfZd%6&heiTPsh9g^)2
%B6$sK8rma(.S:PunXbgMBhrK(6(!SZ";b6r@ceYo%3Fbk6QLq55(uO$EMZ)C,#bD4e2/F@-'X@\W&I,I:`'oSTLrGZ#ZKh%b><1P
%A=O[f*mto.M`4Es_gt?2BcQ!oeCb-@OU95lat?Y(`6"9?h'7N?pSnk?Eel#s5gb%3/p5=b`4B?<R>=d/`i4mhAQ"'C4-fQi`W5P&
%;LZq8PtO$3HR-W7OcW$m(IU"b;9S_tJfKW@]."<k:]%#T("0?;&XK75LKEsc?h@XciX&J]152D7"YFN&.WQPJTB]Y:UCrXZ*SuOa
%@Q2pcJ_cCnJK!$UVo23baUAiM,CoQJ0_6Edh:hlBCW[mSNj1GZKgHAa:pH).;aGs6FdHU,;OPbkScZu^F"#R!&ONESV0']^NFYal
%VIW)lg;Inhpe[R1H05eN+?(]c`U+.$O^-"jFS_OG-_8oOVMXDS9Qrh+l7>DuZJj`gY]UF[7-0S).*ohGUc:kD,4%;-*#Cq`W-l<>
%-&N%r"DjM9.fJA2GPkM[lkF2l?:gL!XHGDC0[p[-:5mYa&5.Y8MI4Dd(p!f@45i,h?f[I.q*,0INWO*b1dY12'-A?hF[Mu>^df$^
%"",`'4.1;`>;g>Ho'_=U//m!De:^*tdfC\ToQD<#Bb#J`A0]cR0lKB%I)^MB,GF098l_Vg,6fVkA/WA6/:m@J:'W4iK!`%!c)HeR
%VtcpjcAW>a[S5Of^$3q#U8oCELfjud.CkI/):J$ph(]q._iJj?6]iqEaf/maA7,b5,:\lIFK3\>Tr?sKONe:3oc=M,7>tsmKnR.5
%'EE0]*D:TV)1.SO8L#&R+uXKld<f_6L+@t$[LL9Q1Em$#K(92H/n@a=.&2E"$+FW3:.GFd+t0m4E)DH)61hsqcs7Jf)sP^pi'N&V
%U>\enWPdsds&"Z3.hiMW`6;XC,csUS;8\?cL(+M^#3Hm;APeWUQ:$GP815+GXEV&5La9<oA7Noh?nro]&T)O8'bN@\Sg3@t%[L"^
%'V`i@\UpRV>LJ[V*BlhlMJ>^(+O`rM#<40NnY\Q-&HXd#5i:678]8&JXNb=I60R#J'.VCde:C.95o3KS6qko`F@V%YkS@_\a[kVT
%O8!0_'':66A8`)2`/U"'.-j318:1O?2&Uro)\*YMajF)@&l$9k<FAo<ai=Z5/ao/96:?l'SR>nqThcuW8N%&'iUE&K#%^:U6O4!E
%edUbJeoPG`dNYt)cm?npmL[%OaHO[_51_WS^ap@cb_M]b@+5o8$5`XIUc"#J$i@=H!&R2^D.o#O">Hn>#S,2o1CL247[]BcFFm!S
%$*gejq%%a:G)6/c]F!dh<@gS]=ZV@5OKAd1[%F+A6kdbn7Haki,3bZ8M8Z%fW_A=EU<?fT2NpE:qZ[-A@7T+IpgM+7^q9`8!IU=B
%j5GE-a^]TI1]c)ZjXA#]W^t7L&h1/o)l64bk9:Uu86rlP;o\X@2"78GUhU8\fC6QC0YpH#5pgd]0oj(Y([*0a6*UT0M3LJ"@X"#a
%7/ja&9@SV(I=jC0K2_lTeP_O,M)>V=*5[a$K0,[P]4i_&MS5J`c64>EPsTB0>_I'7$DGJrBLfL*$(/YJF9Ul!Zd?82Yc).r`#$[F
%a1FX7cESA2P\chL!,7;J4GROC"N+ja("0\rm,5sN5c,F?(jf>,QPdJPe2tWb41t?+8g[UYRRT+b^hd2uT/%h%<-V>o"`TDDDT`&q
%K^$`)lVQ#A_?shPV(8Q2j]<G*h;<cY/<n3s<>1sTUdOXqN,je[an9la#i9-VBR_FPh>r]X',Lqd`:OD:@icNSKUoh]P-$cel&+\"
%"2p_20af5c0Z62D"e3bg6L>:?cZ&T7)i0\D9d:44#.7RD!:,>_o^3`AKhMg9PU[jg`+Ct6bR'tB:=LPY"\GDP+OW+Qh*L$cmW&:R
%8Fp*$9-2W(FFH8`!V(&_etU#+3%1fs'3CL"_;-<0olFpr6u(<kkVl[+8/rN-14U4.R>KEa"SKY\U5]N,r>/#OJa+!h@NgG_D1P:q
%i'N(-7[sf:DI%LQVPAD.J=';s3?dT21UuQ7E3o=%R:VMl(c]8ek_R&<dNGf2*((7WVL*"8+c>#RA;F53*&O@*/6r554*G"pLaDai
%_q!*LWn]SM>#]A$ctL:a5eEYI:ZJ<.?$ik.JUH"H6DfbD*smqU$7'A\UB?D;,Skpg1;qRB1dRGGM)Ee`3Y3"!H&smD$fnPW;A2YH
%5psT3M3UQQ.10_Q/e%f4r3o$$^nW&rC7*C_&]8:XBgn^"3`S10j'j2@$F@SR:ZJbQJ)jDp72-Y%Vi)#Z9p0d'+maSQA17ba1:lV<
%:)B'u2puXREB0Fm@cWp:U-W<Kncna=d+QPUM&pak=",%ln!_I#MO7M^5!%4!b_EsH$CZ'V<3MUg2sf/[$i)@r1g@@H1n0/'\3-_,
%%AaDDG.dY:JGs.c*gKt!j&WkIWbkh?X)J!+Z&7)4+EJS<Ral`KB2Hel?JWGafusjr`QF_%r;s>,hnqKJI]57&7"\h!Y6PsA/)3e3
%o(P!8]>8WtrX^qPYN@<a#N]\PehF4mVT#=9?h*G"njD'f?KlD'`J8_rR`((Lo6mVsK6j9sdm@4]FkYQ!UdFFG1gTL6.NM6FCOWtm
%:UPY4#V26G,i>_-?OHcASn^!0+#FA7m;9/0^X?klfkL_:n*"QqgSsuP+G3S&$t#N>\QgTgomEH>\k3.oOl*grf]Ac(CkS!D^IF#G
%jO%aW>',-/_bJsjh3JBc]A@;XAkoDWEnG])hnu&F^QG/Xc8;*SIlpt9bGE3GfM2:d&^59p:_*%\)U0BF&S(Z<]lI5Ko@"!LX3_?,
%<H$<4Si-BE[^Yb/DEYgs_ph>n5\?lt+3C.lIb<bul@j3L`=_4qMc(.!/`61BCAchmpmFrNY#k`kdR.,#=ss?2%t\N!FS,dG,He1B
%'p(>AI&ka*+pP57e1g\YPJ?d+!F\3!1ESKR?@m?[CX9u=2h/qa`id81lW2gpQ9[O8A7c='Ikpq;L(5u66<cU%a9WY4@i+&#p$'_.
%CN'2mbpSG";='>&n,b1&Z,6'P3f4_,3Iqo"/5fTcccF4)'IYF[)AJ_VK+nuVQ*\BfOFl<HbOYj;6n"3GHdJLbGcI[(@UQ8VM@J,J
%>:k:&$X.r*lcicU"<5j=%ZC<S0mXOt'l`]YCUOm&H:;Mi;83l_Bj*o*,Z8/$$5=3_i)b'/YSa1'1!5;^S`5sqP@BY`:hQ0%E\Kt7
%4\?POJg\JL@Ybf<&nXX%R)8m9=G^r+rWR,VJ$mpWa^TIYn2H@:iA\MX8W0;c6'2<cMCo`B9Yh?X_#Y<@oSK:fb+^BNU*857?irsA
%P=/!*A4]4.'"gt4Z3bO4!7cZPag/"hWiX=RN"3<G>I"@M"d8CFf]`/E=clg;BbV7^<)PPRoGEmE[L&g9`)VUBNSqqj:!j$$3DabC
%,[sFJI$oL:#K2-8MmC:++h:AakK.1'"^6k5K-!+4fhm]gU.5Aje4K9V?IVA?&k,Q[pe.Cd>/YV..\[`FR.:kW!D;L;(HX/`0>JN=
%=H'KJXCu$>_kO@ZA)Z(%V%c@GZ3\*.MaF^??ItA+;S#a-bZtb'GJX#`=FL[n]l<iO?9(cS`SO_aL=8&>Ebr*W8:iZb>=Std+0,24
%MlL<&<Df<%&hArV=rdt#]Vpfe/'FaH1umKsMuc72'*oPo(M\AVfE5e+T\Z7Q91*h9-n&aT!ffOq+IZ+Z0bnNZJn!F<']%?5W4$0Y
%:a?+L@$)]Y(a:g:jtE[We&HK&ZW&?1,m-2JC';uf1C_T#a0\Ra1ee(0DJH%`.],lN/Xh:MJQ^pJ0VQZKImI#1@2QSLOYeX-cn?:=
%RK?mp\H%Gf>IpdQ\uoh[W[kXh"<m%3(^rFL-.l$LPF$H`(q[:\cNG+5bO@fLjs1[*Lo)em\3ij7'c!d"9Jn^*TLe.$PYoPG05Lpg
%-=+?m*P2>-Gf]s]XQ,9oG_tn?>7u'QdE12kaDJ5>aoI-PqsH:`8J+td1E=Jo)So;'DWGeV8"k^%EE9(6%m_pk_u0m=5Sp3MjYdA(
%5?*KCVaZFjF/m/UH%QB1-C.;8LF3F&Gq5Tb2Mhu3p$I@$5q?+EPrLM1674!qr%i9U;$T?q6:MEB(+[`a&PG.u;+@&0Quiqp?X4[=
%&>;[^Y[,;j?&OjoC9/i1@e*,j['l^7qe;N4(YW`c3X8Kj$gbr#Ngs`,'\in^,s@bYQ"'qZ^`3[$UD%*eI+,n0Obj8TEZR3F/tg8i
%LIilR_QgVH5D-@uW^%c&hZ_+2e:L".KY%@R*Q>Q``4/:T[g424Z#KA(#8)sk(HE.Q;!C@^9-An/+F[#r\gVM$>Y!2$2h-C7PsMe>
%5S$tcY,Riu<_6&/<"g(@<#I6NS74"GU+$FO-QWhX%ApcBL:mkIJcfan#<J(q&\rFD>@7Hm_N3V3\3Sdad('K_0D1=j8/m'kpaZui
%d.CgK1fig5@7=d^=rlBj@huT6YsM"h`2u@J[c4N#P@Ce+Z=8oiZ_F]k46/&_(2/h73RfZl*e<U^6HPTL0QF+s&1nAe(+gj`k^!9,
%_$Ql*@tb"V]B$/k=kR[>`_8\X/0k\>G!dosgpNVm!$(0d2L-*24!s3&0'f/^P;nt*k[]QfDC.E45_\"<KNSt^,8oWEL"Y#X"")sE
%"t[<83tLg0_I-n>JdPJMA+Bgq'llP^k#;jR/J/0r(]e0HRKbl`BI<5+XZ=1k3R%Xj9Eaiq5cP1HUk@W8JcTA6+le/?j+37<_Bd3i
%R0)0AKBZlt$&"%p"!T"'GbtI1Op%^]J6+Vd=9J?L!e\Vr;3Ne!nF&c4<Z-]b[7K!UE4H.bmXS-V=e73qfd>B+7Nac-jFIe=_#u"/
%#'8)o8V+EC,+qL3i`&JL$A1nc#of!\&^_&d&!V8/$HrqobSrBr$r#%!q"FD-^mU!ciOT:Nhe>sd_QCb4_WufP.eNK<X=l*(?lHrj
%1I1BTqQZ&Yhsk1I86!1T7rZ/d5RK)Me.X_P]`t`fWSNJuDe/URbjM<n0=?5UqPEm=Z%,,>9>l6(N^'e&4f6t1=#c_8aPHq3h$ObN
%.&7h,KQJET,nM7\+t?DCkeK*tngMXd_S@L,:ka-k!r>F&S2TnHd9D<^J0rWB+P$QQ0On'7=p<>9a;'C`$F1"M(<S6f$%BHr`#aIr
%A;ilYLGBCG%qQm#63+D\Ag^)8K`Z7i-,r];&ZXRJ1CIWVSr<`Np/+kIWHeEbFVM<[3$"hI>"N1nSP`+FQVR6BN9\>K!>QS8$`YJP
%)I>9H:h&La#3nBoiR2(MJU0F.W.,JO'j9&i8S31i#2Y*TV[s'VFRnd>DgX;*9&2L/C1gd<#WWN?(5N&E&`p#HK$[s-H6`nL%)6kq
%4)T+l)?YmQ*cS#CpFu)s<d-k<;B;.SJ5lPgmFS?7oMG->EP4lD#d4!WFW]"[+W1Z\g_I,2@_H<g,[0t6]/1`(%XIVQB/1=K4XIAX
%94B\HJiut-)J9J\"e75,>G9,G2Aij9cifNAV8_dO2mfQcd#QPBjhr_tM-EOa5f@I`D@]mo#3*'efJ<o6cu9=&VXRDS'M+(9;7J*l
%&5#If"=skZ8:$"d6KK=$L#<R_eKQoN:?FfMn5ItF!k6-J"GN2Z.M*QG,nO7)2NL7)a]&n5UIrEK@5WgncajB5BG/*H<Yl0M,q=75
%&n$kr@Mpl5XXLcR&trhSJo#Uo>;'fKMD$!O/km^JJhE4]D%lsND%e$c:h83*2'MJ5+]N4/+]p=Zg*tI!6XqbcF(,Y?-iSi3%V=(%
%,m)b_X?RhK6An\XK*O.kP:"m*CpkDD&g><7*/VX564I!:aa,0<(dom6d5iLX(FCZLCb7VMA(9LRM]e+;<.9[;j's>-M%-QK&Sjc=
%2Um:(D.$-rjcSjD?sV"UFj(h!ND.u0#H"u4*7u>GfH(rf^S9fj+q%?Z.N+MM(/uZaK1?s',U?m:4Q+D83KO8bK<2)!!3&LW2Qh>f
%rkN7e5pEZa`eould_45/W5(;NAL,,94<S)HX2\OU&In6+&C4C7Kh$B<`6ML2)ZTsd;(+p]&U>#/@Gr/lKkr:UU7jjj*`$F2F;@AZ
%1%\9[r"a9#)-dl-@-f'GaVp71<dW2V`\Ug]@SJp0:kBIjN]&c[+<_HQ?qi/EFX1?=r6YVUe5^MCK1.>>)T5I/]oSioJH[C3$$cRg
%5b!G.)f4?'1F$>c`D)R#;jE1N2F75%0KN*dN8dXr+_uX4FeK2qc"VQ.6_OkoO@U!6!*oSKJbb#8R`*-MP%d9_l9_*u3#"r>ne^_D
%Z1->VbAP"!FGEMGcRhVQ@\T0K/QhRT9KOT"\Zf]*3YmJdac`.;CfD=L+oAqY_=1Q$A?hlB)N3+<[7Xmbe5"O/1DFEg0,B>I<(DKT
%F0S'<LJY;_KFL(bAeI]rM4U;,e<^k!0nk8\2.E7pF=u7J=bO>r`U:%BBocHf\Nh+]Mcotm>3+>qEEH>$alVVtaZ6'sY)H4'=[Y)h
%inUC(1kCId4G_4mVU.d$ESn]lYg!7P\8p:d7/q@+\eI0K*TNjkjEbW_*B%)RNJI+hqE`*)(L(fPC'_DfC65[38lesVH>8JBUDe<c
%r5,bjI\l8a$FH1*^1a.&,lAhH$)eLk",o]YBn<H@$W"SX_YC0Vm"%g8I&"&#pN3RBG@Ip,:'ll*%)s-K0fZd1g8WIFgmNa45W$P[
%0N,DQJeU7KMl"J5$<RDF$=1'm$Q>]K$<dT;eUaTpb07Dh9c2BV_6[k7P7h/`15<:a8Effd`q&,d?EE%CmeY2l&qc%->bXVhJH@?,
%7FB'[^)WlOR#T6$,IBjbV9'?"XY?$'`c0Yk3,P^oiQ<S\RZ])TU,c(JA$S)B_c5M_3gT#31`M:IPt:7s8QqDs@rt>s0G_T.6DCk!
%Wad'T9%:Qn!\JRu'5<L874$(eU<?n+dFKF;,;eR(&j(EX`Hl5bm;lItl4Sr7'WIjLF`O-DXi&P[dA\NX'fj*NBK<H%DM>.d+9kc_
%Wo?H?P]5$UI2+KAJgeW>&4*A;edmrpLZ+,!\5oOTia&gF(L%CqWF.:)c[%G5'tm:A$s#p3hpP&h.7OZ$N6,TrOe`nX#T:Y'=MbXV
%qV.g6..)g[b]q?jV]Os:aB93=CJR.:iJ-Zrj(D3q=+S83i7JreZi\HQIO!(9+c[f\TbSfb0RUfKN`!_lN]EYMa37.:Ah4tjIk24f
%.8YUFrPie]eDa-OT%#p&9'SsI)QCE4g)I$)OkLbR]oh#q"_t5fY)Lkm.eClsYAS>J[dHin4lAEEpI`F=H&f!<7ei]8jS89[<D#B:
%(EZ9eb9O)afA_u+4W5W*06gW.X8"nLj(Yc3R`r5$kTR$4fi_j<KhKM$,Gq?B6rpnuiJ)+i7_%ju7C9WrGGHpa"aFW6/[I%/V6^mQ
%\OUSoqoa,C.$;02YhrPf.Frt#"7O-RF>YH2M>(Sc6s91_7X!M:S6s^eM`JFs4@e[mk<*8%OY/=dZ\)i21ID6\ak-YNn<q(doQ$G#
%&^QhgQorKqeI!J.Pp]a-f%H?h^6FSBS/>I&f#"9EBM1'c9Qmu"pT"K>*tPRrR/::>90f^"Ss'?]SHFEh!O:[.>`1-5$SZ<QLI^.9
%O'nF!0KQmO`m.5to?q41FqYNmHu.L2l(qmZRG*&)=FF_rfHCXB(0`KD=n"Nd0Hai?NG2`T[b@&NU'6*=b_1`8Y:L-ljiPFM'qj`&
%0+SGb&CU/'03:YR&qAY\P0:_*"r7HONM)l:&Ldi<#Xp,'&tKEGBl=<EH4=.\dEp9lY[iHD4qeAF]MVRp&4YKUF=-DQir(MGSS!)n
%Bm.DtE0m.kG3P]O9_[^qFE\dN'\%or5(gq("a'8dZM=U3J$:1R:+U)S"6OW7$]#g8)q.JjM<#G!Qr+:2#1ipI#*%u3^`3KGJUmP$
%NbTq_IoE2uVbFN07k04lo/q;iVU&J$:"&2r!e$G&c]dR,)Egll[nJh\Z&LZ6Q%>C"d:_@ZN.%r'FL2HU5o0]R)pB+#hrLdE/TaXO
%IHHMBV,"RJ&t.O;6Y6U\dOi4amfHqc2;JF'4Af9A:9do3G:6%B@^tOP'o63i0e<uFQXUj&b[39M\DhkBE^X7:BbL;I@_6*r3RpZ,
%\B[j+_q]4"*KGhgGb--4'8KU7]4C`G$BqE(Shj.%FC(=pcBEt40RK=f$!W6C@4r[+,HK/<AshZQD0/\h]>J,Os7+'W^:]N!puGZ/
%"(oq=]-F;-mX*6!B8=Lb\?Wtq:eP5[LVfg,i0<_A%upP,\;/2#FOYH<aa]d>8IffLGgoJ2YnS+e6UqVi,dA+'_pcK)8j&DP&V]Ac
%@X:&arC#@q7.j+sZ9Vb6'@LQY0/Og$B,&$L0qn_$`Zp"N=o,DLa\tkW_m(F"n\:"p^9#<RjQ$ec3'JColkR>FO#MS)j+eYnND?=p
%n>+':FK1(XaDL$9:+$GpKLnR?Y%rBYO<.'#Z!p9^;5B\Wd?)FLaSThR+`=CN>mE8<4GZNSV\/>Li__nF`s>jJR,!rtb`D%<]%9-d
%p)W[o8"G!fBH0hqqtELin*&#'CsN^$%oAWk)aPjV,atc)ZP>opXVg.Mnr-!hQE^_D0?dUA40fWKARdo=i0'ai*HSC;MqM-i=OG$\
%KnVZ;Kn_P.2EM[8%Ze2o@[3#]gU*/SV^T(!<c_C+;'\,[!J?E\_\fVHL]M]hJbaR!:+Qn!,JcJXXM4Lg`Imt($mH=*(_q3]9!UeK
%M=4,:iq,R:jiq.'00LNNNu.3J!\LiNot-R2??3[iV^T)"csF<FeHtUhgi<de++<S0V=&L@VleTg"V;(oP/!P"C'"*^`+]rRf@ZZd
%8LBR';8Zlc0X,BQ=VOu=a,q,jDM[]L&k'6)!_Y<=`Cru[F;drpo:jV2<1tn&4mA=V.n('4mLeaAe`)M3>Xe$tk:.JWl3V:a,q3S5
%M,=ZNKYqka68eJHZKn1oR@9+*_CW"B7ZVfR]>[UWn:``f`KBCK0tO/M(Iul?,5J\2W52:Vk+Wa34l^m_M/sG%alj=a<am*'@`eCW
%m#XC]9[JhJ1E*>9s2?,>A6qKLW#m[d6V7%:ZUg+E#XYEpGkXgCI.LDpj;ebUdpm?1s6Q\L,ZCFa-\7pZ;D][s=!a.FY#F4.4J8O7
%%A/,#$P5tH]Hdi9l-[Q\-L_JtTh2QM0f7:$F!<C;/%<9`V6h9pV00"A'ED*!2Gt4>=klX0RfW1?)_HGm(6("Q*#0uO&&X6_BcM/F
%?#kQDcS4:Xd;d`W^uGtn`mI@gK>]Xg$7SG&U:>qH+sa_mLdpA,7$WH\'rFrpNo0Uq-G?H-Oi)T30g?l9Fj,%PF),';2Cl7T:2\sF
%gqMm;]0+jTdTD'o0t3%D#BS_Bdj;en%(C:@^,XXnq,lq$WQYL/_W.Y$@U@%I<H:h]eD7!."keFl1gYeB2>$_<-=="-pjt*2\XQq(
%eJ9!/KBB#ac3-M&XNpn.(a``dK<ND:mnWNS9D?2kZb,[$_<^KYD1in/-NcakY)F0d'q3dnhg#Q,NbmO-r%>Et,Q8a)[Mph?GM=mt
%nk3(qJOU;8V@5IT-^5cn[M!U;NDk/AZ]WpL+Q;m3N*RVsdDLY_1L*,L(^E9o0pHtl[D:BaH?!g=^?s%Kr-UVXVa)tF_-d,%,[f8d
%Z_,:aOm[)8]UYJ-($`rfd6;9afef1mS[2<p<7%:;6pWUscBh5RBbEMGX`mCX0/gW=241D.m:AR+R2=fZ#\J*C_<@0qP185>B]eD]
%hL/*7YIALsCqD^P*&8-SQH20t&=lZbS7rlr0M035`sbMgJ=I[DL`MTP6+Gf,Z1pfK!;m6=lMpJ;XnZ3rSeHc3:5^Z:@FUMoB'&4W
%<Id,RQ3fRKWl&(;Y&]WQ9'B,:r4EZ+*Va-.=GfbQ?S@@n9.]AQ="r@Z0\A*FnTBe(,ssD^4L4B&QooND:X>eb81#_P0@nfJcY^:r
%]<7OBJ6\A1&;!Y\8<!0d_QH(9qKjV,!Rs@9AE?O<q-pgeWg25\h3LU'GMgU>V#(37?>j0qM/r$[[UU5W=M1c"D`klu%ca$4ecpL7
%nW(W70B5-I,qUsb80#l^&Mu4^mZ5B6rF%g@$c7!G=:K?8BEk#!<YWUV0IC(e6f"9roH3)`MV\'gM3ECq[Zc1,a3XQ91bt+Q4$Lhu
%X$dFZ648#cjHHK;rTV<X4cdVbV_N0V<]eWLk7[q>=r,LJ=UudT)-K>pc6oU[@::$F-Bntn_U)7WmT`+6'=?N)43tM,`I+D':O^@M
%,<d"8abW_P5P/&u=$,!gPNsqXg1Q9'5l5QE8nBn\go@)a1+pi3!$?tY7$F^s(u]0ACir2V"-G<5Lf0'$d)r*I6T"+tgK?;!=j5%R
%jFjEtT`<[Y!^q2c02"?bq,L3-F6s8_SLGuo;pL&n@u2Z,N(9?gjgZR0)W_)#g*r%F=O./^9H9f@*MUIB*kO3UTMV@h#C+`Zql#4h
%_%ETD4,Z;o:1j:#GeaW+S:E%rSE'D(KMHSj]30U/]CG!agANE[]KT5-,F(/bBq-:+*df/m<8'm>NE"USWO2)?[IAKhCnF2`Bb[1/
%q"7`!<Vtd#Htg67@9e326?rB#A<0[)<Pd=oWn?`<beV*>.jskO.__%h`CJC4c`"^>6b89$N@g0G]:d#2+4u8/3ZhTL,u1Y#4]ihU
%i`&n0K+Pu>3B,>!eKboY$Q$[toC8Wb7gD/a38S/U%2@P1!I>Mla"r6Cs0aM4901-m)T,MLM;((P[*a6307uLT7M\s)i)bnUB2VDt
%%[XB`SuUjgM(netDL=GPouJFV4**t_/2Uh0&IW`eMUl;)8aG/.3+AQn$]S8e$`io%QI7g[V+*!m@\FAAF^^OVBhk4%:=3A\-"N,2
%eDPTF@V>,').l:aLVZEi;=U2)@?+<Sjj]^3W--@-;A-N8n[.1AXqTK>+cua2hj#)@3_B*?QS?TSM*5?Q9;E3>TBiR)EYgG4WdP+O
%YDr.ap:R>Gq2=(8(VAi_L5D6**2PH0O_-n)Tu?fHlp\1'T(1joMcQ4%9TE[ucZ0)TB[B,FAQ9,%Pk[V21qkJ>N'1=:/^<Mr>6sg:
%nQAN[0MDL81#Am=8l(h(8>;El]A)lmJ)UBno6$+ZBYF#rQ6Xp>;N2pOfS*=O/5kf)%i6+gd"mBF/C]ARH7U-'*K.r]q0"kYR';ki
%43gM,8XUT-eqFu0JKM'@[I&`MfM3C""5;],BTJ?&-,NPX@Ri:2FL6OdgU1)1HAeALCPM$I0RA/;>(=R;A3/G#>-XI&W5i(>6CUd[
%1Z<C\cF4BbK:#8_%.m+LA]VI&QA<P$+EZWY3t][^#9ItMp#]fpZ*SC?&P;4LkbdslQW%sd-!n8pM0DA4,AJ9EC@8>6WctUt5"<e?
%GA;TF5iJVCd.V.Br'-n;-Vj>oBK1Il"ku80NbWoE$sfehU=Y4Hi[;$c<#3)):8^k2>>OZdM?O_UWDbKE9qWG/9tCg0fq/mWGh+$!
%N@K'#E=7%Np\/5.ontkX/26?0$]HX]N1]9A[%6:jIthpOF$0).:C^+*H1MhJ[>CI<5uMR:KJWUD@?9cu_6Z.DnrS+qFQ)H93I9m/
%Sg>(H25BCnjHqs'*-0=s4N0eP4*0,!j!5;\bdN21.*k>.C**r1F!2p84MD?hH-'VS^ZCSj$'WEIp;h4;QGK;(10p+o(@J&nRm+II
%Y,&den%_d0E\IXOVAWh5$1:g6gU'@L>&k"rZYk.>8+\dSU%@c.0Ec$nZX3F(_f4@=/.fihEUdn$nHZGl1UrX0BU-J6[p=0W9'8e#
%DO3/f7EUB2Bp/%\_>''SnZUtuJ$EYb`?+0acHBo`KjTk28L0((o#FNTMG>[Zc7FjFeBcuCbW1,7Z5k!M*1c$V`?#PVHsde@A/IO%
%R6Dck$-s+1_@up4kD*4,oJ$-.++qd4&Yg_17;)=Hno@!8U"Vh3$OeWHi]8?(WrmkA1P9DW(7eVLplYks?2d5F\fDNa#/dc-64];!
%'GuqI*n"heP8+D\ab+jNk6Bk75LhnejKHDF<Ku.X8M7n7`NMg-;KPL!U)kX0i^lZnH"OZSUoFi:o]!J'+0d&>jX"qOilthI-Z6Wm
%ot(hWA#BgET-l(`4&M/(PFat!hBL:?G6ulH,XkjFl,ajucY5*SOsA:tjX3l>/-VH64dc](SYW/YC*qSXm**RYHQIU66/%nO&3mhM
%$&]ag>c`To+LVh3N+!#m9<f*M8>Lo-NKr]9/3R%.e$AI"`982CBUI2jM3[MT2BfM:lraGT0\QW,m2-!GTbF=j#?IJ4CE0C*j/;C8
%au8I(0"ETm,fV,K-JdH/#s()F58-*a.6LV#]QZH*r$BV#cGsCph(su=Nl3,2&dEWSF$pF-%UmM$OrW3.>`OpL&4L7dg5KTaN%r;5
%!BJ>;N3UTo&m*1`T']<Ckl+fiWYWSCEB$'a*?LZ+#FHeZKgQW-Fn2bs8>pR6.aeDQ\h*bW:Q;QYnfo`".%;mM5'_Cl;`/k@GgY7P
%mM6;l#<_QB%Y%jqGL)+u:6&T@F5?YjRcO%N*IAD$dL1Q/9%)@Mn+:=@W!YKZ6A*TnLEVbs'?MC'h$q-[Z&-kjM4kU6H()`OB5'&`
%efb8)U-ZuI=ZeGNe1NOj*G3`CK<u*5:fU!rJ'm#2p.HIYQTU3[H0AT$E'9k"\)Sl".suG7o'nm0&O)`e(*nd7A)mr8C)T,r%hD-%
%cLR+-j0*D>,iO&of*1d_2T3&oLq61=1rr+kn?<%=TKpF<&@P!P+]3Lr6H=3S,0O]mXE/I/DeSO7@TMg_O_NW6ZM:uP@efjVl7$N-
%'?eVH@qIoGiostt4$f9]dF=BB:F4JG8$+SNRP2rT`?p&B_p5r/.qF,9/KXj3'?W-eh(C&6$\phP7u.I^4a)ujpfoTF/>W"2dUO&1
%bf6J;&\!WA]80W[gbod:ZmN)(UGJ#-e'*'F%R8F0T4#l!FE0d.rt,kB]G=uY^\t7k.)s@4]Fg(9G/dl&_B#jO<G<`4q89b,B1,nh
%KID<7>BK"sa"jMKHIa%fXYa5hc\9eeULr_pZp";DMRcQrn`Q!:YpWoCM5QE^B90;FO+Gp,Sik#a4(bcs\(O^#W,KpU]qLoU4lVZ(
%5M]o^q_jk/YE;>0X"7;%[tlcb,E9ReP:E?:_>n/a<CU02(fQ@KPTn>^);Epoa#jVNHp/Et2HdNPP&[<4iC;g!.#&gC4^@6iT+q%$
%kJW)L+rCD5)BI.]9:c+kP9H]M;*]5]$ILMa@-SZ8RR8$^+5ocB`k*5kqkA7gf,(qZW)erDV+S'n\U!eu6&kdh$M;C:q3G)32ZoH6
%jm[>'"hq\-h`IbP"7k+s'q1t6`NT;diht>NbeF\M$N.Et2k0Kg<N?uoAhsfkdAkgsp,[o^;Rom?.\qf`=l'>d)?,GARQkNfq/HUX
%0KGV*c9n@lRq/A1rGmhHqPR;/hY*n&MO;nF!O-kXI0.FB^9l%j>Q7TK)Pg7c"[#nd?bfXEmXddSY-ofK(o(C8pM$"t$(7>a9$Kg4
%i"EHp"_AV;lNMPRR"+u<695mn%8&RgbnQ9/MM$kM+"?.C&YeEeE=SF2CprV1:X;<iBXGor&BZNs$_c"tYZ+d:LP;W*GE>:3`%1SA
%8='JPBs=c<7c;gLn#`6\840\"p%nn4dU0$`@gJY1Ol#aVA7=MH!N8o@2bVC^0+/s.:4q%X/X973@\S$<@FGScnM(<@f"Ai`;b2fU
%r,Fh-YfnUtH3odgeV(@,7;JaBdpQ-j6/?H[lR?4uWqHgnI'ls-"Q4j\DG,[?-q]2e^@R7]IAg-bV.Mc3q*Uo"(@]cT=E]>_bj*97
%l\@!gN*NoU.lUQ]1ih\IY$?Il8KeLtd$769XW(/6m^hi(oTg#fV8gTC)u4LV-1j[@grPg$q/V,Qb:0X<Qa;=ZK6$tB038*u'oR-k
%dVJ>q;A%U/GWY//o"+c?WaJBYjS,[@6$7Aic(Z0T?1MttWN=<gomX`"<GqKX<%ml9qe64Mq5m,]jB(^)cjdG>S:]ORBgd9PO"rj-
%$u&+;Z&`443qaD8kuGF2D?S3S\7(2=rK+fQP[%Na.g<r*=K%Odop(#EHi#B$4nGG=-9/p.oo%s1,XjOnokV;Rj9pDtJ.gC&,2ksu
%1ho>8YgnYML+smC_O3ca>@kS;<%Es*?V(?"k:M+7:Il"(mb_3U&j-Q;ka!B735Fd1f@+g51W?0fm%a$JVLi9m*Vr2Z*AW)I&,`>A
%N2(-edbIJ3Hs$/b_oOW7h.(WG:`;LCN!kSF"pWX6ptrN"L1cc]cm1j`[;b$HR#<0k/+nh-d_O3[!0Vju)/+Zu5)o?Nn"]ML",!*J
%#'gKme.?:\^Kt[34p9+eCW]#@('!3<H(SPAbp1!QdmG*(a5M,lT+gH0QCO!6TRIR49Fdo,PFg0.-U.On-q7?'^WVWM?WWPS;luAQ
%H4^!JZ(NlA.6dbNRl2&4'GNOb@F*Pka-6q$f:Br-/u@4.NeapIdVp,.fIr1!94^?4,4cBBB!3N2/-QGLZR2.G+4&<JIC4C%p"F8j
%>eN]PmKV#I)2YVL(LsX7GeKt+NbNYhNJ,o5@u%dQ>gh6>hC7#[L53NnoCef*1ADDn_59Q:^b\FulY9N=,=Unc&FSp]JYCKJrr9C>
%r<"Q$L.1V@q#LZ4E^SghQ?IUATD'Y-+f`@S+F,!Y5ROe8)J^H)0E](CG*6<Kagq'pQ(XWXb!@1Vbc(-!I_fZn=Jg@-I%@b==kgH_
%7]l"nJqp#Ih"PSOWH.e*EeR2aj.i":pbYafa#%rMY;jlqADkFQMD3Q,M"LupRS/c70GNqA)U&VJ7IB#Fi;L^#1YD7M'eT]]e^J=]
%*Qmt;;T*a57YIT=k'(nFTQ+0C.ZDVAf_GQ!rlL"2X5>Qu?`2-/].TAll-eD1r<&p%WW[d.o^%0:0'lZgAD+u&%^<UYY#c^n+GWq^
%(E>ap@lbYW`lDhjM%8!\r;n:!E,8S(=E`6o_,.+3;R!iA.'t%!O(<nh6s?[4^VKE`s7efV:`:b7VI*,uMJ:>L;-OBHMJ5iGU:'h$
%7QhmaKbQ@F/=)a$^Je!7=LG?(KjQ8lUgfI?5;e$oE%p%@1!2m%#R@L$RPIag!&H1bM]pA68VMnMB8kH,M3@#FX!(/*H,WPf*9En'
%="[)`EA9#EB?5-k;OEb;P)GK\W!5I&j`T2XY:186%5=P^PYj'UJ"^^cAM/l85ELed8r*ng=<HY!%&ge""uF/+;%J"+8h+'S3ig$H
%>a3*@b!el(bcl'bmp)\,`giJs\9s%\kU/!<qs_6t)."O]%,^"X_h3b03f8BHi)Q=TBPh+fj@krah]*dX7fAT!i\rp_VsakV]t/tP
%5P(,-O^*6n>gl/_/]AE_jP!/-NTAeiaL,7nY)LT4f4D)gLt%Pd)bII;D5fEKem=WH2Nhf"WV/P.e`&)GQ[Mun*jd@f0a049Or^P+
%^_%MKT8iIT)l8pR&K?_^-p]YhOASqe,>t11;C*U.lLrC>"6"2uqDTfEQ2Mek^NhbG?NBrKT34%1nul"A#1o\Dmq5WI18/H6hfMe6
%To[ak(]L&d^YqDAVB.j!Hg^nU[R4aI2*@2eBjc\\:mtI-R*4\9P[QQX78-'kUQ\ONKq414.L?tiKtfqYria1OG[H.H14Nns9E.,9
%kFD<&BVs2CHD]SLi99k^5<%,F`ePmt592``MeW+,Ys^>943DmWWaT1%9$&f?/tWO%LK_(dIe[?PQ^iAq4R8mfE&_r,.0WTPqsJf"
%bi6^Z8q$;!;o$aq9dp*qdRVbH"Uo)Jn9lD?D]0I=V.1fZOS]:#1G.X<f84sie@^28RV>b!;!H!_.@$UTOalTa`E/`YLN+KsRCF9+
%A>%=F^X;oHn?)`ijs0[klbA'%G":l5$`!CPLn7*I,oNibp&J[2r]=<`*NfA@-L27FJ0eV]V'S-*o,Z3!epte67Vf`52;cfMn$CPW
%$KYF%^2>e0Vcj+$?V*Up*I%/#3(V4Pq32,t-YiA`WZOO;>lEi"d)r2SgEom%/E!e-.A1IkTl3t!$;oZ[?\>nR(2q=[""sHT?.1S&
%IRQjX2+4WrLY+,;OJS+pUG,hn'IFcQa[T^E<u32&4YV&0_dq8k?bNED6"Le4`*a;oETs@3qKJoB%[sHkTX\1-qj!c=g8"FG5Bt=A
%&^L#uQ6'5S?4XA8O<Lg\0.PILJ.n1+>KZ_DXDXZJ1iA-Q,50@dlt^Kr9-'!TAr@-Ffn1u)`N]Yf'RUb]i'X7T'Yli4s08*sI9OT`
%6$3V,B*;[*D]*5s@\_3H>6DY"=TCq#MukZ-^rn.q1(([9!GW<n)$O@CT_M!-Qba-DYV6Fo]W`dmM8+uN0*CQlNWLl[$,#oVk^,I<
%4p)H`atnfcW$=j:D+j8s4(dJT6'bBhW1T5e\.>'"F$RP)Y_g2H@F,OS8-?c&+#]6F&T.$Fii>4UiX\5qUJJ=Eo>iTXN44k4irBIo
%O`DEM,A#5ej(gW2l'Yl"83ma"65^]t3')WTFe->?%(qTq?Q,KLe1WSb[P.6]I^/aqkTMh`.u+hPY$LiPcINp$ar_Ia@-G)+Vg)$K
%Z'Ws3Ug!]N5LN.+6].eDP"LAO*Wn(/Wn5j^TS_H#%uMf)o!%Z^+bB05d0KF]m(Q5-@*gV!=s'%no$C^6LF+LfjO4h>:T9^2'ogc0
%QbJC5c-_rh^Yj#'"j0829gO;DN8?bP]V:pNMf+/hq0-8d_8]%b,Q>_3N\M*:J2W9p%$==AoPk<"'uViT^bCXU%'6?gCcjq>@uTCa
%K8,dk*+K]'(m6i_])GDg<A)_@nUD#6b_=rEqU-H.;T,P@eKHW3f#(pil2R;hUN*qe^OQr_;OmZ*jYm7E*dhl0PsQCUTWN[X@(WT=
%0YQS#C+7Dn%=6oqY_C?rl!T?qZd^PuMH)%@*E_d;<),l>M;!S5/Oh*M&+)YMBr&i6S=r\VAou<p+&q*>^&!fp4eu9]+A)*&SRsa=
%<ibpmVi;0Z)NM^u7V=%?VRZD(8c9%r4Qk@i58ErRD:PgnAPhs8*#'B`IaS=arbl.:jX(C-W:kM+]LIJ#Vl<#t?<>!F,Y]q=D#bWr
%IKqIh.h)dpHHK;=4rTlSY;F&-mY%bj#a/7'NDG\N15*JgiUo\#RnpQuUKIF\f3!DbmF.1Nf3pe$I(B8^.?2!NOZ3%"]X\`FIcSb5
%]Xa.`pPTk+H#l@6c)!C!@0jQW'Mo7<1H.q.)S'o6GAcKeNSM(,480^N<./'?gdSVS]W(dBpitlC%>6CD.)#n(/eo<7NAm16-a29s
%HYj9F8E'E(%V4e<hjncirK',GDWoE3(nH^J3`fbrc^!]=E3DcVrLO*Hq@a;hK-*LR+2;hrp'^Vq)1&8co*_DWO-N\<cpmUs3DGm&
%ea"%-&MRQ(+/OX'=P1\^_Ac*"qR(BR7R><cAXJU&cpt(d+QoO]Y=l;5p[drR*,*3\YN]":jE]Tr]S,u?qF,A&T0SYppo2K-7.#Fh
%p!7KTP6f=tET`7@ai6;Zm5OYF^(a.@NE6#30*H":QE38j?sa%+lK@OENF#6W"Q<F2d"s0Ki'%*Ql(OAW/MO9Z0>qTS:592!n1A4]
%4'&gt+;#dQLGO5TPkjC+LlJX*DHUf7:C`$`JN]k5LXMV1=U$+oTT?DC=UuGm)XAN"'>X^!L6'i09AeZ#Td9GIF8sgkQ/GdF7^n>8
%U6/=F#E>I?:%[0FP%Qm>e4.h66$^7UpWkT67Rk`Qf_l%,\bf]UilJo-r?AEZb58p)\pa\bA[#T6,DP[a.#$-cd-GMH":T>N?q;C6
%*.4mPf1XBCLEP-b(ktXE^:#<JEiF?FQ[66),NUo#!c=_Q#K'(MFQJkoL-\n$ch'h!$?GVNb"+H$^MY%2#kI1fK7dq2r#+0B4S\]H
%UDQU\G[6BgIe%<;Tj3\-NR*!!c)8dG%ON)79[j;%OV(^[p*mZF1^;(B1s"\lLI'W)]^"4&],QfAE=J]*HLRW='PFp<<s86KZR],C
%qi:b9fOEi_)18X\LlXd8,HdY$2"YEk/A?j+1)<ejhueI$`h//Eo`^l's(FW55Il9"&"32-oF/Q>afA(>H\O7<n0.n"&s2*Js4D&?
%Y@=29#]MThUaDsa.eQWldr@dPfM+>A>Vu'WokP5nn#qAT=/u:o@*UGY$;6d$b8<tRWZ7P,NB\b)pC#_d&?dV&jg?RlPG&[896s(K
%N6#g[aD>WOa\3Z\ZXKR`]<B="`5TPE_5DFjd^W'D,_Z8pq.JmPO.m\JD0QPE*DNN9^R"L?o[++0,j!9#QU`+BYL;_b`U_?N=T5!+
%4S'^ePLd/j>imNTn6nlKRYmFa&#tm>BSDs2[)fE)_+gmAs5hL4#;u(A6%:sG\)?]uGsi,Na=:5oJrEuR2/Y5II`9&.lC#P9&]XUq
%Nu@epj-Rrc)lh7fe^J9@]F99oL"e4E0@+6rfRNsXjDb(uBKa@j&G-n"/BNMW-1XhCaT#B<rSoj$DcXQ>`tQ9.lln9N]_"VH7t*I3
%2M3r<i@p=qi-e0u9O.]a@nG-Dd8\0l!Ns6D;\0[DB0a^h3e8%bbrU]cI[MKb?giK]7'up^k-(PsS%n;?'Orp(_*8gAjbb?<9/HBn
%r$G+83ZD[jM6ZD%qZ_gegX'F(]4f)9@bF^;*1rniU4M?(,XKrL!Xr10iIdpFMG/Q;(Y4j?=dRX^HQS\@=kCX:f".eIGO(!FOi!t)
%)(,Hc$\kgInL[=a0'RTi-:9Jl5=Ns''sGDS5rO"`ZAsp%$8`)QM.*02X;V`.-V4rp/-U7>e-o'gOm2dr+I\a,nCAk=1hURM>d?3r
%"pEHc9i)+OVQ:^LL#/&)JiD4&=!U]VaUH;D[MUnS,P\hW/aI_aBi.ec7AX\6a]2<193m5Pb2`o<gG)OPP]<?cgGi3#DA2K*<DC8;
%&ZB7XR#G)I#XD66*0Y)G,H=?_0A_^;b-I%O#c])jFC^7OBV[Wj`e]riMMUa(#?8R68Wnq4_V_:l8XDkt9@5FB/cj4MA.W4?2k3+j
%%3^&\n/<32N!PF&hl'BmqU6%?Wh>7O#?ardp;g6cQ4RS$_KP/$&g/-nTFm9.*E^cum>/?NkQi`b^5c\^ODmOT#0^qdWr`<%$Y^Mt
%0Fbg[9SR#tP"M/C(em&XA-,1l+@+Zo\J!m;k7:-\'[.Dd#dUNEY#9BojC+]L7W,(KW`k&Z<@-Ftj3Zii/K9F1LB2KE&gTg`LlO)I
%m6n,1"1a;b#_Z[k8JK)<;sBsJ)&S$[+&"_j**/I=Mb%GV0n1,ka(>e%Knq*!%T?5\&5ZBB)j(@K<foug,$i93L9mh?i=U$op`q>`
%7bCTs@=07806"+T1/[)m-RL)]9G*:_,LS%G/0QMa,SlQ8/1@ejRmVIYK7[N.Srbe)P\>.e;Da&0MaY^M*@[g]ofQ%!m=Am6<-I6N
%?dY]X/s.7I59?u-ASgZ3`Qb?iX1`gej)h>UecVj"f5JN"9O9@C$YV!Lf7['VGmT[*X[D;Jb_28Q6*jS7m.lp9(>)HOUM?o2,DP(9
%V3"hD$2egU`\%K^EA+h>Sqkl@F:ao&nC]GAN\\dYhV$aD<&Z4uGCh]%rqn2#I@n^Bli/lIqC6=_bZL7`bh:[XS(S7"FRA`(&#tM2
%S,E)h>)WEZnfP?`eLSC^'%C+H#%*\`1++(YAl'/AM?7f$e8RMQ=q?LlPo4+&<RJ#P]OH#dU63YB?\,eQ1f]_P%GfNdJ.Dot5X%.e
%Y]Mb+R_!rgEH-#lT;Y7\Y5r.jWQ#`TH";;s$IV2TiB91bdl(d^FP`o4T-5^-:r"nY2Z*FJ',8RT;Q9!WFPG47-dkSDn\I<qTI(+F
%H>NS&Kh^GLo-]*lV!U9"53p-B&'\V)3]V?n:$k8k0AJor3cZfN"3%2-n'N.G:0o)(fLMdTI8FQ@J8](QDa;rVcfA<<>!6OU1)G1#
%D!(6UTO+[cfU7\^Q]'W4,dqM$q&D@?F*cSe\B8VhMS['s2m[W@nJ%;udUg-nD:0,;iXh:\$KnHdkeOh`*sDU%X[XOK*jct4re8bm
%XB`fGHXToAlro[]l.gk]$5+p<=l6A?S(3:I7-\1KR#$?Nbm3?SIM99o@"\<agE8_)&SLXFHe!^T4ok%1;*/+E'UKN<CG(:!E1f]e
%*D[\hQMqB&lD<JdO_2.RRmA>hAJDY2\hg(d"De[F[<l]DCR*(jp<K?8J006"nAZ#TB"YD[>-NVQ*OkreWVIdF(]5;<UWEu09?:Ae
%b2?3">Kq2f&nIG]^Fl>7XX\R+eU&(E8N*ZhCAX[Q1,'3Qd00W2Ied5=/m2#*)%)7hHkY_3;K@`g3iJV_8Pd4l"UXa#;#`Vu<&nGG
%T"(Ol0%D_2l9hZ^?.;/)="F1a0U+ruMVh>+)aK.9IfhsdH3Vla:\OU+-frl:*l13GlXV`.E(csI&eO5T]m3WNlbuP>b]=C?@]%3U
%Jbr'IE"=A@gsiBu#p@2*CZ=>Kc*-0Y6`<s6Af@M<U#qUSn2,LbS<5R.#o1_j?tO/&%HaB^H>&S=%&ton&DdO8'@&-N?EmO7@b5.M
%o2Eme(>F1`n/M+=]E&-$R$e0"^mGDbc<.2\202(q(;UD+[&itU=j08pV8o*m)HD;KJB8*IpcRcIP8Q7Uj;?nAkfLt%,X"/BGf*tl
%]Hb]bV][cN\RGm/["JL9f@FJ"%\)TkmJ)s]rC/u>hO.1:6*\pcaIEAe9e@.Y$"[I&1Y)r%Mi=?t3T+==kZ&'</]+h91i>[>'$?.*
%_eD\5giD%^epouV\1&Jen'9!;inSAtombE6DsF0#5WTN#>sm%jj/GZ2no);"=FG3I!@m+?:M(MuUM2!g%fK@,Wg0L6>bGC@jEU1T
%_8p.4]^"r2gg:<UW^MNudi3P*0$k$24D!sqJB"Yi:83"/Ucc5#1O5C+.S=@[UuI=iR-m$Z4C9M<r1..F@,8XAG_EEMC4M"!!93I.
%P3>NU8(/;b<PXCS.J:I6S,C`>[JoL^]Im6&>lQS[oK<>?]MU9r?B5rT1sK,XFZBjOon<47;Xs!!D30maRKF_I(M-mfoa+3>'#5kR
%9%.2W#[iO!-qbbe3'RSuD33n:(1\i+l9IVE.*Aj+,RBS/,`#66%k#9i0d)"#Nd+?EY"1qh@uH-8d`p5Y>%B=X2[t^[6"D<:9!bS#
%8oZP$$W)*N0oh$^knh2"q@/'3?Ta]q*qr8qF0XHc'!Q,E=t^(K7U^<)at+W6S&sQ[^YgOJr0BL\JZBM2ijJ0^1KV<Mf.LHSK)Oul
%!6(dA.GRti8(C_3psBi(Cc7buR7B@4AbO$]L?pN7^,&hRJ$Qe+kHFX#pZ0kWCpnd9A>bZ9-^uWARn^6Mm=5+L*.DSWH;e$p[@][5
%B!\i$gh_.OH7YPVfboES%<X=JpbR6TJuc7]5Md17_aGN[Sm(uWRkfAY4GH(1`g4:UCs`hhh-pP1oDHf+=nj[69toc('t/>UlRM^F
%bJrgOr-CmaT7/>mi7A&+C)P'4%6i!p@H2-hEHHC6T4Z^FlR?q^28*NP^m@'_20Q8_H%-sSVhG5c4m/%JVp"k#$rqG::)4f<@8S;b
%H;7<:NaL-%lXK;:`qLAKi56X8[ADWY3r)CA0k"meq@HZrSEhio5IHPUm5B02.ZAXgDTc4HpYO3;p@@4*Fo&d+l/h7l$0HTs9C?P(
%jcb$SrGL'>D96/,XHE=CTm;6@H##Nh/%OF*^>r%:=qSK>M^L`=:=U]VS!pca]$X7h5CA]9fgU8`p0hI&j5^ZPL]@9D&</)#]4NI]
%]DkDT`dXJW_sE>CiEX]9P)FQH>i,QYVg#nmp%oB*4LThi3kU,Q[SNUul\&s<j8<+Krd:pqDV6*qSldAZ[o7HfH!DL;RT[5trcR)R
%\6mQV<Su,>fq5ZjpAIU'@IsAOOr^<rW7aP62f(K4"i[J<n('l!VWFq*gP;6+><$h!lgIm:F8L=Dk4c=gI6P.'*GG"3X75`Do)6jO
%G(-2hf@_]TG#k^B_Igb9h%VTa6@\dCZ/c+K[sIK&[:aE\*8K@'mp=<jqSO]NXDL)sX4rVXLUepDTk3V?(r$9&hTaf5k4'gC]=:!5
%c.V4'Z>>lXaX^Y(DHt@c]s'*6hj[u7;9"W?T^TRoQ#C5PkO"d]]k*&n`VE5@qT:Q/Qc@hH`Qti*n*b2%,F2d1-R%WEg$r3b0g!*S
%GfYm[hq_kMmY(_\>BdC+[l[;(knle?m+dr4m-MRcn(G5dF,gen`@b+ugcP*2^Q!Rr<C?P\>qD<)2]K(^#6(uc7%TslN_Oq)ac8$a
%#MBDtr[L"/!uFb8+0*Bcdjr:9G33Z;;g('cY@cs@=-p5aa(':9iV`"eG4BYA0"Z5531F3f.BR6:LSNn2f[,8P4PlULb,mHOX%oea
%A@7-]Y?>/DXCmO;I5u(hb.I#_=nZWS[6W/4Zg1O+H?Ne.k:lf,I/PD(=V9i'p<&npFZtdlAogoDM6(pnI5Cb<ZM$;jI97H7mOkrL
%m%-FeR6>dV5FXg)d^HL&=&pc>hqhG?B>XPPm!7o7/Gm/mONW*c>ee6q5/0>2ZX8d:T<mEMeV3A?q+3bSHs`Aa?5GQoZF<iKRD#4*
%hIRd05(([W&!s`1h[:7XZcr[<h,njTDiKb.m/=1<H[KREk4\c,fY$fV(gCfMIN&sorREW*gjail`mhVcSMB/4H=gu9V=JnJA(k9/
%gT5o"53CXljN"p:]?8e"QgO@rhWK*<@u&$OAaH4?>T#V=StD$k&>5`C<dANJ17u6"]6]"1Y?/30Z-jLHn1\2G10-Il[]u=aoU.U$
%QEO)C:FU4#a(J%H(ZUF!mG59#Ik\mm.=$BtGjl[4CYr0ra#?f^5*!5[4,;kbnq&g7GB(A]Ie<G<)*bf=?QB)"5!(q,`N5&YqaZ*`
%4LiKtN8I4=GL4TZji"\MDbO:m'4Zf9Y:$1`S=>B2Y?SIL_WpRFKUP&NQnUa3I\59FX^rk"=.Gk,-X2KBqstWh`5t>UIH"^MAS^;s
%o(g[d^G>e&id-+KG2iL*UGYnaDCnRp='P";c/dCOK>#D&f(A,sn\D>%C/&JmEp[7LA'u-qo93Cfa1%90]BceeH$sCJo#"T$rT)T$
%rV+Fn>tLNu]DQh/=h?:K9P'-r1,XJe4J#`FHDjOeqUk)_b)uI5C9qHq5W;VGgA10drqlT8eEPK"qUERGXfEmX-n/(RJbj)\ia+01
%[2*C.VPb=KMpmU#o)!._r6*O\lLF0&Bm[=h9Q)$8Mpk1g2r7;:P\+[Z?X(#:e(<</q<<[JmE=bVrT7=KL=7+-fpS[PoDOV[C+D++
%G=HX#kH2Ijf`rBTF'?[]c$]NW(M8Od[Cr!6/SHq7HZs:Lg("IrbKg%5XM20Q1&LZ[@qg,P]A&]9>.QB4^>Eo_B"q?P]<e>n;s\,i
%HeD6Y-Je.^F%]H(`oj]^me=9$n!*^[GOe-UG<Amuk<;jtYB*cVs7>#ol-$!8B(b`Dr9WdpQ[-]O?I#ag)nVP_^BrN`#7GEpraPnU
%IGQ&]9[;P_)b]eIYnJ.h=dZ`>[hg<.qd<iLZ2//XfC2B?LP<bC_M9d7nj;<)S6L6J]"_>eX.8$"/l$<.0Bt'GetR<VrF0cUHsL#?
%=$Oldh`bE60A\@Qgb-$Q4pjsSp8@j8D<e.6[!>lnDO,IlB.fLqpXU[Wr8"]'9BD^:H$O3r?<^_u3Or<OMW=!-dsCb2q/E/Z07Q+=
%q77!qW%NQaqKaI3bZJY4Ho?F,]N'AUfP)Cd$g0J:KlD/cX$QtN(+6S(p7N@%4IBCifCQ>XijLN,Me?$q'!F^$.TYCHSP,1(99pj*
%:X;ZQeQc82FhW<dhTmcj8];gU9AfK`Vr_&??]d3Wp7(EIhp1:-h;4:/QkPt[h;4-bN*RD1d#G?dFQSk]218*Mq(P%1]Ut[,.`$ms
%L=2/2)X@8!>Z3L5oJ(L3E@05Bjhk6/Y]qCkh\YEsD/RXJWu9p+GFE.tkI&d&r2"R:SgeI4bn!bLgh0()c.ShH)K+m,mX+n[6b:m-
%p$/((.&+$#5J/]$hS#s-]8j!1+#d42N7..VSN2//.@F)<HXti/k;DijGIqI9$RUDqNO=J*\^H8nPne3g$f^L>f#id+[^K'p?$E!3
%eVW+&F]EFi]N*RSDQKG@?hRNY(H^*H9jbD4'5#87[8#he[!$OqfO"0/ca.EEY<RJ??[Vae=l5SscE88a[tXLuo82;rg5[Y$/8X_)
%2qHfc0,k/.F5%Y#+8:m#2JT)BeD%r2kPjkg62f!]_qNtp>MiY(hpuSW\[d*t[Cg5<o(6OCAhpu$I(6@_frncN/_U/'Z?!np2qGsm
%`O0hImGHXHC\N%]H/*_MGABP$rb?A2gU2?9*kH?W%d%<BP4gf(I'^BD>[M?=]+aX;79;]9BXg-Z92"]>Md+B,IG<*2QDZW53STpj
%c(0:.>.N):_Zt,Vii_7B0&N,S6#_>9>obgB>M5:podt=6pq!jrH[spgI@2YQDge7MXhPOn?0@c*<53qWr\h7UmU<8GZb:=h]<Q4t
%cJEE1I4@52GNMqSB=9*,ltcgbo/lcsgFkXtkJ>1+bi,J>meXu-kIW*mDh@I02>:^AqM2cW9*oZ=p[ZeagtqGoVn;n10mgXL;6lbk
%e$G4EIqPrs&*EPSgB1*lI6+l7`t&Y$eip^$9DdT2U&.iO%R5r\((S+Bm\c,A>CZQaqsERtd:Mobo/QX/\ohh6eZn.%F(Q&r3PM*:
%Al!$)O+`_+nst5MDCiOcGrRe<aY*ltBDJ[kPH4W5_qEaXG3nhuWH%cXmIY('k4&#?H$sfn=#_9dZTmi[S:/V"*hUtY=7=JcYNt3D
%rp@`)q=R_TmUFbm/'uOpF`VtSn^3^D];T(TjPF\@^>-CdS=`r4IriA3pb;_b6N>tm3P5.Wjca5&bke1%O"7\dDa0gGXAhDJjC\-M
%M:[`t:V62Bf2'Ah<u[cEf*g9Xc=H2"kKd5;NA&s<92j3^Qdp_RX"S,+q7SH3e$AsQn[7njLY7a??VC7Ng#^Z8=mg<W7as(!mr.C(
%bpqJMDb`a6s7Z+aZf"Vq?[_Y*DOt51+#f8OIV\iEphKK_kih<EG^aa7T=[-5(^J<,kbaG[Ln>%)h/0p*/_o+rNse:fpi-4H2GeQ"
%2)ne>BEr*]p#K;*pUtNoGk&LjI=JpZhoLtnI<1dJ]"GRl<3s()EFnh:B_gWb[X;GcQ^#h&X/4j_Pu"7!_&aMlGM5o&q_%noro(#'
%Zb:g+:6gb3kH:Z=2stF0GqF5VPWuOni*l!N_oBUV>5mL>X5rYIVJ"-;8o@i1>U_33ldZ/eWEJ&&-XThkY;XsHP&NBe43CoZX&\>h
%44)5rj4f=brF4M'X(UOjTY@u/jh-%&Vf+G)-a-79QqMH",A6hN?G-P-2rg&<!qC)<;2I<a?0]F-3'r]%55:8<.6[bZXBDr7i7DK7
%:2E;IOmB9rNMX8P<OLDRBiOVm%k4h`]uh>CTAoYe:PAnf<0$&g<jdm[!U0/2Q;Q9MHYKO_?u5n3gb9\UgoW&?prL2V[O]t[fsHAk
%M1nMCCRCo2g4$_tU@(TlZgZN7do8K4QQG./HV=O@gR`Qa1iTACNnj2sFYVU;@M$$s'f0:#HCEQpj\k2(`Dh)2UNmGVSX4qX*cG2u
%gA.UQ.Ji]kM>6]Ya>i53K1tkpa:s8B^K#/`J?gnn^QJ?T2Q1.)5),+RIO2=+0"5G,jKM5LfOkI?q$m6ViXHqA>KWHn8Ajr+617H'
%r1hugeB2`G[?:iR-2`H*K/S&9QR\D$L#,>2At:PbT]<8-$;=Hs=iH+&6)N.b>;CZ)m*ki\@&fl,X-H<]RL%HZ%>upum0`XTV41*,
%)"!aa#<6Y<W2nOtJ4bepX)_RHr_lsWnTqZ9L6`5?;D"2OeH:@8V.CKNaJFr["j^;/bsdXfS)`+6nldK$Cm1s)Sk\TR/(MLR^%r;M
%!"`H0m`5tJ;aT5B8=L[s(a7<Y2,&"m1mpm(.="kr9`93`efIQ3I8n@_'F<tP3)661n>"2r4$&A_P_MKVa6q-[Y(2;?C8H3-AB0%#
%P17MT$C>KDnO4l%$)n!n-drhQWP=..#0MoN)HZi73K<q^,!;T_h,8sUWhaB*h1ndjLhYQjq$)YCn7bR+51Tr[=3!`[g_Cd_@iP_O
%M3%cI0$7dSFP`[[Xu#Q,4I!jVC'C$t.9Z..2Z)NUN<=!dlGo8F2UMhcHQ4$6NVQ'Q2bt^65/L4e4#N_k\Za<n=><3WO7<rJ/_G]F
%62gd]"mum9r:B?7><U<E1L[XRn(*^=#$2:8TjGG'RsY-q+LJ_E<"n#WO^d"_akP9V)Ct)OMC?@*p&c/+elDD36ooEndF?Qd/=F(t
%ltI*5-)lY$m+-I&d%?P^h<4Z,;&m3-m>sms=%O;'9N[K;G@E#7Li+1&e$AJ*/Lr:<m_7@%NS*YQ9n#OlDr^P_dWI"Q5H^n`B%X6`
%:%q.(,kGO?Yq^,t$=FXXh`13VAh@V"C>eiLd=l<Q2_HEL0CJLS4Y!P(YX4c^AEE4;e>N,MMtQ=7s8Bfp4E\/IDq;B=DHC^*fc;`X
%0Ji*\r2%DdG4mPdNN[/iD/JViDccWr:[`5Q>6Wj+8c-LQGk0mHcuAI/Rg!50F7nkIgud<WXg-R3Q'S,5c.0LDS_)S0g,JJ\pGUWf
%+RbQG2[]!$de$7(?[Ka&d%TlRP:QLMXepI>`E#/T/m&Y7]nWqcDr/cXB]C\j<@0?b]CPRtFQ6[84',]lS']DqrVZH>BC"&M3q(m?
%]\^etc*_oebN;E,l!`FSQu%%(>K(CAL<Q"Y%4K?3rc4^mHJn[cC\tR)h!-!#`/K)5EXUm`pW^+TdhfA7(j*[kHLnNOT;K?_RUXiS
%2!u]lr8MsT%cY0/CdC#Bh9:6i=&=rjS6P)qFj6A>VrmB!Kl=JgGih"PCMr0[BDcq\;"3rD;e\F>]m!,](56=,YEpTMXd$Qf'^bJP
%gZc]Rr9'BRQ_4,7!6f>`mbHeG['k;[A^dXnVB=sPpK*^SLX5:_`5:Yo(cGN9G8fWuF8C!O?cYQRV;s3)J7NYLI:dIBYflmj",5^O
%hW1Q?]f(>%>;0&^O*%iqC#^/D;uJblG$b*R,$g1X+mj/H-39nOD/L?@nk$I?N[m(h)ts63[`AaH]XT>F?cMirAUeR>bKbU=@lG>*
%n<L@IW^&M[e_%;s^<CM?C[BO(7;eICG8>5VBPZ$$BcAJq]eI4+O^!q&[l<WSTo8TOe`,E$=+\\9`6dA7Xn$A&QG!qAiCc!1EG#.P
%CBY'UVIj]>P"[g;5:bGXmB0if\p*c6p%%PFSF96Lf\4m/n_-)!El0rO/MsT)M8HuL.`k3_QN$!`38@L2R!\l#D(D,&9"YIFrH]Qn
%AsAYIml8`Z<8HkfY"5E(g@]+A2o\oP.$h)KkU(L&cC`k6q]0U]?GAX%<q\3'&hFo8WNH7+k8*4IWqj&N2NsfSVk-[!74pKPb6RY)
%XVoG:MmfjbY/$Y]TgTjRd&sC<X/F2slZB&XlC?*WCrW?DA,gs?Mq9XA7/=PrZJ)4VF^bR3bZ&H1\^aG=k,sBF3B*ng(PL^[I5MuN
%SWRkPp9q'G*Ke_(g>Y%%=a##2h7h?d-3YeuNVrO+?0h!\^$du54,+mG?55W$q!`i*dOodsZHLtu7F\iugfsel^H3HCD]8gk)^t0-
%6[.jF14[*!f1>I`E4p9hm2U%k]`NRbBPuA?Y"Wnc<B4`^PL]%ip"CiP8fA;4Mk?$*g%"HR&R;BQb1$O_oZ8Wsg&CpGcGps^lcj((
%BeoTI\Mq"J]IZ6Kq/8@_EbTsAUCCI(^XK:5rT_Yiq<>?Vjc&6od*::WOS^$C81h;I4cm<*D<3o'^1HF6pYVln%tmg&4r)OFT;M?J
%<j#5&-fs&e]\]pn%Rf9_U7^5d/Qo\-neGE`M'P-cE4L7o:E;KChbV4E$CRB(YH@&m$'fJhH'bkj>65'9i(=!NV-^S.b"2R`ga=pS
%m.NG9X'=-0_J*F!-M$p5=T&-9r5Q;pP@%I]9'NjA^h'dnWOoe>DUD\3WO(Ye!mStpL"8KEhjh's42MWilVka#](*3cVehr3/aGpq
%p.rW-Y@j.`Q(>ufZP-[dEQd%i`(q=;l/K8c>ckXR(M92HiAD%t-Z>_ZaYj!2UP*a1S`Hi;hij)jf6)+\fRnh.Ctb,][clu@U3e(i
%I]VY8ar3lcXH-H<YV-r2*CL@aDQq#h)k5gU2o7XW8JN5j&K)6""@<2"=`c>'.>8XpKbJQcf2bIY;)b;1p0#6uGO(NAjcbEnk*$HN
%DHb"d#p=/]fqamQFEA]W2lk!X,im(3L>ArMTntJ5nL/ib,GP\]cqPH7kY4$D;<%cj10)F6=XS/W?V+1)f3?WFE4J#\d#DprpF'5/
%TZO)C0%t+5Pu1^dnjl%c=EuQQ/#&ARb%8rlS?I&B/)_U7,O5rk=S]2U]XG'rF;%F0H5i[=[&bP-Gaf\5'AZ<1D<mJI-=Xb-h'>h/
%&J6[qN0@[m@@>YbLe"-UTqoi(n]4suG1031C_2X?%@M>a!M%?;nVqG7O8p*fkjsUmi.OhY>1`opjb[T*Z\RTT76q3[Y+74OK/gW0
%R3FJiMKNrfZO7!#DQQW_=Jt>o'lR"bmkL)8EpF@87@hh8(/*t<Em;44T$D2U$:idj;'EE\2iG"\WF^59fLMV=o$F]a>+LF-KtSNK
%fA]2/[[:X0H;0A@d,+@K-Vq*&"7)a<lSul[`rB]?9tR_mP&0+G]iP(:Gm7c8PB/)/1)ds\Q>K*DB+#je,9[JiWpBWVDsSL4H-W2J
%8737i\*rV:h9.B*cP)_/@mjkGNh>D'^Nj\/ZdZl8[^"93]ejfh)mf3*DU7c8?"dhpn+(ZESb`3+\Shs">^Pr%V\bEEDX?i\XN.q;
%rd8/?b>7#@s-O^k0(.T,\Xn9Hj;Ms_q4%>QBI((e36(8PGr$E6+)UCnI-'K^GInF=]m5%DhmF94ipla[7Itr=G4+Ag$]ick(9&a'
%/4e=k,pK`RF%iTO+uPceQ1uO;i27e!*IN+n[rgaqW4:.rC\eDL%\EZso)Js$9#o[.Is#o"m";L]EIqJh;>UaDhOA8+R%&Rmfm?Xl
%:R^OjhWcLB^8^+s0N?YQgA5P/IO(uTm!Z&9_1)+R7pQ!p!XnU==f:25#Oe5>I.[3VbI[CsY]l0$UcdK1.SS0@3[<8BEkh4^e%-&X
%Oaoo?P0PfHlLerihi2B(kd2:)2BVt/.4Ss-qR:%I8(Xr9]tT!dl;m\rT)8EJ^TFr02OI#'5"<FsD4SFcm5(`RnVR/4S%CUomGWgf
%HMZq+ojR`uqp4@8>I>jHYD^;2(Ot2lJ+h^\n??_X0eS#Yhoik0I,iq8J$h"u:[YlCVeqZjf48cJr+3QHr+`W@oJQ[Chbq&anX`G)
%;a4,-O.NQ23;;*M4+B(:[hB3V?[_sWm"3:Ho_!>-`g:VqDghWCGEM/TI:4edH)ImIQTf]pr/[JAH"H_<p\XHR<daW9jXUfsQ$?Pe
%K``B&5.eAAVI?g!C&Mm-NGGZ*hH"7D&4/U`obQ!+?[i"L]rP5+^&$!&:_*%e4K%$&0/mcR^F\!upBTSTUC/F-`](B@j2,;[W_r.9
%[&XuQ2o"#!^F*gX`p3Efbr^-Pm/6S@gpnrmh7M6us3H`is5EloLKDfLp%]9Frg1Nh=8pi?GMIFD=.T3=rm,G.%Q:J>\96]th3qP,
%AbGL&0/)$qVUXIA)oHJNhMS6!A7=QQlIM:T55ssBgN_-[Ch%,]U'a(D-YMr+bLX],YE+I>5@&Gj,[k8/o]*IA7Ut8.0CA%m@s"X'
%GkK+H*7CkHH9!Zs^:\LSj7mT+ZW<^u](*u*n(p8idO"\Q=1A4^3e,\N?Sg<JqZNPHQEaRS^L6+!HEZ\L3r^gf8oO_#mp<j[YUGNb
%X';47Eu.N!kF8Mb^V>4S]u'2$3'XqUL6pfT?,([^geV"#MpIIRfC)X9H@DoTNd]B9$"(cRHMCrqT@Zlb?.lo2p/@>#G2u0f0+@:.
%XUhnDIX(i2Q>Q!OO3UMSVlAk%ela@np%%LP043Rd<W1ppC\JoV^2WhZkkeSF5"9M5fnf^((JMJ`k44G\nk(0hrO_jcqN^re5PfW%
%qr^CGfbQ&%I=5nsoC"=sh"p<:gBOOKeI-`M]@7Ko]X[q!qmWa-qVI"BaBYm'j]9-D[C(2L_(((F-MJPC/&$B'fk*)Qf.n>:X+/p9
%GX[qQNE9>RfA?C4XBRj#FPZTRhB&k*cCmr!fghNm*^.*LmZ-/7/jh;d_D63/*TT&+lH?#:-[qnaK[5/CD<@%fZ%)bDo+4:''05mO
%+JX3.#fBa#h=0C?+70aZ&"D[gK_LCG]2,YV/mZ#;reKYm$Uhp,=hg<K%Is;k[hl2pFnt%:o82,Pmi/V/ak=iRJ%fu0W3%*ncU0];
%X6'12QS6=%I_>H$G.5)6>UM9kg"<k+gZkP^\TGPh]CO.jXm==H-4?f0K31e8E:)cVio46-h8IY!^!AXPg&0-S@X27bO$7e<CSSNm
%-a`nIent84lf#`#G%O;$j\)ZC4Jsb"mF1NChNl,,o@$63^AmPXhYlhVj(_4UO/M)>,5^N7c^nIWo_7P<0:1_c@_VENmen4SrO)1/
%G@`Gp4h@/DL:a(]5Q9ADIHTtG+(mg[O"]AE1j9F9G%7A/ApLt:jn=!M2mLflIes!:orme$I!ps./=H6]`9_ueEU`AQ_jg1"jhF56
%^L>L'r7'jPKM-?"?GH!::"?Z%bMR_jn&]61`Tth3PfDV\30<P$kT*(&m4G^AdAuqfs7rF0cda=\42(Fc9`FsB.j)CF'R]bBqdB3Y
%a3QEhT3#`58*%NG_u?ihs7"U;0.q\DrM<<4j.G1T^@g$C&"d2*oI"R</K3K;2pONg^]*9NIp0V[lLq8._o3S4Q/192RuRC(+$Aqs
%Rb)KF?Tu7(D0_@)^L$e7Y,O4lqW0<u_^F*3TC?4l;)j"HgIWSD*.;r)d\flZb:`Q@a7nISs$?JZO.DcMAUf?lZU[seQ(nl)Gc/sf
%XfR#!kM"JZRtmX8\fSSqGb;0DUQ-bIN8oGTQ]4XNhu@(cKZ;ugq#5X7h:9dCT-%@pr9Rm_Cs"(F`JN@R!ci$nb8dD<;>L108,#bl
%#%'OB2kWsM5.`VWffiS8[m'_1lf%[T&MG4)qW[Qq^%ZV3>l4=)]F]M'p%+C9hj\KFlSIk9r3)`b5i]bWoipm%I_#IEg;e\J]l\Dk
%jdU'hXSu'G4EUaniVPiYr"a^KfY.18G8KUagR#@_qY@S3HKO^OR=8Dl%qHj>ID<oP^O5hWf9uuIG=:N%nS7aM-b$]s8*fomeZCL=
%\G&0DNW#um9>A-OIcKJ[hoWG(pcZ\n-9OA6I]N!"[8dVG[k@QYQQLX%O*^fL8t0/KG90@\=3iME1e?JBXLK[!b]d'\N7Zojc`?3'
%"TdnZVj!IaIc"fpqsSBm4.kV$]Qr\(R1!V,[_eGVEKC'K0#jqn^A]aW-5E&)"_qiAGPgZY3U_R>+(t,@Ep*D'0>G2&:B"#>f?a#Y
%HS!Wd3#m;A52Q/!S(HNQHLKi]5X/$2_:EMYJB)rS"g`CG_Umu+O6a8nIrJo1Uq-6;dm#b*\T6`X`m_-;]arZl,FI(8/Y';Z5*fO3
%rb+HEo#2sDgO22YS/^8(B?jO2KqiuZah3A8&^P<T9m^VjbB!!OE*JCPgQ4+=I/`pH=)U=\fKV@>MhgoAo8iWpq<chC(qI3ViOMb9
%^]!BZ/#tBFl7:3Wc$*K5C_df9QZo;Ho%:X!qr[$">;(KA?*SD>X7s)Pg:FlpiKola?/&UGf$',GhNOFT,Kgt7\qSu5nabK5k2hDG
%pjE&&Zh#8fqU=#L_lYR5gc4$ao$!N&I#6_6Hft2P30G@?s+:i2SLiu#01tslM-T`PSSuuncTAVno]Q/>eMCS!gq3LTm(IW)^2ZB\
%H*m*h\f#(o[)8d*%G-)#[sri!$qJpI>E;*upX1FmIX2Y,rl<&\Nh9k\&F8L\]=@0hos/>$1*+feVjGlE>P(dScMY>CDETtlo_J+Q
%Ip!eoM&.3qfY)^LmX0D1@t3%arqtU`pRZ4b]Q(;5RPa]$Dgo7slKW:P^O"*pEEZ(]K%3/FnIJQ9M2ZNAlIF(qd7t,U5JMMGL?d'P
%ok4"@NFL'4a^=DNe]ilA\VVtpSrAruGO)`T0<b"Aqu264d9/[F4lfAL4UthEHMR;PiV_X%Jms^Jrp?jZN6d9GlbfQ;Ski%k>eV.!
%?,@!Hf#LS3mu#ceeHWH&8:L>ErUB?d+-51?UsX)o<+V1B,-5\KY(-?![2fN@hd[o_qZIYCG3d/[=*D@9qsi[kh8A-Zc<pBQfIVeR
%Y5E>/nJtJN<ki#"5sP?#hYHlcht;`6]m]ROA&QEK0kb3\/fn?PNG$/Kf4WDn8^G,\EGjJ!XXF-=ZM38ViQCH[q9ar3lW,B+i5mXE
%4H`Y7ji?nPYBE*n?+"lGDM(SoM479(j%h>b^[UmEnL?am."/S>/R.Q!^asZ?'6#lg+('I>=5s5Ah=\\YLM%B.Xi@-oq@B2<:53.B
%fo@auHurroe[nUH]kMlj?YK:k/-kl+>gh,:RP"8hEr#-_F!&gVB[K:u61jO$5?WL0ffReS#lN@b;uF#qjZ=!.8ae/!?[oW]`OFH:
%`XDP/g_Xl%n4"OelHd4nNWiLFN\?/XOJ:#m$U:agG`<NrqtZ46R6p`Bgm,(h("n#u5*<O#)ZnNSh7nkMIdt^=cegC"Y5J'DH$&e7
%o^/*&1@U4uj[_$@A)!m>A!=.*#t"6cSU^!SrG)Aran,JE"p2,as*Ylh*LJO!*f7>dEqn_Ke,>V'CV,A*H8sHf-XluCjmJ%^0E)e/
%$&NZn`NuHma<.]C6).5TN/6E4fUm.uLBm9&W1<$4cT4\r'^.PN6N<YTkMEq3aMY^IUZM$Q_l7"7#cmQ;mh(#T2"\i'HbORnpuIKR
%mHuM0,93cAHEm(fZ$m:`qo\S9nAV9"lg8rtI(Q]``QBN4BfE(CmEGf9g-td`5`$_iAfZF[A#leg\n3ar_HWYbnQQAB\l1G3rD%dK
%c[VjD7N9AMNCKl?B87]Q5(^Uoa7PsAaFuNs)B4UPKs0[ZCM<k4H2T64nb9ruC\OG@*ULSFHI7q'f&cl+UP#I[pCUGNq!d7rrRXL`
%nG<;U=>#"dkDHoCrmf3*(45oKZqg!PJ,WnoMNo$!>-iL_5P!nL\=Kh:R)EALo@hOb-d`U2s8(sKGY3O@rZ8-aJ8>W?bmnHo:+*S+
%Fsdg<!q>.'&AL?]?`W^bcS^aM%6o<uK0=^cmb]O=p[4[Rm`C*p_t.4WhNu.A:\fXhIu5!V,^=-EDW-1KrU.)S.[q*a[55[Mm%4M5
%p]%Y,og8)R(FO;EXZUro/k]gf%Nk')5?ldpb;91X_:h7:4Wbc[q#=+dD#_IX5C;hen*HV]^l+9$p1lkFAO+$CE]op6^47G:_FF62
%XdlmZ(RA8R@EkA<l,!Wf@;L2(:?$.dR/"6<?Sg&a09AS5k;=E(@$foti.k6SD?'*S"^X<Vj9%jT^N&9q0D-#CN?rPhX<au6":c=I
%p%gK9pigdL<QbknGkCd\ZXWLim_QZ0T%Z/:kL!Ic-9(P$@JK2ca>80YO&'&d0-7cN\[M+rg#;2$,X5Km1X'+)r2`?d]KC&&q;pHh
%TNIh0<%5XbcZ]>9YiC3s?[L%S,$u<RJ+2`fFXph3XSK4%M=ar+V_'ZeHhj*7&M1W%.&*5&C\R=_,pQb>/F.Brp#'#taE5R[)PV@h
%/=V%bBMREP4[rcG52SR^IS)iYIJ36q9pbH9?IRu_1naX)*@0G.ml^'.j0^!.j0T=57B[N2_<'V,MbF)')\aCZVOO*Z-^&k6XHTh8
%.-Ka?PG=8q#m'So<\=acbL>e?`9-O'#3UX]4Vr,)aTBQ*r-'e@l'buRmI#m2\#"P+\A%hJ(auSW`hUup8/=F]Lq%@GbQ#,V?bA#N
%H1CL2hfBb)iNo;e#Q(]eH195)=8-'n[Yg?so+qoJ(\I.+X)6;=*0S21QSK]`Ql6Is5.Su^a4'2Hjk@&S7lrE2SGq(,(^YQcL\k\M
%i!uq8-h>Tif<cui!j9MaV0G=#2nj^Qo3h%+hIKGq5<D>Q(+;Q\lU<dpGsi;@m)>IYYYFt-Vnndf2a?2%q;TP/1aU.A]4Of9@j'`(
%`PdZt"W2%Ylg;lp6#,(LEJjGM[2@5fMNI`4Vp$5HHa/?fi&qX!nX<7IZ0`O%IM/tu3=B1:FldDRC`1d#?_>jEbGS.-MqZX"MdFHu
%c7uZeik0YaGTW;Pa(Ani&]11rPPB+ECp`iRE0=(1@QBo]TD6[1`i!Oj2Z:99K%tYFTHXi8R^>e=[>eK8eM)HkUi`L8)KZJhFCY0R
%2ehY:`ocsmrKc^=fYS2;^>=5,8CmgMpOAM?<fj/#0mds<c?S/JkgRpf:Z0i+`:@et6[[.&I4W#&#KT[MC[g4.3Ne3lJOJu'^RC,;
%X<@1\.epbe-(o5Srnm_8b^ImlO]`<9%,9+<[tWYKS0^]2I:6^G#J,;<?f`)J3ZL5-q^W;7YN%kAre[5J5KD[=17`[YOQK%TC)?!\
%J)OaAb$VnVffrQ^Yk%J0O$=.*&,mo@2uiRnX%;KUR6;mb+qCDX9_gEBfNtX].%a<sWI09D_\5OP.@'GKP7&1;rf6(7fUlbA6i"1G
%Qa\%)4Q!biiL2=8rOj!p+m%+G&_sUP%:at]KaXAs0Gf.er!GI`e_uF!HS99ZSpC#"_M-rEII7$`f;@A&?Te4@W*Kpo0u*?B?rDu$
%Lba!K1Y:dYToOQm`Nppgp27Os_9%,t`a--3V(<A8RGfgucFdb^eo`_FM8?QKBe[g%PO/(R81jV_-XC`cTu[j&adp#]met+%EI[M&
%NH\l.>S;6.>10#^U;&Uj6U.3(Drg4G06Rh3Sl!+F->mbOF'=T@T$j[?Y<BBI:@*:M:ClmZH\]qPUu(=^DBHXPJc1K+l=]gZOg@kP
%"Bd1i>A*Fqo"u$d`O24`5Z'.ZE+St-cQ;N"(r$h\b]<=cVQ;ckP90/3aI-jb6%q135$P(C]9U]/'Oa<XZ<qZ2j]Z)`B\LG06KI3@
%SQ<tBESBr3`iU+s6?/2hZE^[K/%>#m_Zc6@*CX\ZVmU&\K?/lr5BjQAiVhJ<4kh%ERN$:I]a]-:`l-`RY\&K2XWjpY(g(\;>0?M9
%Rqq#cE\XZno5AY(B),_sDTRj?H#KJKiDNo2G&St47G&H)Lb$0cUG/f]=VNBW!5:9FDad^N/h,kek%-#>*nH)*oGX%;<!leW"6KFl
%el"?%;ohSI)ejRO\Mja#[4q<7PtjVof=7anfUOAojaJen68$nF:oK(VASr?.s0P%1AR@j>QiEX:Y](:WJo^cOft2AP6KIcn1"+BU
%j6ZLJGNjr0ja`d4FCqYnU!.sK4c'uXSc6Uu9./cu75WXR95d\-0pCA+IklN*HX#K5E:^bJ]ZB72DL5g7q-Q5Pcet5@Ki6e*f^M).
%fdpXG>+CeimXjjb=`C[2\_C@m$TV[eejA^<n()#DqisX%]1pS+_3n-o9(:7Jm^=gN7H_3_U)\hY5mt6XP+:C^F98ES886=Nq,_?k
%"LKlVI[*Z98=bT,!Nin!k(Ya[#;X,E.0UKAQ.]U@J%P+*gMKgOKd"]bnDDl86IqY+4*R0R.Bhip;\^`lnTf"2WN^/`&02c+EWm^+
%[pI4H(bQA+"H>l=V$uO,i>=1k)atSm#!5g7A93"]n[VmRae^h[$9\b#23flDE(V>a;2AH6S&E$WV/GX+kqr<kRohbH9i=53\0j^A
%khS&88nWn>J,Ikj_T;4i\))Y1nh"^l,\KJ"UD(r-fm5r;S2J^Ik.CFRI.)o0naS+X3KPp"QY"9c8G4qF>i%qg4]*>4"a\cM#(5Il
%b$.N1nif[ZaS%0Mb:m@OYZ.F_ZEd%Gn-FkOWI(Vc<BU>Q(kSe'hE\m+2JnJ^1^oTjfgWdfb#3=YWR(3BKlGOe8>;f#1cDM436'Mm
%+&*L6#A;Xd.(NCJOH;dh?sP:hQGP&q!i(MV8d?;_m>`bP>l!+7+<NJpZC-\hIBh9@fOBe'el"LQF9mp$Ha@_QUNF3D0M96J-P7)(
%VL$j2e2`YF58`c7md]LCME]T7F),f<ju-.L/XA[QUgl$cc3kZ])AtQ%3!Rg,n\s*X(S$eG[2eLqEGNt1JXPbJT-kSUP:K7">CTOZ
%g[L"O.<8#IOIWo!K!.>&dtd:I^6t([;G0Fsn1:t_E`7Wp8sQ:!Q0>#-KuTEOVGS0*C.Pd6pnVs`D'i3)Eh01tT(fc&d[O]]ZW@'2
%R0p5P./lel&Iid=8dJh4/pgM%<_ChEAKO"H\Cu$"\.m4ePUV5?[,"8ckNhkAEhuH!gSRjV1IMfAS2\aCjtN3_oMVmi1s%I%$<jCC
%$!?g)XWk6^/UQ3)C)Oh#(/5gj!V=Y1B;2IS(Mib.KIiA1Xsgk2,Nq_Bg*7j&/m<JZ2Dp1/^F6@n.uT#^.;d5,S85+rQ_Q7`pMlpb
%r$&QRjRTG8CoI4d\/_:Ml+1U.W%]'2<(&SFe-X4E6"O/ci7r4BeAaJN1''$(g.[a7%U+.$g"09qcs%B@RA;nt@W5T<(UW[rZm*TM
%>5CW<2:5VEdW0WBhs`J$ge0jFKcD%O9Xo7`982^Bj[Dp<l!19N2?uBId4^$jDkGNKDh#RMYM3!EM.((u8h/>VU!;Z4WoW$%6X))%
%.S?t:$@"E6\f7E,WAC[TR5TBgD<pMK!X(K"5D^FCE%5Gi6Ks9!PRiBfnH!]96E?2(a/.Gb-"hG&=DjikDbH4H2%60:'BSLX&\+(<
%cqI-UN)[msV[':C"0#S(/=3u7jbX62p.5^P]ZX"\PH2H\X05fk=cN`b$TqfpLGk;u:0XXZ7Y"J(g=Re>jP7B/bbX6C)^FrpWb'pg
%_7<Eg(BI>K4rO`mP74ma&ZZO80/pI;jm\-pm$o_+mu1o4:IPd_rheSJnf&Aq0j-h`SMeEFghXLb79(.DhR/4h-VGa3h/[L5EP.:V
%\;[WHqkc7b8kP@i,aXRs\'enDbJ+8<)7\.tMds:<!X\ZX*`96qFRG&l?oGJ9Oibao>/MY=EZ+0d[5fcMV[S>emdWL5Ust&ToZLf)
%<ZH%P1S6oVRbCFHQ*)m7P$V>GMXbOpbPk)DkRV2e%+1"K2XA?q\K`B[>/bLqNI(ab/YlX$,e$Q4E("^X\P2H<0;E/R1KP+8^=BL\
%=F&c1$Fl8`U.<7O1PsGcdFjlHZO`%cX0Jfjl*RNT3N?jNZ)#AK:B+k36LNHq_cYl,*>k4*:o2Fi2Fd\0P0b:>j'4D0Mqema\Ig!4
%]Z+CUO$TsK&[t]0(K/Zd!DA\#R^)d8$R>C?>[nuZU:YFf+d(u"lYqcJ`f$?j-0SLmU/VP4XRJM7"Z1MVQc2W;SU3O`k`@eq-aC>m
%LkJUN*/DueGNQ/ZZlE^U0:%T49']LJALp&@^[j(uO;r,:[LkohXLu`5l&,o$dR]>*E=uNC'qm)[f9Sh??":9/-J7C&+O%4?H+1(K
%]^B\Cft;2bkU!7/TL(!Lg,>-=o*1>!=FhdSfb@=O,6b3k:+D:5dJ<MJ*-sDL..+1Td3\[d2A<cB$XCsXK@_9GYd,Z^BSur(b36Ws
%aq]Xh?o(N9m,okAo/F0&Q$ZX0]\]S&=%p<n;!u#g7s8q%$DFi(RZ(':+njnAqBP/I0SY[)'>E+Bdp]!V<@"E#BH)H,DGA5Vm`4E;
%'f$1d"\G+>T3]&PAt%qR4/hBne]X$#9'':\D,l*;k,Q143=)!<.kI9@;QC@s9Q#^@/Lnru-a_6GQR^Yq\[LKre\bOP>U="Z+c-O6
%la-S"(o7bB&:H",.Y&m;aS+@9[F(D/JT7j"+%<`0g.S)P97sAj1J1,?+VHl)Ja"R@3S)8cQMCm'NhtC8qmeUGs0=2Gd2cY7@^W7C
%b-Nt.[aKh<<.llVLoM/0g[d*V7MUa@:m.*sf#2S:,P,J@e=]Wf_\WMgT!Csb@U\%pXK\fnVDpL(f&2/3]2j7.jjDa.7c"S\nldOb
%:O*2IU'uA"81R!/cH6O]piSA23TFR^MZQpKYO\oKF?6e21=J^*+'S?1=+pK"]%g=M7,b'pg_d0GDAB$K5e1P0Y3[a&4=Vct]4B[+
%bd>dn(Z'PiaRO:cD7f0D$lF,O78+.r\i6K)/rUN&0DI0V)]2#oj>"_$)rH[gR5R,+EiBtT(7h.t7\os?j<0m(4,r"K]/H-V+lXQp
%rX^I"Q%:^WFL_l`$,0Il\'b!fg71KH`Xed!GX>kqWi8THI?Fi&L@hnp@-6bVSc#O&O@)iEIf#oV3qp!AkfT,373AP"CLHjNK.Ks`
%S#0e2hGOf+JBg/3&MVYRU%V.)TN48*`5qkLUpUr(]9#7EDE/YDVlEB]c<giPC=nXjLLr\[L!as;IObY/'7jba(qGEa8BnLD[,EY#
%MU(,^D'>bjXf0H/d]+$;`S!1Y-UBqqUh!D72lSdn7UnY!8Bn!>i_l!2nYU6(6)"tFPUhgIDO0BtY"<[_Vk@O1&6s$%@YT9n>]_&J
%'h\F!'FCXV%P)6m@^(nM(CpURX]<I?iq[`/OcgaHCTg2P`*=7PF&4Zi[c0Uen2$Nr%RMC(2u,WF/NjJ8WOBrU0#(FRnu&Z,R(3D^
%mkS',i&R.=OfPNSpX5ig@r4Z3.Wb\-WgZL_JJYE-3`P(h\lAoMqkPQ"l`u1SAk['\\^%bt/"sE1@h\8d((aIu=l*m#m,d)$jUr"i
%mFg5A1bc5,UmKZ`haGl%Q$"WP;$44kU_VWf!O\b)5fN-M/JR/5.ShU3F)?lKMqX;FWQdD]WA76oE\b$?+.@GHEI+"R's]$2'BV'1
%)grY^)8\oXn)rD<r:=GS\g6B-0fCgKc>/UlA/^m?6=W6rS>sfS%$spsKksV]Rk)Cl(a^!<S*95!jp3]m<a`_Cm,P5T3S%eqai9:p
%*()/Y+fiI<EA#F?6]2*tAF<&/YF-^upUJ5n=Gu(Tk-bJ^^^Rfe'5"<P\WAo45l6MVU[)<VgD]]l[I0bnWK]unYpMO'&/uVNFgT#n
%F3lD2+(B*+S$qfTC(MRm*q^,I<WlEO;'DtooeeJQ`5oT]Urh<dUDQXhE?SEp:01O)U[maoVM8+pEok[/5EHd%WMfmhp.9+[m#063
%LC?)Y2k,G#;17NPN%7WBc]B'?dg?\Y99\m%`6;o%!rdhG*=4N=FT*ju-[!8beHtsLb(!_JC6g\JVC[GhRu$*Z=/t5c8;XH8FQ((3
%g9EcY8]C3X3rd\H.[rP:g1<5.(hcAC]Ie,:%%[NfM9r]b>sK-W[MHq([TV*lS*93#gKmhfT1Djar1Y"h6@$_hmb`sQX:Tf6beUf#
%RPYDS\^Z8@4i;*.e4+'mqP(\fU)?.X*jgfJYL6J5)`Q+[XmY[,lQV"*k<["m5tM6NnElFn)#9LK,#XoGO(*!90'm9)(?J$J/2uB+
%(!c*l,DSuO:!A=YWP2`6A(gY&s)K&'s%l1[X3Fb:O9_n^/\d)JO,Y(ddALX]b^QOM'r"B8L!^^Um??8fr;-c3D5][Vfm!FRg+B*%
%#>snZ5IR1JFdmnq0$W'LQ5Qkfm8u9k#!CL,k9":[YAE3_._^f9)4N&`Xu>=[P8qV=;-=1m[<?M!`K2MfRfK.k08u;W3r_JM`:BT9
%5Dl[Z./uV<%X`F<k@tkQ2`uP)KhSgi&hRtqNDrj\IJ]fu3rd]V#@EtZ6_Ep&B;T\"eRk?L[rR,E-g>@Q<]>3*OSu;Wi:5OHMjYnQ
%q_D#<T7l^'=INfZO'QLr1jI7nh5(uMS#*+;"IWiUT"b"g'QfZFm%#KlcF#C45JY%Rf4GG_*@q#mJrTN4);E(XRmlm=5t,+k)?r9(
%a@L*#b]8-2Rr;ft5KT?#of'-T-.DD3h!60)HU]fiZ_B$E=k;78NI?U4Pu:WjqXt4IFQW*Q:m=Ir7$r/j6&7!?E+A>n9j0#W`19LG
%?G>YWH`1ndN_7+(Bp1d17V<eA-UoCK(e%)8;Qj?RT'i+HiSXshV@kYnhY]>S>rr[l'UoYL\%7SYf0Eh0'td5Yg4ZHk:5T^tB1d$8
%]DP3RCG>t31CV#7HbK"3qD7Nt@>90m=p21+[TWMRFdE[J3Eg;"7S`<'[kVFr$Canh$"pp:_Ce5P+'e2sN5qaRGT34D$ro=><bRo"
%S.FnhJMq=oU.cc3&%^Se/;=))Q_4gbh\T:"ADrbVq%ELco@1cJI_rQJAK9Ec+7qKG<Ad&Ig0-$$qWE#Hj=2>>JM%`l2_]8(!kYWf
%%!ZPMBZ7gBg4J^QP=Ystck@?6?.6`==W+Ngl;S$Xr4+sd^N3\\N2f*6SS8sQ<NKRH2U.H/6;:,FTJ@#TGNflHn=U\QoI5-Va,7h?
%3n(B?N4#dM!A4rhXWm%ejR<N2jt>WFB%(deS'hH:"IH-eR]A#U6Zd2<cSX#DQBMVeg0B,lA3&0/O$SGoJX.*78#/&Q;W4+kQa&<L
%^8d2=AXs/>0Kh?tA@@KC4Ch:].R5dWW88,fi7cOiGaBm=EeI=M7>9N.\W;Y>9ajod7F8i3m??6@q9Lg0FYr4SVE)[VA*&4tg1ec4
%H^o(4kLL!@L5P@f8tV9nY8i9gq=,e$p@/bm\ZAOG#H`SY,&Kbdm)D^I.d!BjY0>PZ[feFdY#WP&[L)YKD05I\]Odh>5GCA>AKNFY
%jmq$eJE3B!WKRH+1ink]8SKT<IFrJnUuHV4Sc+)*#aNicTP8F0.WSM)![:AqUe-9ZnZ*D1/:8,g;LlSj[9!rO#1JpX9H0ONC\7j0
%ImgaNA`)L4;p@#Es3UuV'u![UQCD_)UkV>GhV2aBEP.:V5PuS9lJ`YqC/AAb$+e/"Y;JgAWF5=$+j7_\Ys-9h>0>2A8oa5t=DhU/
%?Jfd"j4'VjR?rQ,=B.bKR5c=__HRa)79mtuhTeCpedX6ko*oF2KGI&.@3;F!%dIk5H&"i)[0g$p.OP`"!EF9IeP$Y4:f721:f1,(
%pVTZDSU%c0>ZPq8:t2,9EaRaOcP6p=Z?m^f6CgrL6=r2XPG(s/)Onb?F&PD<gZ\Rq*T!_90%<Mbb*.\_#pn+/1RQ/k?I"2k0KFc@
%d\Jg$Qmu%PVla<Y1JMub7G`SYSom>+lBH^A`b8mFh,:g+&h7]uo?8>@S=3.;+QOEJ!=X3=CkgiX2EL_[#d6ljW"n2XqSYHI[0jRs
%-o6)XG,f6dLeR1kS;"L<[Yj)AZC#@#ZQH4EW`0jY.oPfoSSG)E$jAH<e5fON6a_%bGgu/V;W+_kC?ourh*.NdO`roUO@@MGY"A9V
%A!&ZAWt7"[Z%D`[4(ndkPYIlBL!ter<#"'e%d)I^R>2$JL4DOLn^WpRbB;0u3`Lch*tg&&bo-r,;&YKmh.="egg7PR)X,BaVl-E?
%.X5Q)k2i8rl\edPrF%HilOFgA;\0L!(AhP0[CF_A\bR"%lOhHj)Ina#*Jb)goq[YeW%atS'$:GBFPs`sRse!\S9bl_o=7#Pbr3t;
%a#<Q.Fp)Q)AQ7g^[-1er)#Ck?-j@j-?0#!RXb<srCENU,Epf\#9H0Q$A72P$"Qr+LU)N?U5R:ZO)4GW9GGo*^atWHGbfrT.61]4V
%niBR%A\!MWH""oHO!'b"G`San)d5[kBs==.lR'uon"Du-7>-1\+)45/Me:]\R87i-ng5&N>@!,NqeYoP!#9D2K]Jf![0f!U0hM11
%9%qU";K9@/`da6'+Qm-Ge?IL7>"-pW"Ar1[mVX\AZ!c>VA>PW.J'a*u)Y+e%Sd2s3[SLY5o8fK/d[Hk:;<:"ernQ(:7R&.'9eGoc
%)Xr>U\u5u_\F)MeT?F%iGT34R$o+>lae\("%@n6aLc/Z=qYOgA)iP`C,3Zhn$5h0r<lAlbQu/S(0AAOg72E#P[7Jt(4YQl<UtC([
%?/a7s%R9`'VHV#q6)r[U^,2nZ>T95^]W&il,qOYu0p!,MQ\6T-l#2e`B\/?;6+0eXc[&I"8]*P<ltAbWD.DWk.rX,MI>]rSGegp]
%Lp`Yu)p.."C))BTq6q:l>6,VgId%+;9H,5V<l?@q)RZ:8Jnrj^bp.3*0E$kcb.jH!,rpWOJ(9I%2CMUG'_;$H2VURY*r#`Bc>"m%
%/um]nk159!7X$*g[4Of6=&`h,m7,63'GK1R6^)]Vg?@<^GRc`4WMLs0TY.e]5TsYa2.e%=l8<lDd\t^=AL/V*jaM<:QtrBO01'rk
%VDXN7$Pi6,WQ7)"C*TM"Ob_ANp#M*rbE\k[*h:JN7V/HVcFg*Q_,Mb`](RQH!=Dt``.7hf)De+paeZ-Bm^[1n=YU%oP658:g1$Ui
%A)tB12&2aX);>tL<V55g_&LP8)9G6[WuVRnlki;'_;s=!5nqrE8SsFadm;hkCAm4Y$H.ke2(C@[5@A=BXY"i^@A!tj-L7En7!^-o
%]::Y26tbCH&J\7h#YCSF.f7k:]#<QUf"I2BiI0,]LeuXC+;FpSh,9`?]lX(H2EL^VD\9rhC)!\5I2JZaSg+7jDf(YG%CK6[%B^g8
%<`hFs"oJa`G4<g7dFia"nXI@-feiD2QIJ0:Bk;BI6?s$u%Y1?ha!&sl7`T\_Ek[+M4%u1;W'nE)n.h13fP`"b.>1.Pct*(\,O.Pm
%(D2b^2o,t=DU>6C)0"C!M4$7_o,`Huog_ILM^mY<X0Hte-KXqfK*jR$f(59g;Au#.p.SQBD^WtL'-mC,g-Cp*)Oe#DZiU]81Q:O6
%emZ+oP0-_%E9#CR.pR6ib4diXq)1_9iSgG2-lsFNM`g\b`^ZH^:.Zk;NkPcY0%P.tURmP#4C,;%:MQW1DrJXr)`9g?.f5sIHE.$7
%G`ZjIJ5Ur[6>[h)D7X7j#PCU,08BHg52ShB5Lc&tD5Q,Mn-`W_Si/?M+/-?a-HYiFQ][NmI7G#>Bq3FbT?ojdh8"//(DqPB+ic)$
%#^B1H$igodfHGb'/Y<#?+o_R`6A3[%<WDQsJ^[L(I1'^*i+W0-J5)kk%B0,YK;WGI`'(L?V*4=D-LGVj6ZCD>NnL#5=ACM^45\<T
%(\Ct\+dLfDZ"MdcdFS[>m>Qhh61ZUm$6ZXa``TLV="Li.B/F5.m%_k*n>#A,l81"K1\!@i`F.4ai.b*hK!,0=.$c+AcM$hj-H8Wr
%!F-d$TFp:/S,njGSTdoh69iX*)-Tg=l'FkD9Bi*fin>hF`Fu5Lknt!;:gS6AiK()&:rL,0DZQf8?JZgb1\`>c)Nfh&Bu-;-HCraK
%eRYZhE(SVX"mV"4P,4#=&n#]o,Uc!dMe`qZ./BUs)2t:B9Ic&]d3fZ4?X<FbW(W41&)Y$)_)gk,Xjj:ll@!<IlMK=q<80cr@<Z"I
%SS=kF.NH:Z^dGVKn#RA`)?keO+XJoS]FQK/i@#X-#G-D)Z1aJZ-H?K!(_(XMM-:CqZL8l^'lU1QpRl]IR"ea1f8Ru2nLCEpc(b\A
%*#cE=)\j9ITV]=n\qDXN0(s3e:4]D\#$!@n2^P'Kn`rgUk)l=6$?0Oels4E8WW5NEkTT&]6lNH7)HfD@bMLUp<O]Gi7MK^3e3mYI
%YiB<PTj^V"S18L)@54"gd+/^a\=e0R+TsA$KS40m$QJ9(DdfSc/W@^R*"MThJYfZ:IL"4Sel6Au_0(NJ5V(U7[dDhDTrA,FHOtli
%gW9Lm_-/R>DF[k7or:FHLTQc$O@;<4nY?7i?V=\T54NHBVrGsb]&!WK^iePuQ#!C@o79pJ0Buc`i;2m7'VH@V'jP1mCoTTh=]=(A
%N?"DQn6?pmYem/0O)@n0C[/,*(e"US*/tY)H(Sfp!=FUPoW3bQ].+3tpJ7V?%^..K:W,H,h"EkIGSD\2^T`*VA7%Y,-))l[oa5it
%P)MmN)]S>/Sr]XM1ql7);'s^g'k0X@2[D[qIAm9ic;kMh>0oc>HI@.D6C<uZDdns]i/4QOkR\IYV9<UJ;BLGCdV^sI/K?0_EoV8l
%h80muDqlL0+qWn*khIBq/#a+u#g/r`00dn*CUDM`3qr_":Xs97kDe,O,9B?Qm;8&:B'GAXV]+hc`6&c`);Q!l\D]H4;HGhGEa_B[
%]].:,dHWZI+!<NukHSL$J^1]H'nV3*Tgr'n44\802F\3,PfpmO;4\NsB=eb=6$9TAh24,F_Pj&N"=bZCk#1keVK.F,C6Zbq;_9gX
%5(4;.oRc<C.3V'6YuQB!(d$-tNfidX6X7J,^b9`#COk@ue-lfIAm7R++/!`YK;$!=J[MdQ+W.mD/Qd"\p8EejUu[](%[F#rLXRb?
%at8XkepgP=67k-[(gt]..NS;+V+LJ;qBNa7DIV%dFP+JrLF<4Rimr1U9cA+G5T?j-A:a'>ZGq[Og/BIng[jJrShkE?Oj4de"`oNT
%`t_jZ3B)s#J7l8P9`h4X"fHRd6nb*q0$s%AHFi5Rr;i2<b&45nk9*"#8tfKJ#og[cDo$IFWbJKh/?+?FcHmYM9qb0CKtn9fZa.H,
%`;p-qDR3HOQr4F`*-bE5@]t!<PU"9(:!@OrW-=g8jD/#bpdt/gjs:!L#SI`=(`f>IDJD1@:7;;+BYmS,dYZI904sElT&KOIBTa6R
%SSna8%-j:h=u8@?c'sruDg[,6Qn;$O&B-/$3`V['5(W^S27ujcd\#S9Hn0DG%<H.qh2&sh6t2oR_j':&GH&SrUT=>"A<-Z123<e@
%We$BbH%Kn3dS40.7lQt?D^f\R&BJZE*+o`S!^+I>&NN4m1EAgt,Oc@mJ5rIX56RI_L!_[`j[1Woh$jJJ*f)#JVj-qa:S?U5:@S6<
%Pn_,Va%$iTM\TZaqT*h1[mMDWAh)$_V5Mb(L$uU,ELD:=)W4p1VSZ,LMn5,C)CEcW7`VDl?F:cu-S;,M,bCj?X8Pn6Ndg.0fYiU_
%5_<ekRfO6WB9($(%.P1p_fmd965D!F/WpprB!Mcj,K,)Bd`[uuO%a1d!r*F4.@"TM=qTX"/`b9ML'#ju_ojFYd*:rI7hiSh;`V8@
%=FQ3XB,[tG$6L:`#64G\d_O5d&hC!>Ft4XY<t4)`I.IO)A*Ld5)q[t=&:B4[B,V"Ki[2WC7Xliq31NWtg+oFmV(C47B9Wk@#gpLu
%Fo2j@gRuP_DQ!a>6GtaNY=!nDB6bUgprqXt@VaIt6.iuSV`hA4N2$VS%6%)HnMlI-q;pasFjBia];LoeA>M/%q?sUM'YM9`9'+Oo
%`>qI'Hjp(9d*%cSpJEJ<kH%R=c(ongI<-g177^"DXl)s.0c@pI6_W4V$bZRPMf(E[op!HH;25TJ\HZ=AmR5BL((T'eOK4K'O:?d2
%mHb`Y5W38%gr>F^(ke8eVje-f?5o2g(B>t_fs'^m62Y9e0Jr<^4rXWh".P5hfUaJJ)hsNoB[dZ&0cle,"SF1GFZ;eCmN"pWQcsL.
%oe]5mdB^c/);GA8B86CFI85Kc@&CLP9"gO:RZOq5_%%kM7*8[]*7T;?gOHEgoUNeBYgCk_>oNL&(+MjE+V&s[D3A`..RQ4K^U@@W
%:R%Oa>#>U\Bkrs#VM3(%Ag_uQ]ri.98qCEQUfM*nd%olPa,UV]3/LU<P;Ys)fBDWk>;^`nqpR3H[g5J-%RVXCB.n#^`3WTc!]rld
%2bahua2*Ye7/+!N770sZq5R0,eXQ-c"P0P5ftf=R'u2dP%[6HnoG=rci`_Hk9Jc]io^p6*9r-8i:\\6^SU`Q7TS9t('p@?c'T_Zg
%9+t=q".q+/&QhHeTjgQsW,>-Tr2;"Q)Ul)J_/"aa.I>)[O#O\[-6pr4mG-p1#A6aT/YGtuD!:/1)2Pm7J>gkX%k9F\gXmCT0Q!FI
%^J?#E+G`DgBHHV/Eu?2D/m3.LAT&u?FF"*3fd]7&6>D'iTYnhe7<4H#;LXT(GRqe4X,*C,=t3Jrk:7i.K%o[6=d;I'7!D(+9N>@g
%7&J@GKaKU!LRrG:FU!9eYsbj=YhtJD#)/89ciO\RT'<%WLoAkSAHH3LF_#=#2iCSrgQ#F)j0$]dei5C6d?,#?-3=%d..4dm;DYo5
%a#Y&KdS-lW5\KRk:r(GXE>PtR`uuN=g/rja8'qE/<@HRC$]]o<PaWp)UJ1Dd$n9b`/p=4Tj:_."b]&W=:gs4bMqC2_Me3Mc7'l>g
%QIH%_$X:,92Ski2pdte$=fL@0bg7GC9S]jZ;Ld^&>lugKpnVRaG!us^cA<JYLfU2eU&tNhC.d]O2-gVtU-A-Q<8&WEn!dF=L^D&<
%"!eL"+gtUcX6"4NoY;DlLa\[aJOeHBO<6>.ap[kY`ceJh5.IrX&N1s9]8h]C"[H++e0]$\L15pa3j`JhSRk2\f?pff[qfm5(d-'M
%JqrLVC5-a/),!!VNQj6iYr8"pY<YSbA#RK^oheR=ohg`o9#W_N?Q:O(.2j6N_Es&._lj-HWPQ5]q;?%<BWB`LJUD)J;?"eO6gU_t
%"lN?g7&:lr)9qI[jjrt3Tbg[plC_3[3].Ylp'L@]VC`%.^YnC\-5!0'SnL*l3!PN<!U<-[Q-^+KI7Bm0=sNPQ5+;M;W-=P=T,U1n
%P*-@CegEE^[0-S_]CqkRDg3E-)eod3!1F'SnO9.8o(KN#9Y@]in4d@ri>87@"<`%G"`:^.O@ctk-r1C:fQQp)!M)>_!B/KcT9a2P
%bQ=@n.2d`>pIIkaLA?b#BJaiCj[4#=:F#3Y6RAM(>)DF^MP3+%^9_%K.es28EjH!1I9AqD`3[hidjY9L4N-dLB<bH>O30lTL<ehd
%41fHlVe[8#d3YU/`!/]u!6`MDdjWD?JdNp+Ncg[:M,X8h,=T_fI#7jD0Pn*`r<Y.Kat_9-Pild9<[K@B-!5%TV30k[N^iD6fAPiU
%2m+qM2KCM^<n522">*i<5EY2%*R+U7'a==?#caSD#_S/K#ll6On$+nLSSMFmi:mtsU=:!:5dd"3LCW_nJ34WO,,p<XWTCkgW*<Zm
%aH'#m)U6Kr<2j1;%"!2C*KY<SL9u2-`3@]\?cp7lY=gpjdRb)Piu.]aBqXG4e:F7aVZJ<neS9W3qicPpL[+UEpoXPd,NV0nMc%+9
%hTk9)GGYsQkDN205/e<*%YStpep.kFMJpd"*&A97e)@p3+oB+lg][LoLA]-!W>R&P'7.S=ZuVG1d<+-Q#XP6#/+CH();f:0`FhVh
%3pt'/n]nCVW08Kl3k1"t0^GD`A7/Iro-f_N1sctf?O[$:l!R_j]SuFN*<"/<@./V#`Ld]*jIhe(9qb:*1\F#S&=2o.Y3g<2>qoNM
%(hDYgc8,?\lcaGU,h/Uh6k!EY4SU[@%!(]Z/d0cLDb^O^]2>i/&i:9;p+5UNY6XK]a(^PU\Gk4G)5a2sNPi(/;BAq\N1J3IG_YYW
%M9$`!4V0u_^[odun,,LBTh@%1jkLtP(k@[*%2`\@G<?r1AQk+Pf_/cfS4[CFUcV(qA9rcKdHXL-[b[=R0C[]d`1I0nBeWoU1hq[l
%Di\i#&[DNrVO-LjVWBS2$EBn0%T]HhXb4&[!jVE3<IbY2irWml9qBSZFd_&=9q^Z^W-=gh;f!`XL$`cM!,3Ri/DG#l?r@K.Qg:!+
%@_/%1dC;Jca7bIVbLB%:'eEJOPgEg,i%Rjn9`V9jdep%?Y+RiokY\cFr"<\3bg;N@j<RIB(WglU3KDm/O@N5rSa]$D['mD*qQ'5@
%_i]YH5OW9rRU"2agC\+3k]`V,r,bW1M!'EaL^lO%7\?ep]F-TO9?iZ_JJ[E/iZQ`Ea.3Y.-eDe.Q=tJs217mD?dLc4)'3P2*h%47
%1eEE>OQ.mQr@qX%!QgutZG--lbg>eea6IP1;PBqb-@B(,g`Ujp)NcDpT]N#,W55@F&Va$j(H+"!aIT(jEc!=U%XpaSL$F-Pn4mZ)
%Be$+)"YA>WLfd)Uh+*@aL;C-.bkCi*)>]n>UjOVV'"qS8Ba"9c`6Q6gZH8YB-<f7Kl7-jD'>S-@Oh,/[>c-@\7VID&"p"C]R`?pt
%EBRB6*'-V:b,tNu9>e%8qL^THX^6XRcoe^a!r7sgpp4r.KKOf!a)Mu^:n5&1T\.VC8W:=m16/,!1$UN#H$qp-QH=?BM%7If%1aYZ
%4)TD<5?OgXpX"$.Ue"b.5_83n8gpkN.55G7J%nCco8Eea_,aH%LoicqeIJ"OMW;&!aoT,1Ehg@s[2d8Ygcf.uJ3-8NA/ZUVm3`&1
%W(ceO2f$l[oMp#*Nb%sYW%5R:'B0L-lHgDioK1Yu#i^H!U.:,^>oG+nVN%c>*bUI/ApKi\k%COoJWL4EIKZ!@-Jt57%B(./1"!G!
%$Kfd,C<JI(<T^AlH`Uf`j>R2jn(R(DH=T@'b?Cc-16%f:GUNSA>0P&Eoaj6iAGH1Hh[cYGL%+]eO/T.\`"(olY2]0CR(%.t44CX3
%1ZKk&2qSS(dk]1FD+?l]fFb>&:i8/-Z'H'K\S.=glX:+CoGc9+:l?q98.R;m'EOslnO'T(F<iBg8]/;D+fKNs=40qcE?H`S[+dV;
%,M.T[0)?71DeK-^#?/!@gEH#KJ59PU?\KnAqn3-*[R*CgP%0^TB;g$?iJO)&+ot$J[dYeLP8keuZ\oJU(moGd/J"<2A\6?0PtpVs
%XL%O\bJmUf>%U/mF-K+=EkZ59[c]O<Dulj)$?-nFNg5i1W-!3^j&jRR+1VU<.ReFa*OKHIY]U,O6J(-WL2oR3Bjc5,?<&c)?7*W9
%[-\k+cLV$0"s"14U0+[*EKJRe8$S4t]]F/G"6R_t?lZ\';FMpG;iaaY-Jqr1]MKX!61^@@Q>tSVlGWtn:,"B&Vh$cTYVO5:-Vuqi
%HB@Lsd<:QLa>AQ@f_Fs"!CHTJ/(];jC2+b@9tmaU#8u`#/XT2RUH[2#7mhW9S0QpZAr=L!K_fS0E.AhYX<2jSpeKnW<B%XXO9U-[
%TlN*MeRd0g=blb:XC!b#oUqIaCh1!)@AC+bkUA"C<cO:L\Y_DUB8-m7F.E$H.*RiRZOi\m?%`"JY!U(MPs034^e:EUU!+d_*Q]ud
%C)(oCQsq,[O-/o/iaImsY=-]Ym3*&9!!?XHZ5kuj,VuE$c'?pU/U!Eteeutk*\l9^p'KeAcb)8_*WUFWAFd`]WOVF8Ia-]4!p..^
%LCoQ3F;/qk30tXACkdCO3mh#6Ikd=FGR@+M^6WBJ:NcF[@'riW"C@;\fO'/8UK*9*9?dIJ9Y3*>]SV<_#9a9c/&R1O,oh;e%DBB<
%d.*otisE9,35R8C<'"ojI#7jDYZ6K+2F/#ajVWS3]t-!Sd@+RQK-7?&-=-O2ndX*FW([^8s0`gASSJN#K^m;\<ma1ji!lMRn/97<
%&DM<H#$ddg$EA49$;`c;rUBI*4gWlurQ]O2Q@dL2k_?*B7tNC-0qDJtEttc!':YtRSAb[qOGU?o&N#fQO$$KgFoI'N*6N=@.KV_K
%gS:eQb&&_S,Li_?n"N$?-N68WPb+T+Gn(9L!DPClO:)eA+VS.])=\_)F7*Z"0nll7iL3V+`iUf>mee8Y.78RRK5"AlUp8.EYecAQ
%&PUbF.&Ktd1g(^g9k*C#=R^YSn-o8X?Xb?MD1]TEQ"-j1@$V>&"+'L.+1Bl[Kjg/8>Z(+A"B0$#Icib]$B:+=ck/[Vc<`BEeO1sX
%VD^.nT6G)qN0pWh_l$?-GgD5Co^X=)SSNQE-_jBMgYm$X@q.^o1rYV%NYg\Q:_)li"gC$IPVBC#PpmKa%/l=S$t67$:I:6LR!2CN
%h@hI)h'%CG(n"AS!IUk<$(@!=ni^<[;TGf/U#3D8Ru8f)M)+j\m);M%'=E4$^97ZX1Kc(,pMgH9JdVok2%riO3qg`PrQ]P"D]jFS
%9Wi#tbS=D4jfCa-gT>k%jf&?^CAppR!sGHL<@q,kGrF37O9ikU*aV^HGm+kp<1>]J\3>R,TH&2Lc.qRArP_=*PiDo/CRKQc)%e_g
%mJ)U$)K%#kN:_3_)&(LhRit?uHfQMuWg[snUC,X!1R9)WhH@;$MWJLo,EV;cPr#k6j[27tOQt\DRh0#Mp$rIH.ckj5`]QV;A/PUl
%f4;>Tm@c'MX8):eGTcJ$fo-#lU]_M,%\q1>3ss!k;)2X=h'MW_BDDMsG!cY4gHE\:(cW*RWWO$rH/<NI'3;+.$onF.!1kJ:8TIPa
%S>"i.AtV7me*rRJT"5NDC?]:4VhsgS_/.1dFs?$6*=B7p)$Nc-4S;qRc8,3XkF0YL/MIV"TTq;SL+SYBn_/^9J@,`nN%lLfjm'FB
%#`R:"TJQ4%caID#a%o%Rj-V[YEq^\"DtAm+#lRc5Ur9Xp9tqXGE5L7^/i@a2=o+\)`"Nbp-5#.W1nb%2F5T'HbTmDEiT?s&%Y($(
%)BIr)l];C.e59J;l&T)9RN`)'Tf7dJm9IV%9!IH%nUMM>)02/GT/>[UVToJWN(CZmWodmhX_Co<qBE^%Le;Z[j[gUlfu/]1@.CJ%
%G9W]D9F$ph#TDS-iK#g-R@9i,\OPRSbIar(/lSo9^^1(Qn3+lF^8Eb$\,^DE_kA4oI2+(IZ-AL'A+Vk7396&/TN?Wqb4SS:F;+2:
%H;5V/'%5l0aJ>DI+N)ecOZPWjnX?0/\b<18(*t<Gl.MIf2@JUd?rV5<,f$G`lH+!^9<K^_TVJ/NkYb2+4@an^)Yno@dj@O83hWE%
%aA([c;/=m_#!S4NPgo4-;=9f+&RK_(pH/Q$oK1ZDP,<2RAElMi70I^n"stV2>)nH-TeR,e.Ij7-+7)fi)?5a=:!tdMOmbCW-n6`c
%E<80.]R3/V+me`d7)2i2QNV9'N[fs--K1//5=+J'+[<7@#7q5,_5h(%nr*ts$/-NW1V8hRbDC`PDpC*'YX1NVUHP&VBjN.DGt,/:
%j:-ZQ);GA;F"I"C'29%O5aakA-Di/AZg@ls*MGOs2^4dc9i!RP9YWBCLG5pl0rS_UAK")\PZr^Ee_PsWmYH[`&9-!_&s1N+dUU@M
%n)[478$7DA$?H<<TG2n&b*d739h[;C!!eL7ZZ$AFB$7u,83'b[?H\0[9>>P-='NNRnL#pM\H<nG5'$`S]":S=>QKluh!o_\q4XN'
%TgRY:G_UHU)%TE,EXV(uU-<8PC2sFT8\15g>8[9%iNV1CqG7Zs'^lL())YXR*;u"2=;E@&j!U]MW#1mhMjt4i%oO+2LhF:%n=uRX
%R#$_19L+Y"#3lWic8/d=%$(Cq&=ZHG;jFEK8pI1E%7'>#NM8t^okC7/Ha-1Er6S-21XnM,\Rt<WT@ijN">&-(Wk$d\,Zq,Z7#4n]
%'++iR<"Xr=T8n7Z6[iS!e1<b!_8hiILTqTAf-YOaC4iT[N[krK6E,6A>IrURN7SW\m1[QbStWU3rfae)!*$&07gY>Lo9<Xn_B'l/
%@Kc?,\o5rE\d?mN1A/pI@+Y%0C^hAknsm"(%5c`F$*H,1+kc,N6K77HdfPR+4oP*`q2o/IgP@/oT@i:D#rHFL&gaEVDHA!#VMc3;
%%85Dm<.'7:K)Os4S>"eB7XjOW5gNeu@cAkN$iM29VImi*-[d*+]bj0LGK/EN`sK4%!>&#12?&2*>3-Lo/<kbUei.1QVOBnIJhS23
%p])>R5@S8Od(g(gOkZQ2BqPdTo9EUW+QnnQ'4$3tR]r@EAtm[UilA:$UZ+1)^,$5&r1K:S>JDq1@YG"Q-s65+5^'&_%$Zj<@E]8k
%eMFQBV.!8LN-se+7U_j[61$AK15sgIlHEpeE(D*F\$*`Ja1cS&p#X&%:5GM(B8Q9%0$jWu$Ce+<+j-s1FI5hmLA*hm3n:!Vj^AcL
%"tCMtL@.b+-SJEeg`k-"K>Z(>UE>b,,_Mh9b/])\XQ+B=['>#Ni'd]R%2_G,V$]PXYu7bnGaoDLf.lN.VYS+h'dYc'JnpYdj%&Pc
%c%emO,IFD1^2-Pu0^u9NDs3WZ+bC@g&T=8V@39X80F)H8b\t?<o7YX]3M6a]:fqI+2#=>8qMr[1oOs$9*XBKX;CG7a"Sc27#E*#p
%:9*E?YI$<E7Zap0r2*a5!Nm29q;.Y1Eb>TRi*^;,7S=O1XU\3PL7*Q`+9SjF1e2g#5@Zl_6T[e^R!-QbbFD]DQ%^'W?(k-4N,FV4
%GH7i?C$nEuUX(FR(La*$qV"3NO9%n)%S=8#He9MeY7>Y*Bl=U>B8>1sN@/bfS.l(W!H=W<#gr&A#DI\_..90(87WjU4j%Qi2:FDl
%mGgMRLL$Ym=dt%>jQ:iVa#S]X'dZC[::715.$"Ia<4mYOYSF%cV2#2rp%=;)Its[;`-[DN?]Z1m!L\e434uGCJPS%L)Y*>7.#<hm
%)C.i@A#0V3_c"+E+_YqFmW7E>#%),S7F&$@Q!q$,mnoJ?,/bpcZsffX(5.A$I-SW04Q8n)m5@@)m5>C8FDaNtpo#MqH^a,C""P*$
%Bf;l^oSbQ/e*^G;%oU]P;dSa1T,l!toY\OA@S<94np5isEH:gtmqkm(OUtMR&%6dqTT&-aRH1t6Q!GT(<,#W(TVCl=+a2=tdSL`d
%1)Y4m5hfom2\a-FG\+>(j4jWCN)pUIGB\0Ts&4G=PQqZR7N0$@M]@nCTZCj0&/Oim6p$C[;EaONmbJOZ0WF$(iu0BM$lcNq<JHr:
%hBAFseO+UT`3sNKHe`6\0mcqA.5N:_VoN]D9Pf:`oBS/n3PgSJCb3W&[oW6_YFt@pH"Ga1oQh*`B2D@UIeLE%CBY:Z]Og724nb(k
%A["kU$0JhSV^<P1aAgT4XfF5[(JO1-Pk1FRKgdfZZHuZJ!2lAtrK7Op4,n:$lNAhA6Vf3B,"<B5fAIB\c:/g9YL3X_@thWjR_,ZG
%bu0o*eAPThffAMt4USNc/fp\8P79V9^<O&c#<4&p@G/U\1MU$2aR#qrj]^;%%?Lp_2pL8.)1fiV0QD"Vi@qXa28[uqD+I[eRU\^_
%lf1'Vq[`M;@:`QOpY]ui&Qd8J?+G1RDu]>7A`(X[A<\VHPTbHei*Fdn!`)FA$tO&WpMGR_3;p`M/EP^uaSbXJ5R5DH6utUaY'$Qa
%l=Isg)3*_s7f9Js:/k484&u_c9a:hKAju=:dU+C^0VJjod0FYtH.VOp#PsKS.J$6QL,g46E)i^[9JNb=kE\fsiPOqKVW,S;.6uP(
%_XO6qM==YDOUVnZ2(3U7\9g7T+J_E'n;E*X_b4GZ)9q`*NYeUt`bi@<Wbh+AOmGrO^p(\Rp2rgD[![GL/)U*I>K$SDZ`l2D);fKi
%I.6ItobU,&:Nhej*'W,&nZS2c-p-IN"uI$<G3/Y(UDH^t4^'kPZ*D$Tqs*,%iR&.L4hL7k^:]:%r9Z_-c8b=7#e10gO4:E;WHHaa
%D&d<C!Ypm6=#c_%Q2D/Alj:O':`8'6oj\&!&=EiK"b^1@:GCr4J@Q::UcG2PmZnCSGZj0#BHp8E7Rtua%O%"Q=mm:1OXYBD!!!(h
%SMnIigkm;1OHGE#UcET4o?JeD&<J/8>?$93+)4W^8QhD<dcealCu!(pS[n@Yg!7FjK9\q[Frid!HZlc*LU/M3aFKT(fjTU1F>>bC
%8@3EOYF$'k@/]Q6,A^Qp^Q>aQ`+?5f=,buB&S+;uAjSW^8,*9K$F`(Leb<U;/<TYDMD#BDP2/%ro8&JVbX910Zm]-mARkJlBmer:
%1_(=>\pP`Ce4C2'p-TfZ)]QAV3Q-;$#"EZT4b-FDe40V71PCEV`0`A=$l._]])663n25lc=S+:n!a[WtcuYl=dS^=.)T\IXEGqlg
%4q+9Bhe.h^ZMY=XHVH"agldK,aDiKP(D"COI#S7>9X7<-_L\R7G,sWS_JYu,%jGRd$B]9bTs@<NaLSR$rULn<]Od!2.u<bJQS5uh
%'ANnT0>H&O"Fu+/^B:.mH2S%Un[N([ra:PL!fpW_W4o/Z*3;5!(-lkq_F\f5``\b/YD&]m3;n?7iJfd6(dH:K.F5pB'Ua&dh=6%,
%Nr(%t'7sI+F+?o:.u7ugnSsHF)U`P0GOX&i)UEr,90M56a30!E7LNe[(C8c+BpqA=OJm,@j[DM1dPm&&n=E:+d4-`f9FA<Mnbtkr
%&u?_f:L,mZ%oc"K83.*/d6J4C#-)Vl&1jTMB]&o'`C_6RaY-YKM6\up3,`d&\KG'"fA-c[5_*i,STlZ=hK`f]1>Kf@\H4;3JHXC0
%e8_Rp!HW)8Uu>,E4>?%sFtO<42l44X7^V-k@UX+W=?%LYQ)XEKFp'J\FOJ6WGi9Ot?7+TF46Sa_1-jTc\>kne>`IQ$$K[4e@!Rh-
%A\$eg6,TA!*"+RO\KH:73$Qos\QB9C_?gdTKP4R`PuUV#\C/je"n1nj'c6oOOO/*G&3q>:+s[Rs-=V.u_)K6)^Q11A<RNK%EWJ7.
%a.r>0!ZY8&A<=SHPD*j3$COdUb6dO\_F!iH$Z/dECJp0P(h9mZR2u:905E:,)+0Zj2'8?*_%k%n@d);MO%f],0Sh2UkfGE[a?TGS
%;R'.H7[-ZVp#A=O9651/TS:I"&2h+[n9?F!0nYc16P4:*Bn)h3o3c$BL%pQIVBsYnR1tg`CB<m8TnTZNJK,b)a+hZf`)C`#/"2.@
%:__!>VDVB]`7&4<)P'ia+?))?s6\5Me&)S4#F?r?'@%dhbLVP@%ep<2kkQ;j^'6sUJq@']/T37Wbr*3)k"WbFK,>8@"p<BFYoBkV
%0><OEJ9gTdV;P7I?37!<_cW+;.KMO7j[>H-_kg"c)NK</oU1+Wo$DqHW6D8GdI=$uS;Prk)2Pm!+rpKM::r-#Sf$`Q(L&'1h&Liu
%Hm@S'3>;a<<83"s]_XP,i``8DjM</)#V$>p4IflF!:J08I3fk3_9NM7J%))i!(%86MgG41Lo%_]0o`JJKOL9u]^8<=kC/A4`COS\
%XK\+G2jUi5>2FMqQD*GDRXl%8#K2>lFXQ3#b5c5;/\VR+%Yt<SHSb8IBSJJ=*J50/YHeog#H`<l+b*<CFbp8:O7@%IFCZ:u`_6X$
%Na2+RXZOP4XO%!c_eU+4%]TmGgKM\+Ql%9@)M+nsE]JFZ]8lr/DTEh;)&7j3q*C(iaRmocZ4Kr=GR<iXK5LOLLRH!SY8"C3pT9H#
%"@<)'<De['C+"HNi+#eUcT,.XR\RRd-FBIH)9h,jMkgMlSBAI+\<Q@n%_Q_*YL5/-#Muq1+@_*Zj"@!pIP3624n=Ti%h16k?Pn1b
%8RmhucQ&b?b#pr>5.Z'U+fC[dm<[o1jCoTJ:F!#S!-<ES+U!$B2IOfWBJIi.!imM?XTp%Z?'a8"/!J+Th<IS=:$+3uN"L<X2*F\b
%0,;SblU=,'\tOPAMQ_'O=H9KqLU]*$q#:M<(9eDQdrHgF<qHJ!O>bUMW"q+:JI-Fm,L0*)@qrX>J<0ktpD)ZtV0^6-p4JZH"BQsS
%V[1&s'q5p2s"6$Qi.LW(8R^-Dd`ad:F1bZ>9Y5,o*E%\\Q*YEc8&CRr3BEH\bW'D52Y5aF.ksT.<$#FTX1sE;YGqHb]BRPt]Nl[R
%,Y<5;j>p108)SCVU*d[.I$M6_4S<DT5@S&&)(Qho"S$J.q#1,O.9OC:JqP2$q(PggqJ.[$]Qq]kA&AO`"FfAGo@QdXYpJlRg]cqK
%?Paap(c6Omk_=hB9?eNohh.22Vq2ooBDBPH#S1$Z=[9\L\J$FJ%lM*\o7IL0M\VoLGus/kQC=ZO1A_&uS\e4%S>_,UYWT%u/p@Zi
%WW_IdYDqL(:fRh&Ts($u'<-k;_6G<UJ2=8**j15c8HHRip1:]m1iHO6Wj<5cn05_fUh5KW62JKC5U>hk*T)TB$n>X2<JY4q!In1R
%pmL#/g4X_`(-;25q<G/j]CEo.dP[Up&+:NDQh,!Q^.1VqOUA.AE'28taNA?KBO`4*6D\_$prp>9&DTX_#$;,1!hC4g;e%fs_;C%u
%1b_`/rLq<?gJ7Wt'Y4^C2-E.ub:!N;/Q=T]T`;P9aDK>ojkXWdG2O#Y0f=cSaaPtKPfq6#Wmq).&)Xqu;_qDYAN3DMh/mbqRWo!3
%G'"3J2+Xu=Ta(A6:nti/[R?=^/5[>7r7?H?U3N]TeXKFmGSA6hq_blC:6_jbU+&s2JjY=K*Q2H>mKWA@jX4XRLFgmR(aUX>afsp<
%_]hh"4U0c`NX-FT)9F!ZB4W,]1rI5LUrkoB?jDFC/em<qQFCG#_"T_CSVRS]ihFr]aC'#1[)4)QP33MIUlZJ&+A](48MIVTFq)uJ
%TGYJ/L2^<i3H`A9=A\gX-oLKk_9n)!5k.;Z9;,l_jr'#Sj4@hG&80LTkhoeg>1u)LEo:fJ:eHog94p_Ao52WIPdf`e"h,%q+rno5
%Xp5Q3n2q!X+D'4P.U/t32%WC.=1<FG%R#%Z1Ee"750*(\#B(S`\\lf3-f2OV83.!3IVg,n1G*FX9u]uiJWN-g3EMrOrn!l/R;=S/
%FDp$SoTrZ>kt!SLT9[5NJYMsjEt$/i/1/.CLu(1A0Yn3Old5dm54Y_.KdSrGBq$RR><FMHn8DHhLsEuo4bYScOrp(Ufa%0u1@l3Y
%eI@=AL\i)ujRnc52`e25V`J3o)%)C:L3clB46B:?'Tam@5B"7c/@)A(aXmQeWPc4TbdJh11<lBYnW>8$L_""u/<kL+R!E.YZB1`I
%Np57(d6\2Cg9cE>M0E%UQWo*>$Oh/sVj)Nh(ktUBJO,XG1Cj<4L]es82_F++^tV$#eV8Mf5TJ6\KF$6Cl&t\/7/2rAf-+dWD][^O
%'"g-)0^cJ*P)\Xu-pXUE>2"92As^pO.DU+#b(uLn9L]tb;'B$`1#W%(h^Q3m7H-F%+[F#nA]7ZB;.XDOs"H$8;ggi3*Z/SCbI<Ot
%\(TS$@Fe6-WcEldeO*5Xj7-C]XZk5)_,ht<Y*G8ddm33[U;/CGdiW9fHoh6/;+1BD>:fM56$hQJdZZPq5eh4b\J7;W"l?`<'rc16
%ocO<$9-U)mEDL$GDeJdN5Yh_lBgYD(!3W$?("5!^GZ:>'W##rKEDp*p:OI_3a)L%]5NibhU#W$bHC"%<+7JS;HifWsN@YW&3p]P<
%%b"#6QssP[1-;p8@=kp!fpGn:a`M2(97<h=]%#2%b`'fGQPX(d67Hi!9F[@+oEoK:9IPM%kgH'2_6`5m0$Gj&dA&&M36d0fD38"n
%1s9Mh]<_IG$Kb0@#Y>:S*W`[1\K;5gj="N#Jl/]WH6;Q-2@+!X_5DOj,D<#=6Q]olrZlp/on2_pTk:n@"ut/qm1T]^XcB`%j.(W>
%6kBd*KWY?O7"?]I)B:uO*jS1H`_Z\69[DjUI&WRE0/I7Okl;>qM$WSR]4pR%!bWih(ErFM6-TJ%_K]Er!-92BGsM+%F\hl%Vo<Ud
%),/!d.j<tnOVU"'-G%m@N_Uma@h]4NIX)rgC3^Nm9,9B?C@J*SXH@!+b;?J."i6qR\K^8`X,'p*I[KGk0Kk`k>4CE*c1)!Re1fVs
%&F!H7+HcRW(.G5*<8ln#0nUB'R./[cT:8-/N$-]=IU41+C'3$X%2RA9E>YH[o`;FOZ09oL6/TrF69hu"\rQ<qs#,WM*i<k4e>p<^
%;am]:EG3hOMA=:2@J[h]dWpPDK)\R:%A6lus*=s/WJ=Xe1o-OsX.5?BDP`%fhs+D3[iYSO&GR*Cd<G'hjH_gj'/`U21W5DCj>a#>
%+,8msLEi2c$IPtG'WQ^T>s0i+b?H7_%pb?UVB0^4*upH?TeC2TM)+_l!D"=*^lNr'KEi,.dm&AUpZ(3-`+,!l%)j;-<$gr[O:"?/
%eNn)WY!XQfNQcmgJKTP#9\NM=\)+S2@X*4IJJ8;p4;l[U5tI^d+B'ud8!+tSad^*AKc]f5j`tBijBF`/@:^MS[G4;5mjM_KdcY*K
%Kd'N07Y?s@S_=nd#K^M=brQ2E@o*"3i2t/ld)9N$Ch\2`i'ej_YYP8"g/=+a%3<]-RK'b.eDK,.0Jtc53O,UiqiX(pF<c_pOu*T]
%VpiGH_`4S#$roPM;D?5BE!DU1&@53VV!/hZ`"CEl/QA8F=p%'"Rp1d81^Xm_W3&m/SN73'#j@GlI%RFf`/5WM*:p)-:/di[pc>t?
%<>n94Y;2;!&._@b+Z>8#>9X%O-o5V3qS=<G>:h*(.RfFb6_dmDcs-e^pg3im$4;\?E^0b^jAm!0Ns](3(U0<9hL59^Ej2,a,VV\7
%V\[`A0_I#_5V;/Rb!<2Z6J,'.KE.$3)[!mu&2cW^P=_EFBR=uLkdXlJct<8R9Y>@/<"2nrU*F^:AFFl=Xh$D7\PtE4E^u<h<*t;N
%'lV`&#_`?VQ$0uG?'$A@kW[pC&@m`Eb8dJRd#fgY>?8n!@eld\LUF$;(iP)WRfO^HFDbi%?`8^A$.Fq9Ff@$(N6%^K"IK5T^s,%C
%L9Ts[G]]j$$fp1"4U?%E0higG9qC1@Grm.u80JSm68.u\Ne&Gs;HrH8GA?J;l5N3eeD*4RZ<dnZXqR6N&DE^[Zljr$kfgkgD?']l
%)1S)RC*6-[g0(bV(=cF8QC97d_Tc].2%%^7oPpBM>Ze)>YHuWIW;&I1EiNsii$eDTi<saYX)A0u0h6=Hr]LsFUmRNuYM0#Ge)*-=
%raZfrd!qT@m8$qg(G)PA_JQOI"1'^AR_j#RG#4G;XN0pee62Wd?spAK=YC$4(QiQ5KIha3"rBe!;QQDjG(#oc6rrf"!cd3%E7KJ8
%l%$0QOFnrr`&XE1e/Dn4c;I$1o`XG$YSJq.7$=#929^XfrWrjq$bk=ss)Q:%Dr.dR*S+89AAW5ueb*m1qU:`$h]*]ngtOu>nN\FV
%omPK?03E=Rr9O:*]q,,*GD,I8igZ2hS*OF/?DmAf_o!8q>1](qb*ho-L\LOl?2pYs.\47qoWS5,?cR>N$^QO!$!)r^9.OTLN=Z1L
%$9E\%8Yp80#1gZBS'/Z<iK_`Kd_T%q;/f[fNO&'55SQ98..%dR,6(^$;VpO\,I=!mA?-kk?VBU@XRJE\n@f=E],,44+@PgPY6?0`
%(mN'W"jtip+$^:">(IB\L+sWt?4SBAV$mNYf#.EqNC]&(!7k,"WN!:>2#`?.A,gACTnUW^[7+bmK<K9FJ\]pGHf"En1bq!4Vb(ag
%Q_nieab:+(p@k1AJ%7M+;3Yr_q8_?oa#hWA/mPopoBa<mhMZ;_-d6F3'\#jf1*q2(_Y#:'[uPW<*3DGP[,6=)+Y(feIVnPqUW5mt
%]+ZW"H1kW<%k)4D#FPDbmZRlGO6_"%jo!-WiUJQZpCDJ?rq"7T7P,iqXGFMJ95da(J@ucVNtf?j'4LEp0:k<eHEsl,j42G-(H]q]
%1EI=)Jr$Uoakf+En[?',XC#5$WTuW!Fq.iM:gK"ZMCE1?PND)[QVt>DF%Ys<hUHd=1I-=SG^];@e$8^S!nkEp4ik.k#r$7IY$-^"
%\V`Hu#%-NW\'7X/$"!a<)pQD3^^?#qBOs&?YKHa+:D%X0!>>X*%'*13<9.js])]Kr)Q4%eM:6L4B.FGP[B/?!KV'j:97]RZ@^sEe
%LYU&k"u[St:%pVde5G,FpcuI=9'adscscLMcN-a?cP5Nk;::QLBok&'1*i6t2K^tkBWeEMYDc>_.*Xcl>,kA/*-uO_SX.iJN,]!^
%f]N8n?diJh;qCqB9'M$B)NdSp^i#'bDZZes!&Wub^aj,:EP,:YL3eAN<tG))2BYMX3[X-_Q>>iV1&@UT9tSDp:J*4f[@.ki5,l=B
%&B:>$O?S\F!0"'&@#rsOe824J299Wd(q]4rd50I]U9ldnHo&a:4F!Dop`.X#AJ6;Tpnib\VGI@*iAWVCWiOBE9\8O,9SHe9)$'1t
%2]89kH,OHk'[REJ[)E7$*,fW]EjOG>5#!JCQ3!"G/!+VHkXH^L&a9OPb1:QAG*I\ICd.oGe7CM'V_q+K8kXCpU:UsG+S&6ZlW`GM
%4>#B+S"s#%T]tW)@EP:0L<O%2PT'CIC+3]+aul?KD(W4K7>QX?Q'km8CI].-bJ0$!-1l)<$3W9QemrI?iprRCXIH-"X>SOLU8X`;
%"UALZO+]GXZ<!5SAAEf3r,hK">ltIc/s44qlk!6Dm!IZq0J@PFRQcgO:42(YidGtdW;lVX)kp229>gd4I:G=GYLP2\_Bho^6B<[d
%%SY'XDJ@EG[A'VcNQ&`-dd]TkBj1]3F&5[Bk0FmuL&nA`W8;\gOPRW/bc/CplqE>mO&9gB,1\WiN^R-,d_+Fal%ft7hQ8>'>X9n]
%"sj`>ERA\D&Nn>$e.,KIb:N/VdU:cTA-Y70/Nl_\[tBLkNJLl@^a)HH_Mh/>oRn)mW@/(eQ=^pONtFXH]d&8G_,t-6\=KH>WIR5F
%Y+.R4D,^f`Yh>fV\d[-,RD@E*c)!68L)u0k4`C##@>Zm+NbXF)D<>H8V+s`mC^Ebb%:F@9S9e6=S^</qp1Nf.LA.,$Q:XKOK2s-S
%UTG9">fm,ScnPj>H>s#9:.pGRXkg(OHS!IIXlJ3d4G4C/[ZDL3B=-0B2MN)5pQYrII9U=n@'d8S6;0[NaE4FpBaS]cif/$G#.t!&
%Jh?Xo&c^QWdp*E@0/0b%fk"1uS#C^B#r?3Amh.YNgU;sLQ_oYL!t57DBN65^l0IXj<O`Mc<O-I=3kfKFWGNhEL-J_:&Vb`=Gc+J,
%)L_6NZ)okZgm0%V>W[oZ'e+quA#;'BFQXfL4R8feXGs^#r,CJh_MBs+A0;6>\?nU)at(n21$9o^0./jp+[D`j.8J?4&3o5'dl9!D
%I6WjcRZQT6Y)a6l-X^i(\o("-Bi;Mj5><Zj"XonA3X$uuQ"fJ^J?m3[T*S7a=rth+!=Ij&gp-p61VP.:?P&mg5hf2o/I50T-a>>n
%<)"u[dTd?V>%n3ZMA3]=4s,NJq1PRRH3q^AFmn<a$#f7cDktF3<Frt^Tk>n,\^1:Og&"":m(F-"#_ml(qO$khWN0)3+/YK=Qkc#X
%d9c.]">F@`d2p-KHHN#4Q%!C9g^7PF$6U\G=+2GY<3o(mg]f@,LKcu#YqfN"ZYj<Fa0CmbdR[#Pkj3uLpRl4<5?O&9DNCVXld>#H
%LW=QQea!8s)&jnE.u#N%B_'QZ087Hp8r8J*]ri.XhW"-O$,BtBjVSFSpQ^*gH;AqM&YLD[=^)l?MYahtLnj[UW8qKVqk\FGi!%4O
%bH^IU`r!5>"oMc'(HHm/6G<E9>(qEHE1JS0AU]o7\s*eOLdU4Ka?g_4gL0OQY\FY;$(r&(?ePpBdS"X<mE.!(q5"=uR0k+Q)lsc,
%2Mi`EIY^KX`iC(XY9[X:`Ja(2$OoI%NtJNu742S;;l,]3hO3_2AJrP?`Al:"6,cX!TO"BlY+cj5@VkF%VEZ>MK>jZAnmY>JJ\tlb
%9Jr1A#:KhPYN%q$Y23D#f<J,S>s,!AQb]ba:!YKDVcl(,D-\_!5V)'1ZIm9Dj9?ZjEc.K[55?N9'nnbloH!W=_//UX%U:IsTrK-T
%K2i(iAq@VW3(6f\q(oH8j9%)N+GIge,OM.(j=8M22ldEL`#$,)Gffbb-=(c%0Y($dJ=D"a*HXV`BrGF$E6#5dQF^lNe0Nn^7Nu`k
%bpo38C%i&)G7$C68djj'7;GS4`":R;XFr&)=P1.U+CsKAChd[ecTb6\<,Rm3B2[[4B$*"Y1t9TKARS*E\m.mf1&[-`lQ8F6V=,d2
%$n@'9L5GXTh$a`c1DK:=OZKF<h4Zll_X,bl^;pOCG&O=G'\$dt.]J@cfJYMtb!tP`<%2$%9WI5/-=Z4<?A:A<a&g>d^!inJLo(Cp
%W/i]qc@R!=8g'%B,Ihd0/;cU"5QC`)@Y4cWq>t5="0Go4oq1(c!1TcVV/GbFNUEEJQh)+f.O&YZfk(uUKh)LOj!%nV:@p$O!C0J$
%_#J"W=2uERs5OHd6A8kbfcefn_D2D5drNK2$$BDU#X$t>Q[]C]IufC_Wu8(jdGqDg]CDcC_QQJJ`1i&ObjP5?gS*Q5CZI?R5BZBl
%fQi0.D0b:Q!]+MrTh?B3X:d_R0X1f:$3q1/2>A+ug6nV8-r18A:b[.:]%A"R1Rd#qT4]Ph4LT9a^LYKG67jN.$pN.4%@L``%KsUK
%E_(nLJ"<kaLZDhX!%T?qSVYCJR#PVkTSQ9LooJ7j#l#JuLrIO02)?*LHL1nWOAA#IPeD\K"4oqNc;35gX!5Z!A;5a2PhKm'e<K,G
%17&sk[Q<usjfOacfVSDjAa*@]!EBmpp02=_2@/2KUk")&776rZCj4nKgZ>4I?G2J%d.4s-jla%0jE3Q6(5V&\46b%+24lSX0-O:b
%@#=@\hHu,-bBf,P0)$Ck!C&3[ZkprYP3F-AD+cj1h-UId<Ru"'pj1&,$2P;['dU.Dig95`S?Q4[\Z0@_@&A+Yh?$m16Flmj"@c^=
%rQRGt*T'CY"6*_TjAQW*rk4'QO,ZF,#K,=ZP`$[./UhWrns?,@Ia8Jp-g5K=6@V&I;u6O+2oZfO:&UQa?Q!eHN(YnpE/pf.RtmcC
%<uVOa%hTc.932[KNsrd[%f_6[Isc!u*N;(t>6Nf-qM7ZG*aG/#\5<^=(4pLKe,mKXUS@P35LKekS':N&e^?GN/pAN9L.u9K'i!F^
%PpO99X$'ncihY)+b`BjFFQY;Qi$JEs]Y?j@Let$VkP[9NU%]AYU(PH@G.kX-JI%mlf6`#;[$^T"H]'LaaRB=JcC8;ccm?3#O(F0:
%aJ@sEK<I!%<J!sM6MK&/DEq_%BX6'"&.ZYZ]>W7`'aUh>U)L$I<n!@"dDWq)/_!`\GdImQPGh=sbR.5f(#IXc)q<:qp8rE\C6pK/
%-*K/XTKYHQoj;^JZu`6>Z]nQqF2RN4IIki[-jRoLF1ij)cb-=>?ZEbi3\EMO_8!_[!amF=r8[fDf1RMgV8g@@&SaQN=A<lCX(6W-
%U>VdX.k&q<Sj:$G8ghJo&bP4+h)8/<iGh<[\!k4CVX7)M>"b:&%Zi:S0`V1HhQ9;rj@C&55J[8RH<EKo5`aoRTq8\_'XU]s/;9?;
%ooh(CNl]'$*\N1X'D(ZgR$i;Kfp,]C=Z&2bO3"6`M>ZYN`5TX3h:ui(`$c,IXp&:eIQWg4U=Qp5Y8fK8@t.8H2pjEE7\*N&V"`'m
%BMB#(qrAiWmjB_O"T(IZIG`!KVWbGXh6QYNbq6XoRC#l-<WHPPP^PB-`RE3<pO$N;=F3p:`8MstRq5M'8D+E`1'od2Ss=/4P:?QH
%eqB\]&u1sPLfDALP\_Ah3A3!Ij(d*K#S>S$Gk6Bfl?u(KUCrUk!oHaiJP6lV:g!Zm2[KU[;S--Yl,g'YKHQE;CC>=9ce]bmU?E"G
%&OM$!OPE#F*),6sq;dHPH.T4/2PR+1-MV3pmo67aakV@6`.kPI0JOu56l1=GbHiDl#_nH]7TWY+Hn^IB]lb>@FQ]?Zbm/a?R<G8r
%,23f9j%rV^XdR$%\L,cF$J%GQ8X>72hP>[XkOS@S-1$%K(S=L&4k3/)g7sb%:NM2U9^A.)nCD6e]GocIADYfHA?34\fa7!Th':'n
%UI<FI?5dF"]Dk]*eLX1;9T_+$j*,G/@JJ+a@bE\kcB4tY*]]'o7;J@73#<;)'Pe--7N^7mgK(k(qTr@VhqiC[ooZ:qQ`I#>dQ-cg
%?Bt7*,a9HfmmcrIHR9YL)Y6Y#n+=nTBLrLX$rfZFX*+4(.feUWhB-!G!>^a41*9)#hs/bWAlRglJ4V6bPE$0Iq%!POfU\9-Y<66=
%CGlT"c/M=N4Wfi+J+u;eQK\,VKcEEUW1&!iLt4G5?or6=OhpZ3@[_2k;RSN8Zr,2C+u%t=6M?!A]>s:J5oWh3HnUGr^";:CVB8^R
%;]c/Qi0^tg7b(r>_&HCo*;O8`7>3MF)P@!!1:9;\q'm!dPU7p<MRS>67>>XFO:;3\4B1cXne#ZFK=eW*E\s37eRVoJgo[Q"*T7>N
%Z9;eU)<`juH;2AAqSU:5^O,\b.=9]B:n/UZ'>'d:HOlPle/]C?"s4CDEDp8T3da.+K_Nc\6hHdMLKU7*I#efX+=S9P8NdZncL*AP
%r/f0<E\PG36k./p9;@b9^"&>gnKu]eCRQ"?CI7Wo"J6G]WRS5.YEYC:PSi(d:]oVF^.1)rM$a^#R@\Q[F+]^CDj"FgDgp\"nLm-)
%n;[BnH(+d4+!88prnE38roU]Iro)hnrq+6ds8?/_U0bS)=24e'q`k)=6&1ARJ,RX0J),U9bctJMIJDF_s1aVBX_2RN8,qoH(YY(&
%p%ptD>e3;9O8)fu$SU:*?kcJ]"u%*r(!>r@J7R00OOfM[J`NJK2GgY;A.an>AV$*60p9#OaB.?LM;h6H+fK*al!4?XISA/mS^;>N
%YlX/q&+Xl*d+#Fl,aE-(LFJ%S79a?FTFfrciW(K;8G:?u2hK(i_0K,Kjt&RSHOis$0`Vtc]`kV7]e2PF!JjK(rZWAWiAg>@^it8"
%+,X3SM06nD1,OJQnuHh4e/POCmZ@X]r8@>%5G6XTqbrWFcVelH?\fW[_T7/>[cCc?Yc83#3YOdFE0q_,oKN\XK+4+h1NZj1H4gKk
%'AB`qdoT-1[DBed'=gB;`kXr4&lSm=SRC+FFZ]'30]Yii-6l2['7a9-Xp(%:8%Ulq3U5PdB*HDD2h@snl/X0g51'A"?5="<"CsIE
%=HF:fQPS7G8cmLgN1>RV(mD$8j49`VJeUqBFEsq8ok_n*?gT2^j9YS!BMIq)BkhuA_QM[/886V^0gViE80keRAW;+1kA!q5(f)0M
%J'b]!!+n&A:tM8@jGUZV:NEPf.LO0_\t8=L<`\h3Bko^CMqt,'1=Tgu]Bd3YC1=-.F#Mb2F'UKh:7p@r`8n,H=q2Dhq&(;0/CEo?
%RK\E03mQc:aen>kV+HrSM,pn-OYJK*$e+qZP>(C'V+jfaMJ+lRPS"p2&(BYWH]p77FhTO7K6/:8d3##Ro;e`?g92=<i:d&_]lJUG
%lg!R,p]:+6B`@HQEI'[_It==X=MA[3&g4d(:@lS%^p&I3!'iDVoob7a>&,C'/mGr!4S[7`qrO3>i-h@_,XJ#/[.Z,t)VaS.g/Ujp
%B<oPfM_ou`9,htQ">!o-pZH^jf/(n3`P[8CbsG#iSu).oM+'[r'l8X.;GHk91Y3)OccR3E3*3.q6(s@OjljG2'h#q'KbV2#mfELa
%c;i481#'JQ%4d]1):@F&<!4*pX),?8LslcO#^?l$@!c88j,ZC<Q'agUcF1.L)\`oRDP9/Q;^HLHfpl)G$'C;6o$!nhSC>elZ&+'n
%O:<5]5Z?0s*eun<EecXPRu;..J5Mb2L-Qa`G5*aECm[!Vj^GZb,^?l3ngASAH;(_p#AgQn7iPm22Va:NM;W]e#(6MMUo>!DNLOI)
%MeMJ)jiB_lBNm=aQ\D?1"D,hAM__HnmiBuH0aZBt8+Ei:8?A%f5;X>GF_3,oPgMN,Eu^8\NPf0<V)UIF[!bhN1)@'a=D\$qc^=[[
%ZUo:gfaa6o[:AREi5%>G]R`a(RQ!lZYiOKe']lg!Zm3\G@.Wei)4@^+hpN*Fq;D"g]t8VP=[-\'lR31.(_6Rmn(Lt+b@0;+<7/\4
%]P;9`gamTT(V%!=q(WBjTt7Z8f]B6&)W]0p$Vh8$)A`@)DN?LO"+X.=nd(<;EqBFs)U'^'k's&S$4W[rP]RmRl-+<qB'C[%a]@-.
%\hXL2G0ijo+^5n>L\W:=qA4pSlujlM39NL_P7[fZ;3\7H6/07S7C;blrRb/jG3T'M[(spSQ%R?/e=s,h#qW;^'9s!YH=AN>VGbd3
%;jqCN2!>/i#6r,DF!]hLfqpus'6,#XYZe)-qbe4\-`mYpqdf:L.uD'1rK-VWpEaPk@1AY8+1TnEQ#M22q./G;5A>H4:&1LeiXjMN
%<qH/@bbmN^QW+953<<l#24jt#GJ[CAa[k<PJ[EoK>okA/a\T++B6j*nh`cI0G$YNE25dp5cEFm+ao92[I)`9V<l.1Y0MTG.H/(m#
%+4`s0_33o]h(@*_eUl=fC&a"t7eD\:Qn>4,JuffFU6<jpot%lVU$R$Hc_9[_[hu$HpAV%8^7$BoYubo0:'tLR\"B<GT@HpYQBO4o
%$%bo;+>Z7$W)V20&\.69ntKHBb.87V_+lflHK[VF[>BQ+PJ;l\9gC[b[X]W(ZGoqdrsa0+pERg\(t/Xc^*G+n_[%t]OgP`.Q/-'h
%Bq%Xr_?$OpAj0j*6(9l\?t6&R#5F@6,/1#C*.3SQ?4-N`kC)rlh*N@fIN6Y"@+iCO'[_mQd^<6s8GJ?1!"?9f93Irf48q<)-&QOO
%q^0tB#=-lpCk-(MYM:8;!u\eY^Wj.e>"1J0_88M)S?I;)gDcd-it?,NhN1=/@QV<Kr';\_N;oN=^T1;o-D:@?b7uD0cpY:Llqa-5
%R*4-#diq]BLW_9RNY#B:+e#,_O%#ING"PSm"60ll-&nC;H$GHgC1B]l<+WWg*sVR^I'#;PYh;$Fl#D-ALcZ7DZ*3=KJ+MLR?F`/4
%]/+a/`SLQCVtoT05/5;@oPb!`-?S)GUoukT#sdjVlHn+7o;b46F::gbJo4[<`O2tHd/<NsN1^?l;&CuG)f&K]\`,U$]Zdj\Pg/5`
%8\#t^-HcncYCfan$8=di<+M%W_V%X<%^I<0S8l9`kmTV0>]?EgC=-u3djTWITtY#m*<sEG%;L^E-r^B@rhL2ljW_o52r-]VV?'l+
%cd\eJ;..6_97<G1b2GHO5@lu!K_ks0ciMT&%NqOsiu[CVJ#&F"r$Wl;3nW:'X5eZ4<!1W3P<sV4h)Q!Z],SkFgk0K-do]>JEFWPa
%7l+_OW.Kh,ns_1kXtm3b0;M*r=F_&!h%/>?3_e78R1^];Ag]sdVXauePT!WM<[fN$!9:d!lC(Z<SkbFU&u)\p/!X4%6!A7t[_.N"
%8^^'!Ce$7nbAR79q9Qp2g<%;>V.CG9e!gHPkIp<o9g[BpB/#C."TQ+O'!WKd_ZU`S"^dUb`;ImcopYO?:bCu'i@51UOK/Ag59dpD
%N^C365k-%-@^X?tFI(NWWrfdFSAEZ/$;(4=nPDt026]GHB<l1?mMElg!RWq)@u<WE&cprX8<0`Mq,L4=HfJ&V+%'9\'TL6"fC9[&
%>$U:X^\5*WbM7?r[fSW..7#<GR;-aV-++]V&4"6,q9TH%,a*o,[6@+)_L/"1N1Q:n*XE?1WKV+K^pEYV=?XS*F4pt_<u@ic]n82?
%/*RR,j>(StoeSl>nD52&0TA=/\B<7EDehWN%$[5T$OPd"f;[1.,;gA16>.W8]GOP#!a;2icndlB)^)spDXm7Ie>LkIN[eFP6VaL2
%ZUUNtk&8"tX+7na[75A!Bu9(KYu9%"Y%<g7<tug!rmr$8pl/pT8o[<36"/`bo"f6_I5$G<)&$t+[q.W#Z!M@9*^?F_Lt+9fcbSu!
%&C/dW-PnOif<ZU5aQPD'/N6&84p[_X;8rVO>i^NCf65PV02FnO1[^q;.%eg,'^:T=?mUq,[iKEc4d\MIMuR6j"NBqH":*c>S=p^!
%lm+Bm!/8YGaQcS+-<]BY_*,m"r88O&MW%sd`*`aIQ5B^n&=/3j,i^`%/-\oLaW6=3-7$)Z3p,sLKb%f#Y&u"CA=L.VeF3bb_J^CB
%a92LU"5h;CVTQMO0!Y+hEHnXtPk`P:3oY=>[[.b)THfnNB6<?S\dZ)M;>iFbQna<UEcq0,c%Ae(84>R;E6<4KELPWO;.@uc_-dd"
%2]44V_gu%5?Y5iIeu;[u<_SfSAI*0MU+sOgBK::M/JWI'%-U)/@CB]9EB&k$KtlhH:9S@3k9ff,'JUm=50$8j$[8pfOOUVN\]V&g
%-teiaY;>3c#Gr+W1-'jtZJCp"jbb*+,2h.O+tgN;l.$S][gp57H2;mkVa![I-c9V#@NrLjHBN77lhO,C%.QM,o'F]EpLW_T7UOVs
%>;U5d]7S$>VW_HEeoq1;[1fT8Pu(:Pl`QKYDgZCHWr#[14L6/>L4J^Z["Pr9!HH%=8Dp!@>1!sD1EgOG2aB(tpe/]r6E,(;>#$W+
%#re5S8#NO#o'p]e"Mrc6%mpc/k!D+@p/&3Y4@gfN%?VirBHdg13j%bm1V8&bPY?f"qVX;l2XZPYi!]#Hbfn!u^806GYRuGCH#-R]
%W%M69K1=EGBK.YhZ^Y)KbfR[Pf!l1QA6BO'OU11,2RZPHEFLMG2E/#EZgbr%9/_9:/k,26m*9?,ak4\(0BXb&X^E-.muV-om`d"F
%>mhB37otd>R)?=4<#(@DVoiU==R8E#=6\=SpSb*ImoTfkIg%7L[:JIV<)f9-hOW!RaQkUMirsgO(mq][G?Nn/.1bB.94\3cFDnEg
%g8*ug$O@'L);&%_+,%Y\pOKC>'YB?!&P4*m%n2K)(o0F6>sm>7*<]LT!p/#i3KEg%a$.:OD%UG\XiGJF41^T7m::)(+kGM&>mro$
%H\JEFd3S$tZSjeh++.p`PaV->$/L*F+2-Pq&Z^F:l#P-%6I^:"-5*30]`KQXmuk:i7`7Akn$$hbNMWXa,m#5MD#]He%_(;GMo</e
%rA4=s=GO1ji><-G^%]ctp1Be:,ieNnTmpZp/Xp*b[jMlr#tUT5E'R*\*6ojrQt;&<irj[ArV,@p0IENc6[2.u&$!EJA)e^*Co`W@
%J>I**2`sa6<C&bUnA9p+"4=0R:1\QdpDV@NcZh'@=^-:dY9O$VdBE^\",hFleM,s^_8unk9\s(T5/+..T-nQ(q%<(uV>3kHK<R;B
%c4k@lM"2Sd[3$_dRPB$td%u9>qD&1_'`qj$ZZ^U7:a1Y!(P`Ai,_`h4?Q#+P[fXlt`3K;#dJH9j14qI[r6HTuK*N^B@lG+4#_ua\
%kdS#cRUO->N!U0o1cL".DP&3#k!_*22C-=mfU.sT@kqg/oR\2OrTg<bDl5'GX*f370uh:l3k;r%,qpesDa*tP#pr9[+t^!j"8HmR
%NX@&%4]GcQ%6Uu0'j-N:ZnTC;rf$1:!>)G:?XtXOAmXXG-fN%<_UARbN&9O-d)aOMd/ZEPS$BMJ8#S>Hj@/<MDu`ErN$pa[D_$E]
%Jtd&uIjm_W_3:oj4G<'.4d,,pUH;**%'V<`?Y.)VZ5'RDVfj'$*(4#)+*[NZYL\rO\4?5MZsUScq6\u]lXTV([+^/_`R@q>.@[dI
%Q6!Qt_p*-AgHKfohDh3JC^(UkYhIQ0&RkS'A".PqSGtm:aUrN=FR&!kXOIP_f&l$`2;nia\a<]R<EPdmMU6&2(h'=klS&MGj9G?1
%'$:fW:NmX0\l0,aO.?c+kP]Tf&,)G83hP&s4S_p=&Ji0e(I/WYQ]*^=\C^(4_"C(@>F;&f.g67Kl(YZL[NWjiTT8=9>oPSu1u`]i
%4nq``2Vr+87gqsajY:[*h:[<=gU!o(^i@k?7BS)i`Y[P.ftXj4jE)%DF3aGmM@(c"RE6i:772%W0koQ7F4P76iqJhY=Ii1#!>p-a
%"9Tg"[%L-sW'^Q,.m8QYV%76g.4uFA][!)39lS:(&4_l2pE47]2]<fO+N,<!c?7][X:Y4SqB<?+$YoM1_d>eoiE?RH4bf\jHQim]
%E5uoI079I#mVfBRK9<i4JMBZ9&oi*Idq[.gjF,8?.GjerGg4)"I.^9f95T)^/./K#YJ`%c5l+efCOp&4mG;QUPb5PtXeJ5:LV'Ie
%bDALU7j\s;j!HAH#s6;T0FtGrA=NA%'f/4n"Co:*J9CM`WIDDX]LP@O3WB]`JplJX$X)<NZ5R@WN6]!NDs5m[#Kl2/&(ST)D>/Hn
%`B+cQbG0i?('Xu1fK)_dLA_l_3^8nnG@t3^GCK)*f*Le:67^(#m@Y!@#b!s[jA:kC#NIB4"f0V]dUI<HL>:f\=_.-[0,oKA`BLs'
%)Yln*pdkW($H9D%-l'lYph%/Z/Lf5c5h3(ol2l_m)NrAS+i%.'[)WfhC`U$sIW4k]OS>!<aQ@4YK9L\_.&K:ZE?A8KZ18cjpgr.$
%6euE6iSnOFJ@78T&9TZE(-`3$ksZ5(>`0=u6+;BO"J_Y)<6':F[?JDIlO]Sef3@c=pVEEt>T#Ul7CBb$$-iSk)6,+IRndu,+^I2t
%g/Y)uT2KV$U(UF+.5Te2cWBYnq/G,N=\][W4&$`IeNMm0Z[)`n)H%iZ*BjDf^SHZhKOsOD"[iRr<C%,"!KQu+d3&%4jXSGsJVnZM
%A@JfP`X-MoBADUL'l4\k:.#A[rGb600+t@N^kZ/+mLg<*'p!cilXLeq%0Sj<_M-ImD8a6#N*?p0cQ1!Xld\Mc@K/j"Ge"UAfLr#K
%NSiV[>5G5/on(*W:Z)q!(_<>"FTdIqck)0;$s/[j.+i1S>jEYA)5\."qSu!AH(6dVQ*7=`%Y&-V4p+]1n'lf0s,V@=29t1m_H@?/
%h<Tm[)AokTc"FT`+FUL*5_LjiR1i9jb=$`*i[4DK9i0`0)n>tSD*WU[G+FpJ%KHQ^C8]\mi+O>kgcBF-+!N(J5J,0?J*Rj<$)g$\
%ZhB$R45li21][ak!*%U/JkuL1Xs5gTGPh2ame`kqOuaeMi#`!\ls5Kj+=4Tad%3N>Y@?;oO./`O"in?"!;cK/II98lf_^Ifi1^7;
%qBqnXPeUPl4QsB[7"LL0!f)SjK?3<;'=YOHMdd'*;Akp52>)D,IO;0$<SIL)qY90JkQ+\Ce_AF=F6>KAa<30,dN_A&XF_-1gGmu$
%['NSKRXKc;)Cp1XM,R9Zq!j4<h#0rE1YVEqRo52\U)gLld*CM_DI3#0oD@>99uBPAfWrM4%RQZd^''&@WD.m:K&j$L2akq:!JGW^
%ZGAR2`773Ep9XYOpYB2k%:Y4s$^-00+OOi,/oH6`'i)%NEDQ"YGXsDb_BS;a>XmuU55/BT!.@_%'Y@<KT8m'e$M!5W]oL6NB(5l\
%+&1@BjGW!6II98_Oe6JMCj,r.U/)ao>R3sfe6XWXQ)S_&Tn,KMCNk!_r'!@FUsI>DeJJDPc/)a#OXNd'[h!_noT%k4/_8_8%=`cb
%2Ldf0*[MbrBIqBpNm+kBdNB?3f%rDcp)2>AiC6k\&Y&"(lG@su#59_Q8M)+2fmT1la<OXZW)0)Hj@q!8KNOcomIp/Kh"=DAjG>Oc
%qLe>s@+2<!_iu'j?<"t$<;gs4&p?pCri]_Gh:/-KNJQi6!Wpr11JOH*i^uNth(,+VjL&(q4%,4R"+gQ4?XWAYZ$WcqcWT7Ho_!km
%(pBn/MVqK'S_s8#P=:jbjOhPoYbUM7+8kj+#:C^SL87R@[9*?i9tlt^%4%LD(VYVjHJrR@Wm&4C@3\Bh&\EU$l2NnSCIu`Td/8dj
%L:!=m?n2l%5X7Fk"8A"[N/L0$'O!=4@s7j1H_X7e/`fc0fD\&"NC5tG4g_3&_*X?QR>ch6f'03>\1^ke/2<m[L^E-9)^.kBbiu2e
%Sr.rBOOWCZ;3tX=_I(0cJRjJ3"*HT0Z.;#]V$.dg.CN6$l$YU:+si,jYb@@4"3cKbB`rSKq;7AHIYoX6Ot+VA5[O9M\$nR_!Ot+Z
%)(#`'p(,o$&)6fAJ23"tV9fWPMoea)%uHe6oI&-4$fmeC86usB/UP@'"1Trl5,7h)>T@HgXmu>O=,d9S]O<CMQf)A>D$M:DAi:c7
%F`(>-5h*n%`$3LjTqR/..;E4FJC5lf'$+Bo_:jdRok.Q8;-Z47Lg-UqDg(8-LqK>!CpMd29G#h[!s5(E*sg@:*^_DMQDCg%14Zu_
%CO"%r^k,fo7sbuo^r9*^RQl.55O/+N$Zf1`3eE,Am<+Ru-a=_Jmp8>hGL*)(BB.?cK;CK<-7M-m%\!O!7J1g)*jqte6;?FP%o#>Y
%.;tAo,$U$=;Y*hj0T_4"Sm$ITlP7cQ_t8j3UMjt5'Gfa7G?[0DX'!7nVnREXiM=K5J0GnWjAY(a0+8al1KH!^R-=*"J7X`am@HQE
%r2tsa'N?aXmo@l]b=D'=FLPh3P"<jU"DLqc&4h%JWI`T]X\7%MH"f-o'7MgAK;Z45:kqJR,B)@ShP1ohiiPc\7d6ZRAi#`(OJPSr
%MJ,ZZHWE"8^Hj3t=7%9ij\:r]a2$i&36ln8WK>eho@MSX.>k-\a:oCP&TH,7giipQC2@pb"+(Z8Y97X?XPZ=96urXef9P-0pk#*\
%oQG=BZhE0E[JloA&fX[Vi<,C[;B5b+Rj?V,f-JO6M>H4ke7<3S:,[3Xg9DjS%TY3o\<DDH`Tnac;;,nh!qp\oH"W6BXPTaX`hgtj
%ZbbXa,_8.OJ-m]omM.BPeK0itg"k@bQ\P2fda9R$l.njP?/mo,iGHsn3OME1-pCWff%c-Ag>AgXp,%d`*RX4XCj+ncf)cJ9e=P.t
%=Ar""N=SK*l_]5f94gbNaORfoE^=(cFi0d5oi'TqL,d7"G.<Rgqmi*@3+%nqI8/1bcH"\kG"ge)S"dBIC_rG"XB.mQSr:UrI-kq(
%<*n'J?oE3FE$*e>2$:Yn'>/0m4fO"cE?#01(B6GS^,Uma_negoP?H*2Db#.\2&7j6f+a.P'C,4rn(3&5E0ifhdi%6.:3m3."]pf@
%Ed@cS=krn*$4^\pat`IOp0E6M3/d1m9j2n3d<bCtg'I*ijL)d]DmUt9<<AgS=*$:OWJNf9"ITc,:Zuk2QfX.$?E\)c#iq_BU'jhX
%WR.$:0l*OPP,\<f5h@*U2P=6;hk1V3cM'd,s$si6'(W*f4IWreV@uXKLIMXn_5LS^0q;:6[6C]pbm^$K$)I@0/=@8:T)&h2S3/f`
%MQlrLB<nTn<]35k>"i`d=9&dpbCsIPJp%?KAA\PPAn9Z\O`dDOE%+b;=I)S'?Iq-,NVK(CZ%UUfC$bq"X;F6m;r(%P.4S+%q._H/
%5t@^&DG5>\;n`OaW_o[@eBiEUkl]-kR@ros#*L<N0$NPFLs\!K\5cTWkKT@?@f[>Pm@Ch4Wt@b?[-%^a"AQ3tW@Q2B<3>?JG5tBr
%3@Ij$BY.Q0*(\j#AZ28J;.C`f'$sg4>2(PM);Z&d:q])#Mepp^JA7OQDpTUV&<b&9(98)2%J$T4cT;X^X2c]5U8Wn]oE+3nn1;U'
%PdDbDm,3&4-#d'm&RksX%d^YIFr5ojD#5=JgW0\9eS>P^"EL[V,miQd9dX<I<Fi'037c/YMZI6D"D:'\X(*,!AiRXiW1(q`e3O<L
%:oA?ucV(?E^[5HTE^NIFA3t\*UYjr-BJ.b#GWP>cm<3LC$mjt`#7T/d24P-"_u:0N+WH.Z.1b(81WgpAqF$0Ak1S'V%`5'M\d5>?
%9No:'cA@8:4PW;G.Q[V1m@a&<HX6oNP_X[l9N5M8;sS\l^.;8eEgWCfm<7N!jkceHVIhr-=/Gm9)AQ+SNQKg7a?3`!2?pBJ1/lW1
%rcn5@YGU(dD-UlLApp\0c$6P7f00Me4"@Xg6oV>U$qW]UVCUsD:/dgmQ=W%SSV1OGgpT\I70fbSR.P<OV/BTOdc<4V@Wh)?Q)D<V
%G!tr8:1c0j]G^fB'5k9eGqc[[em[)bfMcj2^B(EW<>%5u%aGE1F`9lfOi(T>+d@"KPK@&#U`D)ijW-o.!VTJ-D<o9G#o*lk^,Vmq
%()'In%)g`WCPi/ATc>+jF3<EU)KtEXA;,Qi/]6HkU:T#qK#k`n8.<sbZ3D]b6X69]&:?9=o>uoA3fs"mdpN1AY+QVTq:_:M6jUD%
%n^_0\7\JSp0@Ct5[/oqp>8PHL]Q+9r=.?lnNd<e&l2.R&Hh:2UB2?cis-V`P.#E>+(MDHCb_:Hc0\c3CSVOP(Q##qnd":kjZi+:K
%M?VPkmX,1:1+B@1WE(84U'uVqVc+lDJ+b]'bP^&)cKN_\$U\fPfk^(m;tNG",'CLhIkq$[c"2^K6nrWr\!rU6[R>Pa4VQF)\Hh<<
%.Rh&b*^@-F@EY)SW.HI&h_`761FEtH9-d`,Gfj`eV]afGAKMS<<GYr>5?dBYn`dPT$d(D\Z*8.PmVW@9@"u`iT*)HTFJ#N)=FDYS
%qkM,.#qp#d3QhM\eiI"cIdF=sFPM2fIWTCare>E-KNIV!e)%lr6k`bq+7ts%K%C2YjWId`<C)U^TDeq'4G0,b8PYP/1[Z_e_92j3
%5FJ-LbLGT[:mot*#6j)dQ<bH=D"'-:1#jn%=d(REl`Q2!3,pU,+mIRCd&eHA-?%^73^2S?=PTX9&_rNX]]6FGUGXFO>:77((Ai2H
%;S!VO/W!Ue**fs5lA1cq0.i45DNY^gpD4pjb]^/$<%3>a`,5W+PI`7u>MdqHB#eL_+DNNQm+lLsoQ$Ea)+TI1J-1PQFsB]Zd+i/2
%8\[R\63\;_^h0HPr=FLb2$4V<PN5K[S0g=u#i_\!S^n.4laCJBpcZ%c*oCBUZp;aV;ZNiL9iQ^8h69r/aJEV<kqK4sL925%]-9't
%XcsdJ5".E?c#t=ZXja!-k0Z*TMA"1n-6S5n&K_cFEp(,^?Q.`:P+F,`5R&njldk-7(u]X3,QL3e($2.$Mf:`oKtL\F`'e+'?$7A3
%MmMJTm/E,gQ&b,X@QlDPa)S:@6bMIh+Q=Q'FQtLa-g(q$K'Af^VUpQ(MIU].\ptl<qn(/dE8-B=CN)b&,^c<=]eH\0RdJ\.96:Bg
%KdlC\![;:Igc*;b:,B[<Fc#0Hn",ku+fAnkp[H8,`\mXa(9XKD2[H2nAGHs4+PqBj0o?M2@("p^b+)AK7+c;)j,*(rfI%77qmlP5
%d=X*51)9T$#&Ur(^tYV8n\`HnZS,^B*,A-K6d,0+RVeu_$WZp>7bcM$TZT[n==Ap4O3bl`W2^T&7RQSr`^B)j&i0)R)&':[,7H3#
%_.L?=.e.<>+a@Zda2_-Q^,@ZAc@#1>Z\E:J)Jt't+SgnP`:r[5VXJiPIZ'[7iP:u>EWRLqCEKt4S:R3)Tc#KeVS)0gE'm09(BYJZ
%CN5Y806IG8f:KUt9)4G6q=(iI<kQR'I*L%So%\\:l:M^7?<4@Q;KVE#J*lu,\4\pi2B+;sk4Pb*fD*l!`(kYVeh)@);gqDQ)AlI<
%,cl8fOYQe!epPUNj/TmIPig)PDpo2LLt:8eBrF?^Apj:i5?g3]Hokqflh1FiC>8LF**t*JC2V"Wio]f##lX)&BL:G06W\dU0hXaT
%Pcn9[c0]M#>U@"/3=@o9p5-UW/?=:$_C&]WlQhDM##12F4RV*P^**M^h1gp1A/KV@K9YVN(uXek!jI<Q,B-9TQ-?;(Ls=2u__<.E
%,R9rmdqU^ZZ^T'mP&I5b41/RZWDB,oXC:E:eL(8</]_IN61`)c#p<@/1<-R"jXU81JB3Wm1RWit;<C"O1Jc3E,==FY1d^[jaFMuT
%j8GK>".MlkC1LkuIWT?VKGK)2272E4"(_b3quETa1PJCLPtWe3It:+Bp3_.&KQ]L,`uqk%[L_F"cm,#MGd(PQ`SeNB"0,%j(SR*p
%aEE-4"3RO$!H`A,B_HGg$R0I`8CO<KW`0ZL5R?ep?W[._(@q"siU[fKah72TDf:(Wm'8BB&P?]t[c5u4J[bI=n%XDTg#ltf';=)D
%h'kCC+9Af&83M]V=<Vq>(cJZ]e/7T*%i&M=bXE/__nD4VE$J1t@g3lmeVrO?bdYXpE495LP9_r-L9I84MJ=+`TYM"'+Zm-MjaG%J
%<1M23i#JXK?UZ,H;sjiUN#f$s%np+6468>Ql3b9Ar-raV)G^0W;];kbJ$mS-["/bh=^FKR03XmZ`:'O2D<q0g`]9+I'#4UGK,'dW
%oOM+'e6W;B2O_%-Zj<`0UP31O*<o(;5bL(f'FnSoid'H-2hbL<%n)TZTQ+,:EU9,_"Ho]4.+Mfj_MI0aV?NnP%jXg\N(nW=ItAiJ
%#11]Pk!A=)6Vbbk!;W4$q;2t^nWC)NAf.'rC9jVMj/EXiSW<("F7HtW2ETth5AgqKY!3ro6pnpG%*?-;St]LT;qWP[05kl%D>]`=
%s8:djjPf"rr66<Jr9g8M,AeOUI!eNM/u]:pl`+G3+%8:0ZkW$Yf_ICd!+1`Ukk_\[;0P*n>RqeNK%n&REr.N(r8dR$0.-V:Z$dNZ
%r<0^mV4e$^)p-(DA9ICI2QlaVL?5(t<]c4A$$/FrGR3WHgmfLS'/U,<p9fe1!qgZWZ=c`FjQ($Tabs3Ei[j+\mLbi<<-O9*3O1:7
%N-MET4;rLsAT`&Edi;.?cRugk/ZrDW[RRJP'UcOk0$hb`p7bAYXP5do).95,2.t!g7YEfgUHVrLZ)a2PjTU$f?)[+]lsMf%I.FU>
%cMC'=-$>8,-NMO"=?q,h#Z!h).N3&s-3o`uk(/og:0>'DB40#Qg'S5A/54Gb2jXhkg\K.Pn*2&O;cbB[+H674.*iXOTdnP7p\W(s
%;e84iaseb]U&(c@"^b$107!iG.bVcC"DPJ0(g&-kA9fiB@>78@1f![f-(Uq`2E;sVQp/^2T1Hokd.Os94sf];&AOAj!;bfD>Wk$[
%\=6i?.N6*u7#89j&>GX56X1CQ_SUH2s"M/EQl0Yd9`AQN%b^60KD.RZpT2S!H($jS,qbY6&1NXr=:2)b&GbPc=M9t:Cj%ZD4_^9%
%$\_+r3i^6\C6O8U6L9/aY9O,_#2Bmg-it=*8Rf'=*".-=6`WHW[D&=90OcLM5^:hlan%-3Au/mQpQsNiegs>u=AoI1n'd<saCVIR
%eX1F"OAlrQMKD7)Lh.^B5;3_k+!(?T`%hU<Qu^bC3#bt'!Km2\%05O`1rJ7Ygr@a<4U<1=\tN>]*N-Vb6TqI>ij#[5[mWt;,_NP1
%C/f$N$!9kG*K-leQqa%d'\P_reU1cp$DL.>fsX0D)4^C<gs[A13HPYgU$mDu-W7Te0(C@ic9huEE(<<X_)gYiq`d:u7iQGS4b:t1
%//u,p*@!TG6#4)"$KL1hp0.X<q7sfkTme;@-B]o"(K`\bRaHj9=;$W:5S;8sbt9f<(ss81D2L.ZaU\E4eKL8+\Z)pMY:-r7"u:9P
%Th$Y9c.>/Um0at0hk/[:E$k]&qe]03&u"Q2&#^6VfetSrq`en62.ESe*OZ&XdaqIqlU/(OSnH@m[9g*m,YAPcGp1Q5a\?7-M%Rq9
%`SeAiEj=ujhN_VTNK*jrA?H,Jh$7<cIEJmi"Eu_)AHZk.337<_bCbm,RcUhr>-M,IC7ou,S`r>62CDs9$j-]="/?Qd:"Il+6^Y8k
%^nukM8,'sG$bi?/"0\<h__[nC1<)&^,e*;Br1\pj6E^.p6tMEVdT1ne-GRk"*ZGF"cq0@_U)jRh]"#03h)V>jjY"@DLHR;H]>>5.
%48a<QV3+_RiT0TSHcFT=NkmbZs(nhJW)dTjTs0[Up:qp*BGh]h*74#G;@[0$<R@Vn?$H]AGVI5985A\uiV$>'?kCDq:u70&A!(I4
%Siaefnu0/o(1OP+s!+2*rG;YIEP'qoSY>O=bh(h&OX8V>$;D933+ste&H4)Y;EP:=6Zts:m7j[6*@J.9F@0_f5m6DbSF"+Nhm[t)
%=TMbgD]i)5i]A+:.'X(:HQD2CCVKOi<*]m%DCd0kQrJFRdt3J#TK#BN9$"?SA$CP]N.4HCD\>Ik!,6b`(g.$9<U`lATl!mmAsTfP
%:uWB.)2-RA[i<7g]mt6!(%i`6\8*YtU[)4Qakq:\K/dI\)bN#[FkTjep6oDMT:3Bf[g().d`A>Ah3bl1Gn(1(X-+cd:mmbYiG*+r
%eEsN(5>n$fS$6lWp!HMP34-_<A\*\'%;QAL3sg2+Jk^OM3PY9-*E(7D4C@MCmRq?amX7X.9L`B%FnRZ!GEnePk7,)$n%<RC@s'mt
%_;Kn.J]')T)iaZ]m3UB???c'];e-`U:*$^_DT]QEBJlL7[m4%mJIp:E7PA=K9"NuPoC+ioZN<!]at[=GTuu\9-[jI_YJ,>2H=b,d
%em@q[h7:K!5.0+27S=_2[Nl_cYc+@FFC6GkQgLctrV=995.BP5f?p3+l:*.r\Z.P+?qko2\>q*f#-;gto2SG.82L1]rX8jt(kn=<
%L(061(#-$`\FWM1s)`[8Q\mZSGNKN6p_bh1g&1hGg_?jhZhGhPBepDjMM&.H%A2Bl(/%#jfmF!abS2c\&Oo"/X,%>VHEHJrGlH"_
%SSWe"`KEG]TqmB.Rb/*H5-Uf5!5`]Y*/skU$i2/qZ)"Ji)tfa=^d2g8.QcQFf-4+80VH,aZ%=!T<`#4(oTU[o2-$b"O(9*uMp8:$
%Vj.o\KVgbt_(9Ve'*:#411\SrHJ'K%)mhM+^6%_cj\iX1=bJt)6$Ct:f]mW#+9kKjN>ngR*"0-uh3BS0Ji;P[YglbMY3INZC9"lk
%((I;'eA07^/o8f.-sZKd:d),p*%tDHVjoM;/4X_TAiaq3!;E+,EP`b$$eT&=&5K%`m`l]7Eu]t-3erh(`If<!_YpZA7mMXsZDK9'
%AFGW2@jPNVKT5TA5]);O>#miL30-`u)_/sC-CJ8P8&QeM"ZYY=)#`8(&%LpQ>[iVEDcrMF2.TD$%22k8K.dN;Fmu3>EthO_.W'_d
%huU.hX%`o'kqF8bna;6(4Nm*a_P%!s!'(VlO@3W"(IP;l+7ZcQ*49X)%07nQ'GX.Ro"jjHU/44n^d6_N72PBAmr+!qcn>/-;Ju-B
%9d9*Ig8ScA4m3dbC82t=,F71N@M%seG)/W,?N&p0mXOt,(f:@Ae/E2KWG$9P)9e@?<h51oS1TF`K?>%(b-hdNrIl74Gp8Tp\odh]
%IfZgMUiBT3\<O5Rap>LfFU*56X]-`0.!AF^gS,`gmJI0ocbY=c0&?Np?dK))2aWR:hD_VEnraF2;6"^6-Ofe88g=ENi<\_ie?0Wj
%Z36?I4`UN!I_pU6'B8]b$d@.>AM&P"<Ddt("@P=8&8`d[b,NUKjdi8FXSCAZ<t+eectlKLF"\!i6(S3I1gKF5MG4k?,Y@A4m3?uT
%mRuVoLU%jQlu!]kSs$SOpX,"!pQ"7b6]HWS@2@o7T5Lae&!9[i+H@!c4kYDiY2pF`Hl'KCWE4lFjikZ`#Y*1VbAGR40M>h;o:1[!
%N+0\KgKO*N#%J8>`fG1D-jFCZ2V5PgmXF=Pq<bTjrT"6THsIo=c`nK]jX5O0,e^c5:C'V[3<BjJ#ujW)RB(O-h#HR4N(C'8aiL]P
%A<YiOh4Zdb*DW?+f].6@_sUIG*[L<>i'+)k8:(_-^]2XN);mZP(BXDb!$?EK$H6PP-Ks[XCEJQ:9;1SWoF9E&3:9bN6k\eQh%L=o
%=hY!j#+kj_lE8+J\m]/C2f)c9*jUqD0>jpe?3C6f[UdMXQJ8i1BD91,B:,GrbtZE%Vjd[lc?WLcbVG3(5)O)p@gBZqXZ#!'YLB9'
%rO^5`GkXm0f:c`H=Ta$:`.o(#Z)r@qnb!Iu#@eUhZ#sjc.+3a!,tD]?S0R+okk]EE:5JqgPNtetqL\UZ]lO,d_u@XRT?jjXC_Zp@
%dijb7Lf(jH1B@+\i:F]9pA/k44J,ciTG[4o2#:p)]]-!.`nSKkk,>+c*ZR$c]DV$T=nIQWmN#R\.AQ&e`%&*0pNgDu<6rR9'-%&>
%*ro6@RHPh-b;p@"HiY0(]D<R;-7XrVCotbUN+3GK_\nGC,NQ+8R`>q`maGO#!0/W,0':*S?:_!W-Rl/!N`^JAMr*AO]YSc&PV1hm
%^7T?_3-k/b^Sgke)'L_V\H)&R0gTR&;T53&YW,^I\_Eu934n)mG-HRac/dWh9IJNph;<Z>85Ud\hq)9tKQo8/77IBIO/&`Ir:\`T
%5XnUXIgO]sePu-&EqU'BUdeg1*aaQ&4YaD#A0U>&,5"pb+\8^rSK^ZNWH6N#g]S.IY$IN=;.C2W(QAlDGrFfVS50aX1IR6hVeA*"
%H<Pm0GujYMiV=&OMG.TU&Wu/c*Wp0dr-$L>ZT9Y3r.F/RNZUpMfGIabNCS]6.:Bti;`.1=7\HGU>qLA2K!Y9n-[P1?1IG>5>]/&n
%6g>rM^c<Wlf.19GmW:PKV&/hf?PVNpZE?L[DeAOKJp;00OUBln:t>L%1U9hVZ6NPtgAf\/KHCGS2K!UY`_[qq[$H4umXi0(YTO3H
%e\qAkA;thA(IAc^bro]3P-ECPF,q/ZXZ""OKgXlS)J.-Rc<)"j+]Gn==3fcgAl.^<#,)3+$o(ldP40%sP'/m_,`pZ[cS_g\,LId_
%-GBtA=>`-,G1,Ed*YFBX)FZ?Mq']!4ea\bV=m^*>fsfE-&I#iR3-@K']"l-p@sP1Qn-Tsn`24F\`0S_>FB6aUaW50:MI"9FO94r`
%!;aIC^-g5L'P\9VojhmNq<i1)gmqB;'jl:am`uZ'AFf!GkFm@&qD0cZp6J[nWJ7A07V^$/.uX(.BPk[WfTCPU#ZeK%dr.6djCJK5
%MJPin`5]S]R4[cE?\XMf&t`'<+OoN*itu9RZWpY,b2BX43KCLMaV3Q72\jfHMe(:%KR_CV4B]4$oPPPN(VL#&jJW(7-4(j&'[OMi
%3B?/CK^Z=],S1<V>hI?A2&CZkm>ub6CkG.01,<&#J/qA5;_(k<k9r/q)-iY%gST@?9BI"@_5Y\nW$6%cHBB5TlgK7W:.#g"Hb@6)
%G`>05cWN]@n890iZL$VZ)rmBR^?$incYL*b;!)IJ%QT2<3srpE?^jG]du'i]`E<huN)%AeJOI1!@/@tuY$$/\?lQ02dF_%jK>n=M
%i<R-8?mZWUEKV4kOp;,:*/;Zb/R[&PR\J8pTiIh9)I66CTQ.28%ZSYH7rMph3r?9DTE4F0BPadMPPbD!V8c,Fnb(i7^;^f=TeMA;
%Qb?5AHLj-eX!1:-U+lE<M?IsZI+*MuN=H.BHR!&o[cIbt/9/K<TVKf$/nLJV<WLC0&5Fb\+:[[@Sr1mK9poCt8]_^X[X'\5AOqIc
%#Ee*'c,kSrSO2sH=p'lEh8KG/0=b3^cshZnM\JX519NTafr2.o9I5b[#+alTVA,piJ0ig%[H1pnMQ,Q-RoB*VH(Z49*Rb<)^<kb]
%[oe.p,>b7-*1D9UdZTt5D[D.uHZam'd29Y'YcW?]fqs(]ec8?6M@Gf'44G\?\:Gi]_k1]5Oc.rRaF8oig0dIj$n4niWWcRW_-CJ1
%\uuaKLA%LM>4sBd_V;5Q@TqgAA;,Cc./L[OT'.CgI74T'>>]ksV-XEKe9^ofJDJq$Xh#>ngI8`7$+.HsU5tp0!PNa<8RL.?OMK@J
%O(6C)g)k==W7t9JK0sS7)*cUuKk<6AFiP]#4d)+dUJ#>oISsY]8#'iH'99W+"QAb#.g%;"FqY%r/Nn?R%n#]/chB22&[%>Z4T'%M
%pXiG9_d@Z%A_4n:O,qkJe0j!ch`&?mX8?]Q27Q$CAZ+@.FZj$hMGmt.)JDk2.-EKbYU'l"?i?p\Ir3CqQE\"]c2.^5@>Be25G!jf
%$*KJK;6\&orIrH?),,&3BOMn$JC1Y;nb:C8raWBNJj[3cZ1.oP.gGZ(DdqL<r$\NVf/`]\6l*")ZY<djem6_#&sb\KF4fOT!"cD[
%NKP4Y!42pGP7\Vgd'k[?i>N3hIl\OfDnc+f07N`ej*1OnLMou.&ZtN9qu#irs6cBVq">N=:iPTQs0@Y2QYL<_?if#;di8;G(Vfh7
%gOK7`2a@61?bZR-8,lLU9@and])7'Tp:K5]mZ2PIPBZrdpV/`%+(/Gks13=Bs8CblrqO+cG&Mm1qo;ccrUKV(rp-2kqnp-N`S@)j
%>eJtGlSS>&&+BNgY;TI,l\eF8p&"4Wpt[kNs,TBmo:$i9q;/l_'^T]+WLgiks0MSM5qDr_Kta]b5Q?3s)m*Iqo><MZrp[kPf).c%
%.=Ji/eqkAr0%hqpV="&q8NT.W=Ss<L*NpG)pRcH`+0<kk&_MY)qsr`A$MjV]D,2);*KGZ2g&\[B%q"+V8:=XoisiZKJd;0q:G:QH
%[VpKK#Cl'_%3P;^FFMb\"6JXcpKDGD$#=YCI@&^BcpSOobAq)9eBbkam\%\W^"0cI]"ILLoH]5nn\:NhFT^k/Wr$n6e6!-b)X/(-
%9%:,A*VbL]&r?6tB<qpD:c0F*B*qH>O]el<\q#'BGb#aM*P!5/>Z/qbZRU'5'X!-3<#Kt^36^Ktr%bSUGZJAZfn8:0Z)J2/L1V,@
%GJW25ns_o*>b59*>(5DLJhMGJoiF[1I<djQPi\6O#e7="*m64d^Vo]\;tA29.cDkZ<!?M]d;[SY[@R^\K*N()9Rom.FL+uaN48tH
%dkgLK8[e5XW=6k:Qb!prehPT&3H?-Eh@'I"_^a,)ODg16=g&#GpRKA/!E:no:e?(^[A\$3-K%6Nj;XgU-g?61(fgKp`jN_omp53B
%d'*.Zl>MJ*fnP:qm[!bkaKE]JoP-7-,9.nEe9%sq_=`to>uk)kb!Hj-qTskT#%LhsFZo)Mb&p^RQ)cprbKmY\YD`I<M38nHa=#LI
%@Du[!l5u4j$f\*c]_E'Qpa-G>kp<sOdr\/'Z?sj[kk1$sXBFUV#k+/E,L09=ld:e6r3\nNAp!L=KIsAs->ub5M(A,5S@UL:%CI'`
%p>4*TODLF:bDBWd0c@r]K>)bpEP.ub:`>2PGpfV&fU5k2_\!G?"hMh!)/<K1q4jS:<;FQQTOCp!BSDZgWUd1$3IKE@+L]Vs&pKo"
%&/eZ25Pi6TXkI$OapA)aa7(Fp<$AKTA`3ENW1:$8LPe!T>_/V,FIV/f<10gc8gc,7$DAH\4Z$u(k>;ZDRu9%YLu[3(K_Ws/""&9G
%2.jh)"_oWL!je79/e-N?B>mMbjqs<sK@Nb[fm?*N`8ARt>1nj+.QI>#2<aoo5266Q:$RMI>-h;17(8_?#pm3!;"PhjHQcQQD$iA:
%$)p(Nb,S(bj=.2T-Qlf2F/A25SZCCgnS=+bcBD`1`]0hQf!.kl?k\2%`"c=%KF&X"cn'@P_-':aGMlf<EriAXr9FKOZ$KCb*3Q;&
%pk0*pe$A:W8T!"R+ZmQ%fm%5Seme"PqePVoLt_G!W,5K_/L%%^pQ1E@=cT<Wp+=6se^Y_*PsmGTOh;']I3q`b)m;9345-c+YcF7=
%>2rG2?ehHl*&6?J,8pbB->4ZPG%[_"G1,2LP^r"/^5M9^@N^Bm[KVck2WJeojf'tCE[Y!JYeV:8:Q;s[T#^PJ&8UGB34ES2d6<cP
%$Ns(9-r?CuXdC1qWQofK[$s`%%^/]nf+Tr^dbjp&h@@;FPErL[S?a1@]`i7W3%%e-*NN1KjT3bG^MgTco(dsMpU17E4A((\$,,`m
%bFg&cI1B1*C0[*IqaQ\UiPd%Lim:eC*li7Ga@/XmfMi1e*>5mn-TlY@5X0S`'ijONOEkRb%8c[q&f84Ze&163!!\_O+WXrRNP0ki
%6Ehf2qg\5u;e^Bqg)4am5l.]E95a5nOneUfNGc-/Z-6_3%^%G@3<d`=-Cac>H@kZh-"G"L>$FYA^/AU([f"8,U8:%'"/dT<n4USu
%$u-,i5r>]d*95+fc>MqhKm>LqJ(;f%,=(sFI!S;Wr0+UBQ::2i+>@TZUr3]ki\[_'"N6a0>X*lAg7X["NF'#:8$J4WbfU(Q%\b].
%@)J/d1@@n3.6=0'$Ggk)Z@H'Y8^<Co@V_#IA82m;bK69YPc'<"9!c9NToL?+VS@_p]08I6[9_^6QqstY>j/K*0CK+(!(%,MV8nsZ
%=Ej^WN3X?Mo'U\JHKTZX_()Z$#h"pB;@)rX3H!*se^=(NCNK\mJP+=+rA_'@=HhGDWVr4maHM^Y_NM9B:0ON*B$UoYj'16K)f+1`
%c;7/VT>$F@&4!<"$F6e//9.te8>&"+C(oOtof+MRJ"_(X,8-M\k*Jp','uWo*]sF?f1rNNo,aT7@C$'B0j/#37[F[Z`^?gE;n;.3
%kQXs0>s."eT6lEW!j`;NTN-WsM&M7Bac)Ed>)Ua>W2ce.E!Q@6^._-#lcOQuaa6:!$dc?G:P8C,*$5/gcr^%NH]"p;oTtZY4&1__
%b9MlLP+'6D:aLgXW.`r5Cr_Ae$Do5:b@H#uci\)(coQTiP?%M\]NpuB1HJn:r3Q<B0heC:5fVO]OCi#'[K='_`"ulj)O"sW5O9b2
%n9r8$eNbMa3XREW!;.Z+O[u0E*o`:B![uh2.J_41DMAFenFTlLOANS$\J_RIEHBA@rdMO?W2nO/0@DC-f(W60qX"Y39b<d.++*-&
%f5FXrc"j]H:SsbjTs=,Irkl`7APL^__UgnR"p'?[lX.CPilX[$Kn/S;>OqD_FsiKPb?iR(it_cNAKJHOC%*Ci_<a\r3Sp?bon9ti
%k]#[J+Aebp"*T5=-;.?VQXY[i64TX^)78S,ppc"F0>6=#7%h(U-K6=Hbj)'/#iqRfgJX+*(-4<a^EA0H2USoe(A5*0(dYoOmWB>:
%+IY6'>YB_dm*Uh')/NVa_!eKp,?aPbEk>QDRUZ!UnVh#%HbYkmQeD_cY3>pSL/9qdUF*rGc<pG"cg5/?8q2<[*V+J?ST#iN<eiQY
%d&btJon`Q?(8HCH@^]^bHPnG7-/eWbQ'YNp5<T]92Fsf'OssuF"p5_h;/>q7_o#]LHg)s*XkSNa%!uDA*g?_q*d&kT,>NKe1r!jc
%4K+m*/_#`Xb7s24L__H]p_aE-5<>ZTEfV5l!2h6!>G@B,-*n8l*&Ot"=W2#X3,kGhgCfRP.!@(tW8d/@7nr9*0asMc4M;!*MROVF
%7Q=gE@rs0+qOp!YB!b)A,ZS>r=*=SF/QbqaXgNG\X]iNO!X*#<LRsOG.:OjtBb_.+i4,;G#L-2*k!08h$$H%d,t6&G6&oBtS@#+7
%fH.WK*2Arg@kaI2Jo*`!,977l>k_'T44GOu73GQ^qh/HM)];U2CJ"Qi.rQ=f3+DN;nfsn0&1_J1UE:]ea:`,H%Yk*$+Xfng36"5N
%5Rl-CMh.UaHK18&EA\B!/gQ.+d],15d6,'GHhT'W46:+tKBisnFuUGjUhJ5Mh+CFtok7djS$j@*&2TA_`Lq1pGtl)ta'kZ=:!Edp
%aj(GpSF*c2aNC6ED_:L_O1YP[Bu%;2dP[EQVMlmEL*/bSf`sS_#K$18FC$48N.ibc/';"])%i#VN5TY>4:_qj4<Hk*/+31teEsK*
%`p3NK=s%<r@r`8ef<ts1P%(pu:m`E_f:efn`s/+:<Q2+,Z!P\8&Y2U!Xo!V_?'o/q-V:V():Wl]J4cT(JuCFA?AfFu5VeG-M8K?8
%=e$.fnA;jsR$+2C/#^6UG!$_7A.,?`&8I92==RLjTT-7R=^]0n$/TLoT2(60&e/#(+Y;]cAg:tg[oT3,B,GgoJ!q>=61PF@7ONaT
%I#)YCOT+4sE1C9L1(gN6;Ro>mae9;>WB7<DUH*XsPU$`1^'>M&!94Jh=mf>mP]]W4']^g-BpM!(,SZ9e/]',6>Q@P.cpEtY<C[u4
%l3%K&^p?9n=9oS79[QJNMgpYRfE%L_8W*O;]&Tu@mb?Kg$]:*>Rt`MV>h+&#NkSZ&jJ9]nRZ@Bl1ZSj<?\eHnO>BZ,_teXmo-hqC
%1]F7>7%gmrS`O&g_&<qtr1,4nZrIfsbu1)N:2Dic"*)VBQn2<--YQ:Pn@1Wipbl/uB"\k2KBq.n?8G^A-KaCUM.Iqo:8GJ_3O,_[
%0F'V74P`)/Hj5f;AU&GB:4[G)9WdR3*[_&ASO0e@cP*,[FH+,e-LZ^BGIOnLai=kA<m#'J4]!8*3Q>;ecm9l_D>UsJM!;?)"7IcK
%SJb:pqf/G]9Js*WPpdbHN+HPh1RF:eLb6#I+GU*o@C0Y!`@VR\X&["=&=?*NVA'!+li>[3mR)]m&Yi6bD!`%&l&'W$+Vba@A1p,,
%UuG3VWA3ql_BE\[iM9s]Y29nS!`I?&,_pc6DDd4`=YPbg6ur;:KHqtFZ[C9o5@7\gSbhtT:_-oQ8@E3Q/"Z\4"]$HU=AggVC5Jm5
%^!-m:+$8Ar$NBc9%(SFFmN)gg%8f!$'[Yg&]/n$uWd1Ni$fD.;E['KT<(MoSL.L)?oRPDne:JbtAN))*@+A:@A"]7hLr5BD0\\%E
%HDK+(^Pl$rVC-G1iJl7WiN93ZjnoLXn^S3dIt:/[9;<es8]bCZI\_?&)CD:\Vh2<T<=g>lK!feQ?"/AU\f)Wb;S_M1&BkWM?.7)f
%[:pM9)*EM6lEJ9oCokq=m((LBg(!5i5jgldQAQa"#A$TFje-dSQ'>,raT5<(`Z25_Z(:tCRghfG0c57]XIG!OZZa;#:t(MrCWTI&
%`u(\-n,d(2):53'5@qlV`f(=1eYCZsU[kBFZ>+9)Gh54p"kIa5:2"R_Lf$-V=>XEiVjVcM6BNscB2-Qn5I([96us:I8fRMqPjY8X
%9KjAYhI,d*RRbU,I>=.T'G+%o_&FJiahRO+EM"1\<JsrNQStqgHSmq`ff8m<i36>Nm%=/-8O^=;c;nNjg4hGA`XqaQ3+,kV$LfeQ
%AX[!'h^8I*=_(IS0!^n&XIq]!bYbX,.k/ifY)u(uBLZ97L2pi.,#8S'Uh5TsK!\#4<UV-$Y0KC6,4&^.^mHD)VeROt.reX<<f[,t
%#A`<aYrt'fGI=FnKE1rT?WQE=m=-3>0a0Zng49_]SSAcN.9`tKnM!(<5$q:FnL*LeLlbqP1$3L\WNg@=\q&W?F"^Wj\dR\a2NTn+
%Lc4u665CE[#0!pU8NG+7J!Ga=TC?gi'Fa)-lBd^qr:F@iiu634*KTk%Sh9LimgWS[fbR5cZ=(UP+oVs[EoLBV>%_[obN2h11sLMS
%%M`MSH!Z<J*5HTcrB6fGj@i;`<2:oTU\jc-8&'JgUGI9u@PTtmTQ,(a_10)5.r/75_8&IZJ(\(`A3eR)#7eM8FoBkGZ@"`P(\En@
%<OdWn#+"QY`tuJ.=H4cS^PHm<dZ8n1rmq,j-::$b-*=?`N-]4gCp!LUnp5'DE&C<n%PaNUOtZ7+o%8lDlI49pM#-u8$[)Mkh]74`
%QLR:[$&Ijsb>s\$1cjM/Yb<'ENJb!G!#^%QrJ7BJ6Jn+,gOd3*q>ILcL3-5?!'C9E%0T1X#HNr9=i44D[kV&(O@E_P]&?.Y31FVa
%$b)JeY.)>Kci0NH'4aQTp]@3sbr!*$d;NC]BQe5BPp@Uad`^b@dPdnf8Fb!W*S$*E#5X:[U-d(u"*C9FJrmR:8#4ttKYK(INXAi&
%31&3VS2T,Cpo5A<JEODV>!L>p<QhjaSpq)u)!hIE&;`eODP1b:e-7U#<QC^=_,ZUR1$%d<p7MSjd6^$<WdG_"E2acnW%#J.2;I7X
%TNr!6rA,o1';X,H?30RPiqGOa(Jseqj5i56b2!5offGkXQVhr]5`Gq<h6joY_]%IL)S(UpXn<#7Et9gaMbtA%rJi.`gmO0X79LtM
%65R3S&;?YG$._X+#ami@E2MA@)`<GlN'kr;h*Y71]*8\&72$7H,?H+!Z750u"bb2*YXm-01+E>\gD,Vn3_)Ln,m+,I!d`Sg!;7T0
%%S2,,2H?3UALfU5Gfq&rq[>>[[;G)*PLL.H4rC<h)'e&L9Md%QV4Nac.p9=]4[e7io3A+gSKKO6X@[541tF6l8N%+dI!L,F0obbL
%qg)B,g[G.8b2#KP.A-,%m^L.,Q8Q5k/,3;r/P#jlpq[T1iW.<dgCjM.h5UIE\ud5VF<]C:fiCPk$!I#JKCUYLU'4sj*L^5)JGT\f
%/+u&?]TgEj8`$m&?uPu$9/AAKk2tfs>8GE:+q>_DAgMu+b,TZQR*U+jLf+[s6.IAn#V<hoZR![AE.UUF;8H9lV-O3!WFF`cR^p.k
%*qe9/\>/.(NggKD/P*nJM$XKXeHjA.<Qu<EKA!9q/?mk:?k1DO5+<hZoD"\eS_oY%*jFm@B["i<pWdte:Y"n#(ZQX7c3(A#HasE1
%E;9TV&/C]qqhV:h>u5HEF5\E=Z*d]&RIde&M1fHK;^,Qf'`/"dVLf:t<TG7DH_*-;(#OCuP>NT+Z:@VH9"#dXCYLV9b<@gc$,!rJ
%SWd"R85.k!f@K)rB4Y'`s#u]s9_6*;d8"hY]!pCl^;K7*[Pk"tkiPTi.hZ>jqlgrA=a1hW[EY@UQ&2[LEeVNDCNHHC/>g^M\8&?c
%6Pr9*fqH^\reW7W`pkJ`jh,8'X[nF-.IUpd?7;gH]4-Zdr:7qI9P4dVAi24*`bO5Y/,3Mi%F.El.b%;V#-Qf)br=N<N%$LU*GKFW
%V%GQofP;=A2cOlg,!d_,Br#CMRtc"b1ZDJu$G!f:;oGf#l)sgZZ&KYs;mAEcXZ7Hk+DdOT2g6$>Y(WuQQB/s2<2)7qQ;=B9W37n*
%K!/GCo6]4Jb*$Q2A%@9[I\F+mgY?RI,Y7^%;/H3jCHq^(C\g(6Cl`JX/(&#UNu\F?!Aq^+H#+Q+B%qVmJlO4eO]qA!QlrH[Va?s,
%BQ]FHNea+R)!+0WlipbrKWs1A?D_hS!H((r""1:UpF@@R,.cTB"B"+CRPojk1q.\4=iB0S[!;5gBf"Kb:ub$uTD.hr-^#;78J-k@
%Br;9bH+?_`HD!46kuKNrnt@H>m69:b&.((3a`17*T`eSP]8TYta$)"gi<%i4A;ufG\JXkSNQ)GBa.<RYa/175".L6`FDMeV@KSO.
%_0AMYR;R64[^da8!>&51<(MXpA@C`j90E%IjXQXG%F_93c8t?q9C!4afDkN2Hi)\7-%b=pQ?ujUgA4""0T@J0U<rQ/JL57>6U_hf
%Jun=s[cGVj<t@B]XFl99f)T:^auPG38j8+FlP)\Jnk(l``U6fOQ-+[JQiH-;A)7qc&@S9C.=\9c]g0+IfQ_j@m'<L&(`<BZ_=?kN
%Bi[Y4'g,,BXk%1.Z)\W8mCGORj9GsT#Nr)(i=27Jpn?^f2lsJZYK01b,PCj\H=3-mIouT4qKC\WXF.[+6(Rn"+/=_'RpL+P73Pn,
%(TkIGb6sJ>qB6)l'<k\<_hm0'P!BgQru+Ao8u*dH>\f#2b_$Anq(f7Q5grQqj96M,R,>XUK2+>XRd0,Zi,J=?qnKgbJ+X;s/s#G8
%%pr_PM`Aq37L+YTm+#l1iX'@jXtuf?leK=TbOW/4@S8aNVIT-i;Tc+j76W$bTI`hk+kmN!`]F6iR>WrbUtqA+X2h%A73G3@(prE9
%>,5u*eLh(h;_BG$RI]Mb!D)7\adcDr6W&0D$*'Y4g"8;6"@jr6r_UFdaL-k>DXL_FKi4iAn>(-JecpSa%mD`&/Dg&V/?#"iN!]$n
%*LM/H#=%R22_\ik5`>oC=7>;5kVOk*#_l,XG!suN[R3@sJJ[2`$gN\Fh'Q\bM,L"d4ma:"me5h7/"!0f%oJ.m#V7X6nnd\loT4k5
%"b4?$>Yl:)q;_c2=@"GNjq48Z30Lbj*hp'nPFDRI<cf!S]$%Q2($aFt&J3U!(CS"jeJm[;i`]IUTprNN<m0R>.Fspf2H*E1#EE]_
%QlBTiId#p47ZEf30S;BokjGD.htq\RdEKjaa?sW!^s^qcCr!=;]ao2mfmefYO:0,KOa?s)$4YToqrJP@XHOa-[2b1[&D5('\6H`)
%pL&\8In5<85\mYq&jG9VO6>J;X_/6fX;`\QDC?mpU20&:H3/7i.E?N+#A--R(On^9H2IQt?FdgnEDDS`Ip_Mu*%d#&3:ep-/YDrr
%FVs]lC6\hA5_IQpXkfjp='`jaoRhF$J8r'Am\0,!S)F?,?85$Yg,=r[:Z(-'9\fjopgAfR)>Lp[gG^>F5Pi>hF0t376sl])2l'!.
%4J:6YqK<^A@J8g*$>"!j6cM(6boHEih;fk7o\HsFYRAtAQk2cd?8"`K09]lP+muEeK%))K5!`%!h^TiOJTV=ad4dJ*'[Wj*R$pim
%m_\Y[/kt-O#XWpl.&1jKl<<%u"U0BFZ;jk-(l)lmq)X@f:nX,,7nuQR,BNU.L9?>RB"N+[_VcPE=ik9+b^GRUXi]6W5^#t%5OK*$
%6d^HC2ku8S.:-Y=WP7$;6#HlG!AsDPV&t=8YAUML:UE/D_"'lNK*&<OWqb[uQGgZ=$j)9i]i!kUaIncM8iJFb5ho`I+IJOUoAY-G
%T1@eA^I@cD4<Pr,3%[)&KVc4A#8Bo:Hk&"QpV6E?3<9K-.]/`PM%&`(Cf`)WI6N/j#/VYm1R-n2W!2Wb1#Eic?;:beDga=`=@C:h
%@QL^e'!:YW5;*;^:J0RuP7?CFWBBG2*rP`o#I!(s(AXDtUkAc^,u.6E_Us?!p,:!edocC44BO+0fT@PVAR@_F<6!esp@cU2p.TAu
%:NtMT+K`_j4'7(Pb=OgjYUfdoT_0nt=[@GmbX`-ep4=t?l#p`#J<^$!ER%1V,fjXgI$H7<<B1Ph!PA)X](nga2H[A7UaeW)9qqcE
%]s'#Z&Y0Xo&?4B-(AdreY/YG;J>%9,kEfQ_TgD%/D*Am-_6%W17-=`@YV3"E]fB@\:!]_'eWf";aXGh6>Z'X0m4<u&`V59e%,[\J
%@KQXDfijj6GU.H#R1>/$!nDMoC80SD:,)(ccG&>M'F4bhbF77g@q4uFit(>#fPm;a7@n<O,IJO*ZMb9\+V.]W?,Uciam.?co;Z>D
%7ADjc5RD/*U'Rn,CS;0Q+9:,.-skJ/VPYm],B_XmN'Xh1\K(JTROJDjp232BT^nT/euC5>W0WO)r<PAa.)H[:[t#c0k?r3nNJ$se
%6EWIu+E:^_#566#Hu<-^Fjr!%,L>6qKM%B+#oRO^G<YgAXTQPl)hfMP^f[.U5]/Va2k1,L'MEaI57XjiBcb<0:M'8Z`GaDf;tW't
%VekpAYZIG(BrD#bSX<,E!g+rb0)/>t'Ft0sFC-Mk?J"Uqj:O\c",32_`=6oa7H8&BVQt<MGp<gXHQ_XgZX^9a580r;:Bum)T!ssi
%,2T-J_E[AHlf&&NYti+<0DGh&Y&EV?X#^eLcW^l,&uEp@%)ZRm.!mo%9sKsmh9qKf'(F!iO+nqC[)]"_oJYtp=c6$PFe)f>@jQ.0
%NP3Wn85/OJK'j,n/<NAJ8LD3)!,/^YRS:*reQEemb!KZ8']?&8)i6'@i*SUF1kN_Pl9&\BLs98$==G&@Mg/rL^XRM67NZdCF,R<?
%k.YL`6CsnI2Kknc&C))/f>)*B/(_\S#E91m")T)Xcd3RLd^dE^1',X<m:/rg3NO%/5ug`;D/3`K4R>JHA%@:bmBJT'?_neag<p2*
%9T"+gXbD&;dM>MbHN5DZ[Fi0k><uuRXXu>iKshVS7)8k0e#oh%hA1\#C_t-f$B8)_Q,Q4a8j;SBDZmb;&NG,Dj&*;CGC<d0&,GH(
%+,Iat+r/^ioAHL\7+?r/^@ai^bTkfG8>833<))mO5:i):\.G\77be_-N!8P8a8t&[%&c^7^bMM;J#FFinRfFWD/l6Dg?d"&W.&EJ
%"r&_+R3C'O_m0dJLr%.%W"m@8\OZ)[#FnCtb)#uT2MLA[l5dd]-"o_':P.B]1pW12:"9pb-ZHba(aN`o2M(7G\='n5-t_[*)PK9A
%#Rg^*<BZ&KWd2Jc'g[H_m"f`U*C[n,QFDAuBTVT_^0#ZK[<eP.e#h.U-Q'$#l=nTu"GTnY[mA".&=Q=ZX9_jGMDh?r="BTsY0'm3
%,e@-;Gm&1Y:ukWA#!n=t-]\HE'[;!KUC&Os.5HXSUf(9u!$uV^>n$p[Z%uilI#>T?MN55i.Wa)knH2nV2!V0X@nJ5XC!9[qD0.L5
%/!E=a.00c&GKCa*"P'hc?C7$c_pq.VB9E"-Dp,bjAm$q2L$!2=2G<O6+b;#*Y>/4qNI$3EWGW2`mODAjKJ[?7ADa\K5$J[<TpmDP
%I+^=^5<"M\Nu:*l+)M\nbG+ab>K\2qAJDG+OOtDNM)K"qH+dkoXqo^'7U@"\C[K@ah)kQ<P^%ReHU]\SnJgg]XAD7q/d7;rPtHNA
%@ELc/`cDbcKfcc<4!;s!qJ-3`LW>[7kT%G#'R$J\d4n\V:=,=E>Rc6<L:%Tn)THGram97b!Bu[72O8!J\16uIar^]],c5AD^d3SY
%+:gUb/El1-p^KJ6bAS4_+.-b.bqgA7<4Spkp82sYJ!f.D)e!3"?L>fE)'fu>.L_>lLf:Z]DP?pr2Nrn9#1C$NDt!j0Y<!`8.H[gY
%l]BU4a=f@f*"X1B^!\,/0)4.^G1.<mip9CsDPG9[hL+\0`CUrm9bN,M@!EO<@aHsp4?\6Y5hn=8k0shdnm:V@i=k4$irs`60U7=Q
%aEOqtUZ/3s<!'^^>@Y=^@EPE9+r(=BDK&V6-S-d2`<:;INt^^jBrom:"61(H'Dnfm^:j?QLkA[3YSKc"pY0pW?G,Lj&oGKgIE+;#
%;?"hWJZ1ZL_HQcBUruW^!nDn7-ARA?CaXWd*ko76ql=$`TU0FeIu/7]p/FY^__R>8n^DC=K,Z:OAVNhkBQ9bs,Ug,/07r+=*h^YV
%.Ra>sAe!.U=U]g\TthJPaN?1o-jGFQes7?2LLY#,M`)FmT2kqfm;Mj]P`+)^\s)'qXph"pnFL69L2c<hCpF&tEG?X\'V+f>RZe7l
%Z^i')Og2,1Vh[;!XG(EJ-9Kii=KTR*+Cq'%)eqeGSUK7\32pLt6fIc+Kt0[^Ushd6iuGMP`/&I*U&1(_)^K%c!eqml6_B@u%AkJ6
%($d\S)aG2D9o/m5G+`qhMP=).^\2Sa;W**0k=['-\mde?i$3cd/1?a9o'3XbO;2NBE!At)q:N+c?nf1Y;Sa?iT&1J`@YiC$s)!B0
%1F7k^WieC#6Yua;T)/03Vc(H<jP5HHU,UaNUl*d7meKfP%@I2=H8H$o*"UVXU,f#7\RQD\hd]+R%HIS^RUL]>;ujeYO^.A5Er_-'
%Q,nT@JtZ6/\tgo#4q%t?FurP2Or%8*"r>UbhiOl2p9bu'DZL_ZBSr\*+iQ^L3O`8WbseiheWgGd;U7fd2Dm)$3DG&,@44u.J1^uJ
%n:Z6CgVp^>QBAS]%Q1DKG-c[iFiJKL8R*qD,!pk_*>X,ko99"r?&,7<;VL1t=`Or?*Tnb0D,Z`_JDTIB2_HMe1H.Z+M'8p:0VdcU
%81(_-)%.YS%T_+VWc+^=K/=,r%-L="4/^OJI/,'iZO!c!Wj<RVI>&Sk@dPsa-_Y8XnY*5*phi^FPa$1hf%(]^$O)PMKjEmHU>>B0
%!8hT?PZO`uK/q_H5.`6r\/HOKBfoKWbpkT)6HFeV#)jJ>/e41(^hjgI7&-UX-Y_&3D:<ZjD1X_m[SNg#.HDXB>9"T81`7UFqaNte
%h`\ZCY74Q;X$"$?FGZ8>oU-9P%d>Ym;;Mh?Ls+p=7Yrd.JVYU?'*X"o[VJgq.7LOR,jQ?8n<:g=p?/uTHl-NQL,H.5h*'E89:*mX
%EMNX+[:YG^&cE,76tZ%hl9(bgB2D>E=I[TN;0t"'e`0[gb%Y$<OM#uP@UPH8pJmp[0f_b2)iV=CY<Z3cnYV\WP9<$RhQ%gBf<)O=
%W>NQ6^C(LT[&V>%,&kM.^#`Xoe(Q.iKuB]n0'j6upP)T!@Gbt>%\1_m*nU:T0;5sBpW#9qd6q8I;3Yu>rjjs>Qbu.>V=3\.['O3]
%m@c"%NSBc`LY!5f\.bKb`XXuVk'%\/RgJEGo#%&P9c$aFArkLgqiQoX`]43un?g1PG&c/[-f9?-5m5Q\6a?%LmE$h_J"u,B*UBs$
%/C-Ln#FE]SD^Cro[uSS][G\[Gi]o%n>:dCpg21KjVo-\;(#,L?i1]LY=CX:[/]XAX+\5WNl'A_Uj_0eqg"5d#fc"X_5.W%a4%P[4
%0G2LAl\cqbYc3);TAJ'gB1(K?OXijZ+D:;^qeV(CGp5T.SAt%qa5;#n?HF@l0*c+s>e:.:Vb5cr5=h=j@ePj97C*>h=rnM#>8rn2
%h+BT$!$c3[363H`L#O4%X:u$bD2"aNOXJn_pDiSIL:EcV)GkJtEt;k@d=noqT`p'cESpWNnQHUE.tB#uPa82shBV*DRhk+s=_oq(
%^j+s8':CSMR%>moh\0fD270aY-o8>?gfZR@%@`NQD9\olBE4kO1s$n,7cu0a6-b$,Z-^UM-$UW.1+#*se7c=;;ZSO'7hDCTb.nS"
%7rKPL.Ve`\CT+L*mg]Na-!)=s!2FIOY67'G5`oc9nfn0](uEsC0eF`96PH0P-sd"O$(@[:VUE]WpVkN/cb_4Chi=,8*[E8!aN`!l
%kNhF9(_G8HM.`$/e:;6]YSS8R"&4Ne.?-1e<N_CpX5klhBk02:Pe#/O.r"<XJVH%&YG7,qT"TqZ7#!?K#4NB:8KL8F3O(gZ[Mf]n
%.,BdK1mPlcYYh^!I%"8E%IHdN,?XD3q)(oECGTSQQ@ns=N_CepG2k5q8=10D+'AcU)$k\FG!Z",*\MWj1Fij5>5@=W/ONmn^t"!.
%WBf0WL&fY4[0G8(.+X4,P1B-,8IL+V?WoN<KV%$a&$oh0AZ`/OLV7c0;Bup3R;Yq5J>J*sjt-S\h)PC3ADE:3Z*$8/Om,RZ`K/62
%&gJOJgQd<!H"0kV/#"o)=SVH`YKBVQ]OUDlPD8_"i#U/i(n73S+c==%5br^fMV8'7@^5uQCeO-3H:_r`"Y!qo(4\[[cGi)-Z3-;2
%kgJR8A2?Rc+sNF]gnuU&>1UN@oe)Y^$+P#t`gc.6^]bUjXmI'OC(E`c:#?MPUU1$f1[Gd@'3M@k2+C++YoBX%A/*iu'MhhEOrfY2
%6'cE_`:KBnMA:/dgH&`_;Ki.g1OY$2A>[5_F]_N[JssV8J@MJdhP[Ym[(;oiZ1JM[pl-%1'YD90p-9DA>t]pah\?49Tdnc-/9?k5
%(DFeU0r?,`&KtbbKa]In?3+)>8POMfSr+4#cerT#Hd096HC%q[dTLX0-fF)S.iEuO4Y(;]1FYQ%a<;4OKb]j+Xq3sIB87Xu*#(+.
%e6I8PluH$;FZ:oZDb4\Xq`2brrj7bf,0M>MZQ(8ATFG*t!X%09E?pB,G!Khn'"r,3H70'\YqeV-f+pn(c2bNmGEER3^SGKK[on&5
%<%PGo''lkG0!<4WEl6)aoK</J?;>*d`ADM1"crDnkRL<%QC[D(&kucDMO%Kg"pRJ6`c:d*W/_>LOAn<7M,h4B`GPBTb9R>?X?7g[
%fH'$d!Rthe:k9RnpJ&br^nYgm[\IW=[hCOQB@DKcP3m&9a_Z/Xi\8b@2#qHtldpkZFM#r%X)pn%4*kXR051f)r1m1Ti*n@iTcA!N
%>C.Ar-/Sr^TlaYX?bY2n?OkmN9"9;@T%8+Xrqd_a'E@X,p&G!PpV2"Jc&^c]nE.u1puc"4o@n3`cQBmsmc1c@r6p/lm2s(<r9_B\
%hg^\KJ,:>RVha1/nEh=sq"l/IIJC_KIfF&fi/dRRr:</Qo&'GuJ,2t@%3hTXec~>
%AI9_PrivateDataEnd
